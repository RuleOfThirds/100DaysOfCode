{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport helpText from '../static/helpText';\nimport { Drawer, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 10\n  },\n  helpContainer: {\n    zIndex: 2,\n    minHeight: '40vh',\n    position: 'fixed',\n    padding: 20\n  }\n}));\nexport default function InfoDrawer({\n  step,\n  isOpen,\n  handleDrawer\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const steps = () => {\n    switch (step) {\n      case 0:\n        return helpText[0];\n\n      case 1:\n        return helpText[1];\n\n      case 2:\n        return helpText[2];\n\n      case 3:\n        return helpText[3];\n\n      default:\n        return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"right\",\n    open: isOpen,\n    onClose: handleDrawer,\n    variant: \"persistent\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: step <= 3 ? /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"p\",\n        color: \"textSecondary\",\n        children: steps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoDrawer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = InfoDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoDrawer\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js"],"names":["React","helpText","Drawer","Typography","makeStyles","useStyles","theme","root","padding","helpContainer","zIndex","minHeight","position","InfoDrawer","step","isOpen","handleDrawer","classes","steps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SACEC,MADF,EAEEC,UAFF,QAGO,mBAHP;AAIA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE;AADL,GADiC;AAIvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,SAAS,EAAE,MAFE;AAGbC,IAAAA,QAAQ,EAAE,OAHG;AAIbJ,IAAAA,OAAO,EAAE;AAJI;AAJwB,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASK,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAApB,EAAoD;AAAA;;AACjE,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;;AAEA,QAAMa,KAAK,GAAG,MAAM;AAClB,YAAQJ,IAAR;AACE,WAAK,CAAL;AACE,eAAOb,QAAQ,CAAC,CAAD,CAAf;;AACF,WAAK,CAAL;AACE,eAAOA,QAAQ,CAAC,CAAD,CAAf;;AACF,WAAK,CAAL;AACE,eAAOA,QAAQ,CAAC,CAAD,CAAf;;AACF,WAAK,CAAL;AACE,eAAOA,QAAQ,CAAC,CAAD,CAAf;;AACF;AACE,eAAO,KAAP;AAVJ;AAYD,GAbD;;AAeA,sBACE,QAAC,MAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,IAAI,EAAEc,MAFR;AAGE,IAAA,OAAO,EAAEC,YAHX;AAIE,IAAA,OAAO,EAAC,YAJV;AAAA,2BAME;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACV,IAAxB;AAAA,gBAEEO,IAAI,IAAI,CAAR,gBAEE,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,GADZ;AAEE,QAAA,KAAK,EAAC,eAFR;AAAA,kBAIII,KAAK;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF,GAQE;AAVJ;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAxCuBL,U;UACNR,S;;;KADMQ,U","sourcesContent":["import React from 'react';\nimport helpText from '../static/helpText';\nimport {\n  Drawer,\n  Typography,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 10,\n  },\n  helpContainer: {\n    zIndex: 2,\n    minHeight: '40vh',\n    position: 'fixed',\n    padding: 20,\n  },\n}));\n\nexport default function InfoDrawer({ step, isOpen, handleDrawer }) {\n  const classes = useStyles();\n\n  const steps = () => {\n    switch (step) {\n      case 0:\n        return helpText[0]\n      case 1:\n        return helpText[1]\n      case 2:\n        return helpText[2]\n      case 3:\n        return helpText[3]\n      default:\n        return false\n    }\n  }\n\n  return (\n    <Drawer\n      anchor='right'\n      open={isOpen}\n      onClose={handleDrawer}\n      variant='persistent'\n    >\n      <div className={classes.root}>\n      {\n        step <= 3\n        ? \n          <Typography \n            component=\"p\" \n            color=\"textSecondary\"\n          >\n            { steps() }\n          </Typography>\n        : false\n      }\n      </div>\n    </Drawer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}