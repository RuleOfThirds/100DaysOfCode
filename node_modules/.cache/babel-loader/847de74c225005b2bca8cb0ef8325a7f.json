{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MetricSelector from '../Components/MetricSelector';\nimport ImperialSelector from '../Components/ImperialSelector';\nimport spirits from '../static/spirits';\nimport { Container, TextField, FormControl, FormControlLabel, Select, InputLabel, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function BaseSpirit() {\n  _s();\n\n  const classes = useStyles();\n  const [isMetric, setIsMetric] = useState(false);\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        color: \"secondary\",\n        id: \"metric\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this),\n      label: \"Metric\",\n      onChange: handleIsMetric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ingredient\",\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          className: classes.input\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"search-filter\",\n          children: \"Filter by\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"\",\n          id: \"search-filter\",\n          children: /*#__PURE__*/_jsxDEV(\"optgroup\", {\n            label: \"Base Spirit\",\n            children: spirits.map((spirit, id) => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: spirit,\n                \"aria-label\": spirit,\n                children: spirit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 28\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), isMetric ? /*#__PURE__*/_jsxDEV(MetricSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ImperialSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BaseSpirit, \"jf44rWN/94VJdkTdJsIHJfMRg60=\", false, function () {\n  return [useStyles];\n});\n\n_c = BaseSpirit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseSpirit\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js"],"names":["React","useState","MetricSelector","ImperialSelector","spirits","Container","TextField","FormControl","FormControlLabel","Select","InputLabel","Checkbox","makeStyles","useStyles","theme","formContainer","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","BaseSpirit","classes","isMetric","setIsMetric","handleIsMetric","className","map","spirit","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,WAHF,EAIEC,gBAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,QAPF,QAQO,mBARP;AASA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,iBADJ;AAEbC,IAAAA,OAAO,EAAE,EAFI;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADsB;AAMrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAN8B;AASrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC;AATwB,CAAL,CAAN,CAA5B;AAeA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAM4B,cAAc,GAAG,MAAM;AAC3BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAED,OAAO,CAACX,aAA5C;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,QAA/B;AAAwC,QAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADX;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,QAAQ,EAAEc;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,UAAU,EAAE;AACVC,UAAAA,SAAS,EAAEJ,OAAO,CAACP;AADT;AALd;AAAA;AAAA;AAAA;AAAA,cADF,eAUF,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEO,OAAO,CAACL,WAAhC;AAAA,gCACU,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADV,eAEU,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAC,EAArB;AAAwB,UAAA,EAAE,EAAC,eAA3B;AAAA,iCACE;AAAU,YAAA,KAAK,EAAC,aAAhB;AAAA,sBAEEjB,OAAO,CAAC2B,GAAR,CAAY,CAACC,MAAD,EAASC,EAAT,KAAgB;AAC1B,kCAAO;AAAQ,gBAAA,KAAK,EAAED,MAAf;AAAuB,8BAAYA,MAAnC;AAAA,0BAA4CA;AAA5C;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFD;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cAVE;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EA8BIL,QAAQ,gBACJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAEJ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAhCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA7CuBF,U;UACNZ,S;;;KADMY,U","sourcesContent":["import React, { useState } from 'react';\nimport MetricSelector from '../Components/MetricSelector';\nimport ImperialSelector from '../Components/ImperialSelector';\nimport spirits from '../static/spirits';\nimport {\n  Container,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  Select,\n  InputLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function BaseSpirit() {\n  const classes = useStyles();\n  const [isMetric, setIsMetric] = useState(false);\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric)\n  }\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.formContainer}>\n      <FormControlLabel\n        control={<Checkbox color=\"secondary\" id=\"metric\" size=\"small\" />}\n        label=\"Metric\"\n        onChange={handleIsMetric}\n      />\n      <div>\n        <TextField \n          id='ingredient'\n          label='Ingredient'\n          variant='outlined'\n          margin='normal'\n          InputProps={{\n            className: classes.input\n          }}\n        />\n    <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"search-filter\">Filter by</InputLabel>\n              <Select defaultValue=\"\" id=\"search-filter\">\n                <optgroup label='Base Spirit'>\n                {\n                  spirits.map((spirit, id) => {\n                    return <option value={spirit} aria-label={spirit}>{spirit}</option>\n                  })\n                }\n                </optgroup>\n              </Select>\n            </FormControl>\n      </div>\n      {\n        isMetric\n          ? <MetricSelector />\n          : <ImperialSelector />\n      }\n    </Container>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}