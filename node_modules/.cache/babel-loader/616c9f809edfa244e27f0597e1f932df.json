{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    //backgroundColor: theme.palette.primary.background,\n    backgroundColor: '#202020',\n    color: '#202020',\n    justifyContent: 'center'\n  }\n}));\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst UserContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userImage, setUserImage] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n  const storageRef = firebase.storage().ref();\n\n  const signin = (email, password) => {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    }).catch(e => setError(e.message)).finally(() => {\n      setLoading(false);\n      setError(null);\n    });\n  };\n\n  const signup = (displayName, phone, email, password) => {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      const userData = Object.assign({}, {\n        id: response.user.uid,\n        email,\n        displayName,\n        phone,\n        bio: '',\n        twitter: '',\n        instagram: '',\n        website: '',\n        picture: '',\n        favorites: []\n      });\n      firebase.firestore().collection(\"users\").doc(response.user.id).set(userData);\n    }).catch(e => setError(e.message)).finally(() => {\n      setLoading(false);\n      setError(null);\n    });\n  };\n\n  const signout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n      setError(null);\n    });\n  };\n\n  const updateUser = userData => {\n    const userRef = firebase.firestore().collection(\"users\");\n\n    if (user) {\n      return userRef.doc(user.id).update(userData).then(() => {\n        console.log(\"successfully updated user\");\n      }).catch(e => setError(e));\n    }\n  };\n  /*\n  const updateUserProfile = (imageURL) => {\n    const user = firebase.auth().currentUser\n    user.updateProfile({photoURL: imageURL})\n      .then(() => {\n        console.log(\"Image url: \", firebase.auth().currentUser.photoURL, \"User data: \", user)\n      })\n      .catch((e) => console.log(e))\n  }\n  */\n\n\n  const uploadImageToStorage = (image, name) => {\n    //    const imageRef = storageRef.child(`${user.id}/images/${name}`)\n    const imageRef = storageRef.child(name); // This successfully updates the user's picture in Firestore. Now to just get it to display on Profile\n\n    imageRef.put(image).then(snapshot => {\n      imageRef.getDownloadURL().then(url => {\n        updateUser({\n          picture: url\n        });\n      });\n    }).catch(e => setError(e));\n  };\n\n  const sendContactEmail = formData => {\n    const emailRef = firebase.firestore().collection(\"emails\");\n    return new Promise((resolve, reject) => {\n      emailRef.add({\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone || '',\n        message: formData.message,\n        time: new Date()\n      }).then(() => resolve(console.log(\"Successfully added email to database\"))).catch(e => {\n        reject(\"Failed to submit contact form. Perhaps you forgot to fill out a required input?\");\n      });\n    });\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => true).catch(e => setError(e));\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => true);\n  };\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(googleAuth).then(response => {\n      //const cred = response.credential;\n      //const token = cred.token;\n      setUser(response.user);\n      return response.user;\n    }).finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"From useEffect: \", user.photoURL);\n        userRef.doc(user.uid).get().then(document => {\n          const userData = document.data();\n          setUser(userData);\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n        setUser(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    // the user object\n    error,\n    // the error message\n    loading,\n    // the loading boolean\n    signin,\n    signup,\n    signout,\n    signInWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    updateUser,\n    uploadImageToStorage,\n    sendContactEmail\n  };\n}\n\n_s2(useProvideAuth, \"5iDkK0QSvFrpINoqk4a2nr0WxxQ=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s3();\n\n  const auth = useProvideAuth();\n  const classes = useStyles();\n\n  if (auth.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(AuthProvider, \"gswGbzuEikHRan6AN9/fVPXhO3E=\", false, function () {\n  return [useProvideAuth, useStyles];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js"],"names":["useState","useEffect","useContext","createContext","firebase","CircularProgress","makeStyles","useStyles","theme","root","display","backgroundColor","color","justifyContent","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENT_ID","initializeApp","UserContext","useAuth","useProvideAuth","user","setUser","loading","setLoading","error","setError","userImage","setUserImage","googleAuth","auth","GoogleAuthProvider","storageRef","storage","ref","signin","email","password","signInWithEmailAndPassword","then","response","catch","e","message","finally","signup","displayName","phone","createUserWithEmailAndPassword","userData","Object","assign","id","uid","bio","twitter","instagram","website","picture","favorites","firestore","collection","doc","set","signout","signOut","updateUser","userRef","update","console","log","uploadImageToStorage","image","name","imageRef","child","put","snapshot","getDownloadURL","url","sendContactEmail","formData","emailRef","Promise","resolve","reject","add","time","Date","sendPasswordResetEmail","confirmPasswordReset","code","signInWithGoogle","signInWithPopup","unsubscribe","onAuthStateChanged","photoURL","get","document","data","AuthProvider","children","classes"],"mappings":"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","sourcesContent":["import { \n  useState, \n  useEffect,\n  useContext,\n  createContext \n} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    //backgroundColor: theme.palette.primary.background,\n    backgroundColor: '#202020',\n    color: '#202020',\n    justifyContent: 'center',\n  },\n}));\n\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst UserContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(UserContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [userImage, setUserImage] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n  const storageRef = firebase.storage().ref();\n\n  const signin = (email, password) => {\n    setLoading(true)\n\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(response => {\n        setUser(response.user)\n        return response.user;\n      })\n      .catch((e) => setError(e.message))\n      .finally(() => {\n        setLoading(false)\n        setError(null)\n      })\n  }\n\n  const signup = (displayName, phone, email, password) => {\n    setLoading(true)\n\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        const userData = Object.assign({}, {\n          id: response.user.uid,\n          email,\n          displayName,\n          phone,\n          bio: '',\n          twitter: '',\n          instagram: '',\n          website: '',\n          picture: '',\n          favorites: [],\n        })\n        firebase.firestore().collection(\"users\").doc(response.user.id).set(userData)\n      })\n      .catch((e) => setError(e.message))\n      .finally(() => {\n        setLoading(false)\n        setError(null)\n      })\n  }\n\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false)\n        setError(null)\n      })\n  }\n\n  const updateUser = (userData) => {\n    const userRef = firebase.firestore().collection(\"users\");\n    if (user) {\n      return userRef\n        .doc(user.id)\n        .update(userData)\n        .then(() => {\n          console.log(\"successfully updated user\")\n        })\n        .catch((e) => setError(e))\n    }\n  }\n\n  /*\n  const updateUserProfile = (imageURL) => {\n    const user = firebase.auth().currentUser\n    user.updateProfile({photoURL: imageURL})\n      .then(() => {\n        console.log(\"Image url: \", firebase.auth().currentUser.photoURL, \"User data: \", user)\n      })\n      .catch((e) => console.log(e))\n  }\n  */\n\n  const uploadImageToStorage = (image, name) => {\n//    const imageRef = storageRef.child(`${user.id}/images/${name}`)\n    const imageRef = storageRef.child(name)\n\n    // This successfully updates the user's picture in Firestore. Now to just get it to display on Profile\n    imageRef\n      .put(image)\n      .then((snapshot) => {\n        imageRef.getDownloadURL().then((url) => {\n          updateUser({picture: url})\n        })\n      })\n      .catch((e) => setError(e))\n  }\n\n  const sendContactEmail = (formData) => {\n    const emailRef = firebase.firestore().collection(\"emails\");\n\n    return new Promise((resolve, reject) => {\n      emailRef.add({\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone || '',\n        message: formData.message,\n        time: new Date(),\n      })\n      .then(() => resolve(console.log(\"Successfully added email to database\")))\n      .catch((e) => {\n        reject(\"Failed to submit contact form. Perhaps you forgot to fill out a required input?\")\n      })\n    })\n  }\n\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => true)\n      .catch((e) => setError(e))\n  }\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => true)\n  }\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n\n    return firebase\n      .auth()\n      .signInWithPopup(googleAuth)\n      .then((response) => {\n        //const cred = response.credential;\n        //const token = cred.token;\n        setUser(response.user)\n        return response.user;\n      })\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(\"From useEffect: \", user.photoURL)\n        userRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setUser(userData)\n            setLoading(false)\n          })\n      } else {\n        setLoading(false)\n        setUser(false)\n      }\n    })\n\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    user,     // the user object\n    error,    // the error message\n    loading,  // the loading boolean\n    signin, \n    signup,\n    signout,\n    signInWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    updateUser,\n    uploadImageToStorage,\n    sendContactEmail,\n  };\n}\n\nexport function AuthProvider({ children }) {\n  const auth = useProvideAuth();\n  const classes = useStyles();\n\n  if (auth.loading) {\n    return (\n      <div className={classes.root}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    )\n  }\n\n  return (\n    <UserContext.Provider value={auth}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}