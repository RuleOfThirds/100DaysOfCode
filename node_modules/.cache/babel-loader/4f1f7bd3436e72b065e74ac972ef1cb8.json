{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Grid, TextField, IconButton, FormControl, Select, ListSubheader, MenuItem, Button, Typography, Slider, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport RemoveIcon from '@material-ui/icons/Remove';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  grid: {\n    //  display: 'grid',\n    gridGap: theme.spacing(2),\n    textAlign: 'center',\n    marginBottom: 7\n  },\n  inputField: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10\n  },\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  selector: {\n    marginLeft: 12,\n    width: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst types = [\"Base Spirit\", \"Modifier\", \"Non-alcoholic\"];\n\nconst RemoveButton = ({\n  onClick\n}) => /*#__PURE__*/_jsxDEV(RemoveIcon, {\n  fontSize: \"large\",\n  onClick: onClick,\n  style: {\n    cursor: \"pointer\"\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this);\n\n_c = RemoveButton;\n\nconst InputField = ({\n  id,\n  addIngredient,\n  onChange\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.inputField,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Ingredient Name\",\n      id: id,\n      name: \"name\",\n      variant: \"outlined\",\n      onChange: onChange,\n      InputProps: {\n        className: classes.input\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n        color: \"primary\",\n        fontSize: \"large\",\n        onClick: addIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputField, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = InputField;\nexport default function Ingredients() {\n  _s2();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm();\n  const [spiritObject, setSpiritObject] = useState({});\n  const [ingredients, setIngredients] = useState([]); // Success. Now get the Slider working too, and add an id field to spiritOject\n\n  const onSubmit = () => {\n    //    cocktail.addIngredients(ingredients)\n    console.log(\"Ingredients: \", ingredients);\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onAddIngredient = () => {\n    setIngredients([...ingredients, {\n      id: uuidv4(),\n      ...spiritObject\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    className: classes.formContainer,\n    id: \"ingredients\",\n    name: \"ingredients\",\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        onChange: e => onChangeInput(e),\n        addIngredient: onAddIngredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"ozSlider\",\n          gutterBottom: true,\n          children: \"Ounces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.grid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: /*#__PURE__*/_jsxDEV(Slider, { ...register('amount'),\n              id: \"amount\",\n              defaultValue: 1,\n              valueLabelDisplay: \"auto\",\n              step: 0.25,\n              min: 0.25,\n              max: 6,\n              marks: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(Select, { ...register('type'),\n                defaultValue: \"\",\n                id: \"spiritType\",\n                className: classes.selector,\n                onChange: e => onChangeInput(e),\n                children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n                  children: \"Ingredient Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), types.map((type, id) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 32\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : false]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ingredients, \"C8uRzkfcGeg+fRcmYKIF77qCkmA=\", false, function () {\n  return [useStyles, useCocktail, useForm];\n});\n\n_c3 = Ingredients;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RemoveButton\");\n$RefreshReg$(_c2, \"InputField\");\n$RefreshReg$(_c3, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","useForm","Controller","Grid","TextField","IconButton","FormControl","Select","ListSubheader","MenuItem","Button","Typography","Slider","Divider","makeStyles","v4","uuidv4","ExpandMoreIcon","AddBoxIcon","RemoveIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","grid","gridGap","spacing","textAlign","marginBottom","inputField","alignItems","justifyContent","margin","formControl","minWidth","selector","marginLeft","nextItem","buttonDiv","nextButton","borderRadius","textTransform","types","RemoveButton","onClick","cursor","InputField","id","addIngredient","onChange","classes","className","Ingredients","cocktail","register","handleSubmit","control","spiritObject","setSpiritObject","ingredients","setIngredients","onSubmit","console","log","onChangeInput","e","target","name","value","onAddIngredient","length","map","type"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,  \n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n  Divider,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  grid: {\n  //  display: 'grid',\n    gridGap: theme.spacing(2),\n    textAlign: 'center',\n    marginBottom: 7,\n  },\n  inputField: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 10,\n  },\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  selector: {\n    marginLeft: 12,\n    width: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst types = [\n  \"Base Spirit\",\n  \"Modifier\",\n  \"Non-alcoholic\",\n];\n\nconst RemoveButton = ({ onClick }) => (\n  <RemoveIcon\n    fontSize=\"large\"\n    onClick={onClick}\n    style={{ cursor: \"pointer\" }}\n  />\n);\n\nconst InputField = ({ id, addIngredient, onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.inputField}>\n      <TextField \n        label=\"Ingredient Name\"\n        id={id} \n        name='name' \n        variant='outlined'\n        onChange={onChange} \n        InputProps={{ className: classes.input}}\n      />\n      <IconButton>\n        <AddBoxIcon\n          color=\"primary\"\n          fontSize=\"large\"\n          onClick={addIngredient}\n        />\n      </IconButton>\n    </div>\n  );\n};\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const { register, handleSubmit, control } = useForm();\n  const [spiritObject, setSpiritObject] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n\n  // Success. Now get the Slider working too, and add an id field to spiritOject\n  const onSubmit = () => {\n//    cocktail.addIngredients(ingredients)\n    console.log(\"Ingredients: \", ingredients)\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  const onAddIngredient = () => {\n    setIngredients([...ingredients, {id: uuidv4(), ...spiritObject}])\n  }\n\n  return (\n    <form \n      noValidate \n      className={classes.formContainer}\n      id='ingredients'\n      name='ingredients'\n      onSubmit={handleSubmit(onSubmit)} \n    >\n    <div>\n      <InputField\n        onChange={(e) => onChangeInput(e)}\n        addIngredient={onAddIngredient}\n      />\n      {\n        ingredients.length > 0 ?\n          <div>\n            <Typography id=\"ozSlider\" gutterBottom>\n              Ounces\n            </Typography>\n            <Grid container className={classes.grid}>\n              <Grid item xs={10}>\n                <Slider\n                  {...register('amount')}\n                  id='amount'\n                  defaultValue={1}\n                  valueLabelDisplay=\"auto\"\n                  step={0.25}\n                  min={0.25}\n                  max={6}\n                  marks\n                />\n              </Grid>\n              <Grid item>\n                <FormControl variant=\"outlined\">\n                  <Select \n                    {...register('type')}\n                    defaultValue=\"\" \n                    id=\"spiritType\"\n                    className={classes.selector}\n                    onChange={(e) => onChangeInput(e)}\n                  >\n                    <ListSubheader>Ingredient Type</ListSubheader>\n                    {\n                      types.map((type, id) => {\n                        return <MenuItem key={id} value={type}>{type}</MenuItem>\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n            <Divider variant='fullWidth' />\n          </div> : false\n      }\n    </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}