{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/CardList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport { Container, Grid, Link, Card, CardActionArea, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport cocktailImage from '../assets/cocktail.jpg';\nimport { makeStyles } from '@material-ui/core/styles'; //const sizes = [175, 200, 215, 230, 245, 260, 285];\n\nconst sizes = [150, 195, 240, 285];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n    gridTemplateColumns: 'repeat(auto-fill, 250px)'\n  },\n  card: {\n    background: 'rgba(0,0,0,0.3)',\n    textAlign: 'center',\n    borderRadius: 16,\n    width: 220\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  },\n  text: {\n    fontFamily: 'Nunito'\n  }\n}));\nexport default function CardList({\n  data\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      className: classes.root,\n      children: data.map(card => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/cocktail\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              raised: true,\n              className: classes.card,\n              children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n                children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                  style: {\n                    height: sizes[Math.floor(Math.random() * 4)]\n                  },\n                  image: cocktailImage,\n                  title: \"MoonBoots\"\n                }, card.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    gutterBottom: true,\n                    variant: \"h5\",\n                    component: \"h2\",\n                    className: classes.text,\n                    children: card.name\n                  }, card.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    className: classes.content,\n                    justify: \"center\",\n                    children: card.ingredients.map(item => {\n                      return /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"textSecondary\",\n                        component: \"p\",\n                        children: item.name + \", \"\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 73,\n                        columnNumber: 31\n                      }, this);\n                    })\n                  }, card.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 23\n                  }, this)]\n                }, card.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 21\n                }, this)]\n              }, card.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)\n            }, card.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/CardList.js"],"names":["React","useFirebase","Container","Grid","Link","Card","CardActionArea","CardContent","CardMedia","Typography","cocktailImage","makeStyles","sizes","useStyles","theme","root","marginTop","spacing","gridTemplateColumns","card","background","textAlign","borderRadius","width","content","display","flexDirection","justifyContent","text","fontFamily","CardList","data","classes","map","height","Math","floor","random","id","name","ingredients","item"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport {\n  Container,\n  Grid,\n  Link,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\nimport cocktailImage from '../assets/cocktail.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//const sizes = [175, 200, 215, 230, 245, 260, 285];\nconst sizes = [150, 195, 240, 285];\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(1),\n    gridTemplateColumns: 'repeat(auto-fill, 250px)',\n  },\n  card: {\n    background: 'rgba(0,0,0,0.3)',\n    textAlign: 'center',\n    borderRadius: 16, \n    width: 220,\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  text: {\n    fontFamily: 'Nunito',\n  },\n}));\n\nexport default function CardList({ data }) {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth='xl'>\n      <Grid container spacing={3} className={classes.root}>\n      {\n        data.map((card) => {\n          return (\n            <Grid key={card.id} item>\n              <Link key={card.id} href=\"/cocktail\">\n                <Card key={card.id} raised className={classes.card}>\n                  <CardActionArea key={card.id}>\n                    <CardMedia\n                      key={card.id} \n                      style={{height: sizes[Math.floor(Math.random() * 4)]}}\n                      image={cocktailImage}\n                      title=\"MoonBoots\"\n                    />\n                    <CardContent key={card.id}>\n                      <Typography \n                        key={card.id}\n                        gutterBottom \n                        variant=\"h5\" \n                        component=\"h2\"\n                        className={classes.text}\n                      >\n                        {card.name}\n                      </Typography>\n                      <Grid container key={card.id} className={classes.content} justify='center'>\n                        {\n                          card.ingredients.map((item) => {\n                            return (\n                              <Typography \n                                key={item.id}\n                                variant=\"body2\" \n                                color=\"textSecondary\" \n                                component=\"p\" \n                              >\n                                {item.name+\", \"}\n                              </Typography>\n                            );\n                          })\n                        }\n                      </Grid>\n                    </CardContent>\n                  </CardActionArea>\n                </Card>\n              </Link>\n            </Grid>\n          )\n        })\n      }\n      </Grid>\n    </Container>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}