{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/UserAvatar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport { IconButton, Avatar, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    textAlign: 'center',\n    marginBottom: theme.spacing(3)\n  },\n  profilePic: {\n    height: theme.spacing(26),\n    width: theme.spacing(26),\n    cursor: \"pointer\"\n  }\n})); // This should be added to Settings so you can \n\nexport default function UserAvatar() {\n  _s();\n\n  const classes = useStyles();\n  const firebase = useFirebase();\n  const [image, setImage] = useState(firebase.user.picture);\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleImageChange = event => {\n    setFile(event.target.files[0]);\n    const imageFile = URL.createObjectURL(event.target.files[0]);\n    setImage(imageFile);\n  }; // Success... ish. This works, but it feels gross and dirty. \n\n\n  const onUploadImage = event => {\n    event.preventDefault();\n\n    if (file.size > 2097152) {\n      setError(\"This file is too large\");\n    } else {\n      firebase.uploadImageToStorage(file).then(url => {\n        //setImage(url); <- don't think I need that there now..\n        firebase.updateUser({\n          picture: url\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onUploadImage,\n    className: classes.avatar,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      accept: \"image/*\",\n      hidden: true,\n      id: \"photo-upload\",\n      type: \"file\",\n      onChange: e => handleImageChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"photo-upload\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        component: \"span\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.profilePic,\n          src: image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }, this) : false]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !file,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserAvatar, \"rX7xQz+pWXRA8GMVWTG6AeJZwMs=\", false, function () {\n  return [useStyles, useFirebase];\n});\n\n_c = UserAvatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAvatar\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/UserAvatar.js"],"names":["React","useState","useEffect","useFirebase","IconButton","Avatar","Button","makeStyles","useStyles","theme","avatar","textAlign","marginBottom","spacing","profilePic","height","width","cursor","UserAvatar","classes","firebase","image","setImage","user","picture","file","setFile","error","setError","handleImageChange","event","target","files","imageFile","URL","createObjectURL","onUploadImage","preventDefault","size","uploadImageToStorage","then","url","updateUser","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport {\n  IconButton,\n  Avatar,\n  Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    textAlign: 'center', \n    marginBottom: theme.spacing(3),\n  },\n  profilePic: {\n    height: theme.spacing(26),\n    width: theme.spacing(26),\n    cursor: \"pointer\",\n  },\n}));\n\n// This should be added to Settings so you can \nexport default function UserAvatar() {\n  const classes = useStyles();\n  const firebase = useFirebase();\n  const [image, setImage] = useState(firebase.user.picture);\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const handleImageChange = (event) => {\n    setFile(event.target.files[0]);\n    const imageFile = URL.createObjectURL(event.target.files[0]);\n    setImage(imageFile);\n  }\n\n  // Success... ish. This works, but it feels gross and dirty. \n  const onUploadImage = (event) => {\n    event.preventDefault();\n\n    if (file.size > 2097152) {\n      setError(\"This file is too large\");\n    } else {\n    firebase.uploadImageToStorage(file).then((url) => {\n      //setImage(url); <- don't think I need that there now..\n      firebase.updateUser({picture: url});\n    })\n    }\n  }\n\n  return (\n    <form onSubmit={onUploadImage} className={classes.avatar}>\n      <input \n        accept=\"image/*\" \n        hidden \n        id=\"photo-upload\" \n        type=\"file\" \n        onChange={(e) => handleImageChange(e)} \n      />\n      <label htmlFor=\"photo-upload\">\n        <IconButton component=\"span\">\n          <Avatar \n            className={classes.profilePic} \n            src={image}\n          />\n        </IconButton>\n        {error ? <span>{error}</span> : false}\n      </label>\n      <Button type=\"submit\" disabled={!file}>Upload</Button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}