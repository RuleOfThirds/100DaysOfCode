{"ast":null,"code":"var _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CardList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Container, Grid, Card, CardActionArea, CardContent, CardMedia, Typography } from '@material-ui/core';\nimport cocktailImage from './assets/cocktail.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flex: 'center',\n    justifyContent: 'center'\n  },\n  card: {\n    background: 'rgba(0,0,0,0.3)',\n    textAlign: 'center',\n    borderRadius: 10,\n    minWidth: 320,\n    maxWidth: 345\n  },\n  cardMedia: {\n    height: 210\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  text: {\n    fontFamily: 'Nunito'\n  }\n}));\nexport default function CardList({\n  data\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      className: classes.root,\n      children: data.map(card => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            raised: true,\n            className: classes.card,\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.cardMedia,\n                image: cocktailImage,\n                title: \"MoonBoots\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  className: classes.text,\n                  children: card.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.content,\n                  children: card.ingredients.map(item => {\n                    return /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      component: \"p\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 69,\n                      columnNumber: 25\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CardList.js"],"names":["React","Container","Grid","Card","CardActionArea","CardContent","CardMedia","Typography","cocktailImage","makeStyles","useStyles","theme","root","flex","justifyContent","card","background","textAlign","borderRadius","minWidth","maxWidth","cardMedia","height","content","display","flexDirection","text","fontFamily","CardList","data","classes","map","name","ingredients","item","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Grid,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from '@material-ui/core';\nimport cocktailImage from './assets/cocktail.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flex: 'center',\n    justifyContent: 'center',\n  },\n  card: {\n    background: 'rgba(0,0,0,0.3)',\n    textAlign: 'center',\n    borderRadius: 10, \n    minWidth: 320,\n    maxWidth: 345,\n  },\n  cardMedia: {\n    height: 210,\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  text: {\n    fontFamily: 'Nunito',\n  },\n}));\n\nexport default function CardList({ data }) {\n  const classes = useStyles();\n\n  return (\n    <Container>\n    <Grid container spacing={4} className={classes.root}>\n    {\n      data.map((card) => {\n        return (\n          <Grid key={card.id} item>\n            <Card raised className={classes.card}>\n              <CardActionArea>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={cocktailImage}\n                  title=\"MoonBoots\"\n                />\n                <CardContent>\n                  <Typography \n                    gutterBottom \n                    variant=\"h5\" \n                    component=\"h2\"\n                    className={classes.text}\n                  >\n                    {card.name}\n                  </Typography>\n                  <div className={classes.content}>\n                  {\n                    card.ingredients.map((item) => {\n                      return (\n                        <Typography \n                          variant=\"body2\" \n                          color=\"textSecondary\" \n                          component=\"p\" \n                        >\n                          {item.name}\n                        </Typography>\n                      );\n                    })\n                  }\n                  </div>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        )\n      })\n    }\n    </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}