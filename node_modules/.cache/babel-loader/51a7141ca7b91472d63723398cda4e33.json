{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/CocktailProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect, createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nconst CocktailContext = /*#__PURE__*/createContext();\nexport const useCocktail = () => {\n  _s();\n\n  return useContext(CocktailContext);\n};\n\n_s(useCocktail, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useCocktailProvider() {\n  _s2();\n\n  const [theCocktailData, setTheCocktailData] = useState({});\n  const [cocktailIngredients, setCocktailIngredients] = useState([]);\n\n  const buildCocktailFromInput = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setTheCocktailData({ ...theCocktailData,\n      [name]: value\n    });\n    console.log(name, value);\n  };\n\n  const buildCocktailIngredients = event => {};\n\n  const addCocktailToFirestore = () => {};\n\n  const updateCocktailInFirestore = () => {};\n\n  const deleteCocktail = () => {};\n\n  return {\n    theCocktailData,\n    buildCocktailFromInput,\n    addCocktailToFirestore,\n    updateCocktailInFirestore,\n    deleteCocktail\n  };\n}\n\n_s2(useCocktailProvider, \"XSdJgqvDrn2WiSZf4bMBT8Hfc6c=\");\n\nexport function CocktailProvider({\n  children\n}) {\n  _s3();\n\n  const cocktail = useCocktailProvider();\n  return /*#__PURE__*/_jsxDEV(CocktailContext.Provider, {\n    value: cocktail,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(CocktailProvider, \"p2F/HEGyPwYCBXQTIzw0OTPeLk0=\", false, function () {\n  return [useCocktailProvider];\n});\n\n_c = CocktailProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CocktailProvider\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/CocktailProvider.js"],"names":["React","useState","useContext","useEffect","createContext","firebase","CocktailContext","useCocktail","useCocktailProvider","theCocktailData","setTheCocktailData","cocktailIngredients","setCocktailIngredients","buildCocktailFromInput","event","name","value","currentTarget","console","log","buildCocktailIngredients","addCocktailToFirestore","updateCocktailInFirestore","deleteCocktail","CocktailProvider","children","cocktail"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IACEC,QADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,aAJF,QAKO,OALP;AAMA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AAEA,MAAMC,eAAe,gBAAGF,aAAa,EAArC;AAEA,OAAO,MAAMG,WAAW,GAAG,MAAM;AAAA;;AAC/B,SAAOL,UAAU,CAACI,eAAD,CAAjB;AACD,CAFM;;GAAMC,W;;AAKb,SAASC,mBAAT,GAA+B;AAAA;;AAC7B,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,mBAAD,EAAsBC,sBAAtB,IAAgDX,QAAQ,CAAC,EAAD,CAA9D;;AAEA,QAAMY,sBAAsB,GAAIC,KAAD,IAAW;AACxC,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,aAA9B;AACAP,IAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACM,IAAD,GAAQC;AAA7B,KAAD,CAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBC,KAAlB;AACD,GAJD;;AAMA,QAAMI,wBAAwB,GAAIN,KAAD,IAAW,CAE3C,CAFD;;AAIA,QAAMO,sBAAsB,GAAG,MAAM,CACpC,CADD;;AAGA,QAAMC,yBAAyB,GAAG,MAAM,CACvC,CADD;;AAGA,QAAMC,cAAc,GAAG,MAAM,CAC5B,CADD;;AAGA,SAAO;AACLd,IAAAA,eADK;AAELI,IAAAA,sBAFK;AAGLQ,IAAAA,sBAHK;AAILC,IAAAA,yBAJK;AAKLC,IAAAA;AALK,GAAP;AAOD;;IA9BQf,mB;;AAgCT,OAAO,SAASgB,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAC7C,QAAMC,QAAQ,GAAGlB,mBAAmB,EAApC;AAEA,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEkB,QAAjC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAReD,gB;UACGhB,mB;;;KADHgB,gB","sourcesContent":["import React, { \n  useState,\n  useContext, \n  useEffect,\n  createContext,\n} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst CocktailContext = createContext();\n\nexport const useCocktail = () => {\n  return useContext(CocktailContext);  \n}\n\n\nfunction useCocktailProvider() {\n  const [theCocktailData, setTheCocktailData] = useState({});\n  const [cocktailIngredients, setCocktailIngredients] = useState([]);\n\n  const buildCocktailFromInput = (event) => {\n    const { name, value } = event.currentTarget;\n    setTheCocktailData({...theCocktailData, [name]: value});\n    console.log(name, value)\n  }\n\n  const buildCocktailIngredients = (event) => {\n    \n  }\n\n  const addCocktailToFirestore = () => {\n  }\n\n  const updateCocktailInFirestore = () => {\n  }\n\n  const deleteCocktail = () => {\n  }\n\n  return {\n    theCocktailData,\n    buildCocktailFromInput,\n    addCocktailToFirestore,\n    updateCocktailInFirestore,\n    deleteCocktail,\n  }\n}\n\nexport function CocktailProvider({ children }) {\n  const cocktail = useCocktailProvider();\n\n  return (\n    <CocktailContext.Provider value={cocktail}>\n      {children}\n    </CocktailContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}