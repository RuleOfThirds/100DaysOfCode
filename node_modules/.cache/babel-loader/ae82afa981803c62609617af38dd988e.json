{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Grid, TextField, IconButton, FormControl, Select, ListSubheader, MenuItem, Button, Typography, Slider, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport RemoveIcon from '@material-ui/icons/Remove';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  grid: {\n    gridGap: theme.spacing(5),\n    textAlign: 'center',\n    justifyContent: 'center'\n  },\n  ingredientsList: {\n    padding: 5,\n    backgroundColor: theme.palette.background.secondary\n  },\n  slider: {\n    marginTop: 20\n  },\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  divider: {\n    margin: 25\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\n\nconst RemoveButton = ({\n  onClick\n}) => /*#__PURE__*/_jsxDEV(RemoveIcon, {\n  fontSize: \"large\",\n  onClick: onClick,\n  color: \"secondary\",\n  style: {\n    cursor: \"pointer\"\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 3\n}, this);\n\n_c = RemoveButton;\n\nconst NextButton = ({\n  onClick\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.buttonDiv,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.nextButton,\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"outlined\",\n      endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }, this),\n      onClick: onClick,\n      children: \"Keep going\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NextButton, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = NextButton;\n\nconst ImperialSlider = ({\n  onChange\n}) => {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    id: \"amount\",\n    name: \"amount\",\n    defaultValue: 1,\n    valueLabelDisplay: \"auto\",\n    step: 0.25,\n    min: 0.25,\n    max: 6,\n    marks: true,\n    onChange: onChange,\n    className: classes.slider\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ImperialSlider, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = ImperialSlider;\n\nconst MetricSlider = ({\n  onChange\n}) => {\n  _s3();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    id: \"amount\",\n    name: \"amount\",\n    defaultValue: 15,\n    valueLabelDisplay: \"auto\",\n    step: 5,\n    min: 5,\n    max: 80,\n    marks: true,\n    onChange: onChange,\n    className: classes.slider\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(MetricSlider, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c4 = MetricSlider;\n\nconst DashSlider = ({\n  onChange\n}) => {\n  _s4();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    id: \"amount\",\n    name: \"amount\",\n    defaultValue: 2,\n    valueLabelDisplay: \"auto\",\n    step: 1,\n    min: 1,\n    max: 10,\n    marks: true,\n    onChange: onChange,\n    className: classes.slider\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s4(DashSlider, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c5 = DashSlider;\nexport default function Ingredients() {\n  _s5();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const units = [\"fl. oz\", \"ml\", \"dash\"];\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [unitType, setUnitType] = useState(units[0]);\n  const [spiritObject, setSpiritObject] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  const [fieldValues, setFieldValues] = useState('');\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setFieldValues(e.target.value);\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onAddIngredient = () => {\n    setIngredients([...ingredients, {\n      id: uuidv4(),\n      ...spiritObject\n    }]);\n    setIsVisible(false);\n    setFieldValues('');\n  };\n\n  const onRemoveIngredient = id => {\n    console.log(ingredients.findIndex(ingredient => ingredient.id === id));\n    setIngredients(ingredients.filter(ingredient => ingredient.id !== id));\n  };\n\n  const onHandleNext = () => {\n    cocktail.addIngredients(ingredients);\n    cocktail.handleNext();\n  };\n\n  const onSubmit = () => {\n    console.log(ingredients);\n    setFieldValues('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        textAlign: 'center'\n      },\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, { ...register(\"name\", {\n          required: true\n        }),\n        label: \"Ingredient Name\",\n        variant: \"outlined\",\n        value: fieldValues,\n        onChange: e => onChangeInput(e),\n        InputProps: {\n          className: classes.input\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n          color: \"primary\",\n          fontSize: \"large\",\n          onClick: () => setIsVisible(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), isVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.grid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            children: unitType === 'ml' ? /*#__PURE__*/_jsxDEV(MetricSlider, {\n              onChange: onChangeSlider(\"amount\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this) : unitType === 'fl. oz' ? /*#__PURE__*/_jsxDEV(ImperialSlider, {\n              onChange: onChangeSlider(\"amount\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(DashSlider, {\n              onChange: onChangeSlider(\"amount\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                name: \"unit\",\n                defaultValue: unitType,\n                id: \"spiritType\",\n                className: classes.selector,\n                onChange: e => {\n                  setUnitType(e.target.value);\n                  onChangeInput(e);\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n                  children: \"Unit Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), units.map((unit, id) => {\n                  return /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: unit,\n                    children: unit\n                  }, id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 34\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.nextButton,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"outlined\",\n          onClick: onAddIngredient,\n          children: \"Add Ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this) : false, /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), ingredients.map((ingredient, id) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classes.ingredientsList,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(RemoveButton, {\n              onClick: () => onRemoveIngredient(ingredient.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Name: \", ingredient.name]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Amount: \", ingredient.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"fullWidth\",\n            className: classes.divider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(NextButton, {\n      onClick: onHandleNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 34\n    }, this) : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n}\n\n_s5(Ingredients, \"NtvOyv4oV3goo0sJdW2Tsqa4ecc=\", false, function () {\n  return [useStyles, useCocktail, useForm];\n});\n\n_c6 = Ingredients;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"RemoveButton\");\n$RefreshReg$(_c2, \"NextButton\");\n$RefreshReg$(_c3, \"ImperialSlider\");\n$RefreshReg$(_c4, \"MetricSlider\");\n$RefreshReg$(_c5, \"DashSlider\");\n$RefreshReg$(_c6, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","useForm","Controller","Grid","TextField","IconButton","FormControl","Select","ListSubheader","MenuItem","Button","Typography","Slider","Divider","makeStyles","v4","uuidv4","ExpandMoreIcon","AddBoxIcon","RemoveIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","grid","gridGap","spacing","textAlign","justifyContent","ingredientsList","palette","background","secondary","slider","marginTop","formControl","margin","minWidth","nextItem","alignItems","divider","nextButton","borderRadius","textTransform","RemoveButton","onClick","cursor","NextButton","classes","buttonDiv","ImperialSlider","onChange","MetricSlider","DashSlider","Ingredients","cocktail","units","register","handleSubmit","formState","errors","unitType","setUnitType","spiritObject","setSpiritObject","ingredients","setIngredients","isVisible","setIsVisible","fieldValues","setFieldValues","onChangeSlider","name","event","newValue","onChangeInput","e","target","value","onAddIngredient","id","onRemoveIngredient","console","log","findIndex","ingredient","filter","onHandleNext","addIngredients","handleNext","onSubmit","required","className","selector","map","unit","amount","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,  \n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n  Divider,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  grid: {\n    gridGap: theme.spacing(5),\n    textAlign: 'center',\n    justifyContent: 'center',\n  },\n  ingredientsList: {\n    padding: 5,\n    backgroundColor: theme.palette.background.secondary,\n  },\n  slider: {\n    marginTop: 20,\n  },\n  formControl: {\n    display: 'flex',\n    flexDirection: 'row',\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  divider: {\n    margin: 25,\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst RemoveButton = ({ onClick }) => (\n  <RemoveIcon\n    fontSize=\"large\"\n    onClick={onClick}\n    color=\"secondary\"\n    style={{ cursor: \"pointer\" }}\n  />\n);\n\nconst NextButton = ({ onClick }) => {\n  const classes = useStyles(); \n  \n  return (\n    <div className={classes.buttonDiv}>\n      <Button\n        className={classes.nextButton}\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"outlined\"\n        endIcon={<ExpandMoreIcon />}\n        onClick={onClick}\n      >\n        Keep going\n      </Button>\n    </div>\n  );\n}\n\nconst ImperialSlider = ({ onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Slider\n      id='amount'\n      name='amount'\n      defaultValue={1}\n      valueLabelDisplay=\"auto\"\n      step={0.25}\n      min={0.25}\n      max={6}\n      marks\n      onChange={onChange}\n      className={classes.slider}\n    />\n  );\n}\n\nconst MetricSlider = ({ onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Slider\n      id='amount'\n      name='amount'\n      defaultValue={15}\n      valueLabelDisplay=\"auto\"\n      step={5}\n      min={5}\n      max={80}\n      marks\n      onChange={onChange}\n      className={classes.slider}\n    />\n  );\n}\n\nconst DashSlider = ({ onChange }) => {\n  const classes = useStyles();\n\n  return (\n    <Slider\n      id='amount'\n      name='amount'\n      defaultValue={2}\n      valueLabelDisplay=\"auto\"\n      step={1}\n      min={1}\n      max={10}\n      marks\n      onChange={onChange}\n      className={classes.slider}\n    />\n  );\n}\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const units = [ \"fl. oz\", \"ml\", \"dash\" ];\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const [unitType, setUnitType] = useState(units[0]);\n  const [spiritObject, setSpiritObject] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n  const [fieldValues, setFieldValues] = useState('');\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setFieldValues(e.target.value);\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  const onAddIngredient = () => {\n    setIngredients([...ingredients, {id: uuidv4(), ...spiritObject}])\n    setIsVisible(false);\n    setFieldValues('');\n  }\n\n  const onRemoveIngredient = (id) => {\n    console.log(ingredients.findIndex((ingredient) => ingredient.id === id));\n    setIngredients(ingredients.filter((ingredient) => ingredient.id !== id));\n  }\n\n  const onHandleNext = () => {\n    cocktail.addIngredients(ingredients);\n    cocktail.handleNext();\n  }\n\n  const onSubmit = () => {\n    console.log(ingredients);\n    setFieldValues('');\n  }\n\n  return (\n    <div className={classes.formContainer}>\n      <form\n        style={{textAlign: 'center'}}\n        onSubmit={onSubmit}\n      >\n        <TextField\n          {...register(\"name\", { required: true})}\n          label=\"Ingredient Name\"\n          variant='outlined'\n          value={fieldValues}\n          onChange={(e) => onChangeInput(e)}\n          InputProps={{ className: classes.input}}\n        />\n        <IconButton>\n          <AddBoxIcon\n            color=\"primary\"\n            fontSize=\"large\"\n            onClick={() => setIsVisible(true)}\n          />\n        </IconButton>\n        {\n          isVisible ?\n            <div>\n              <Grid container className={classes.grid}>\n                <Grid item xs={10}>\n                { \n                  unitType === 'ml' ? \n                    <MetricSlider onChange={onChangeSlider(\"amount\")} /> : \n                  unitType === 'fl. oz' ? \n                    <ImperialSlider onChange={onChangeSlider(\"amount\")} />\n                    : <DashSlider onChange={onChangeSlider(\"amount\")} />\n                }\n                </Grid>\n                <Grid item>\n                  <FormControl variant=\"outlined\">\n                    <Select \n                      name='unit'\n                      defaultValue={unitType}\n                      id=\"spiritType\"\n                      className={classes.selector}\n                      onChange={(e) => {\n                        setUnitType(e.target.value);\n                        onChangeInput(e)\n                      }}\n                    >\n                      <ListSubheader>Unit Type</ListSubheader>\n                      {\n                        units.map((unit, id) => {\n                          return <MenuItem key={id} value={unit}>{unit}</MenuItem>\n                        })\n                      }\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n              <Button\n                className={classes.nextButton}\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"outlined\"\n                onClick={onAddIngredient}\n              >\n                Add Ingredient\n              </Button>\n            </div> : false\n        }\n        <Divider className={classes.divider} />\n        {\n          ingredients.map((ingredient, id) => { \n            return (\n              <Grid container className={classes.ingredientsList}>\n                <Grid item xs={2}>\n                  <RemoveButton onClick={() => onRemoveIngredient(ingredient.id)} />\n                </Grid>\n                <Grid item xs>\n                  <Typography key={id}>\n                    Name: {ingredient.name}\n                  </Typography>\n                </Grid>\n                <Grid item xs>\n                  <Typography>\n                    Amount: {ingredient.amount}\n                  </Typography>\n                </Grid>\n              <Divider variant='fullWidth' className={classes.divider} />\n              </Grid>\n            );\n          })\n        }\n      </form>\n      { ingredients.length > 0 ? <NextButton onClick={onHandleNext} /> : false }\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}