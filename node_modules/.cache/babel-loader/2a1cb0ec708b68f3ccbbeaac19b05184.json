{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport MetricSelector from './MetricSelector';\nimport ImperialSelector from './ImperialSelector';\nimport spirits from '../static/spirits';\nimport { Link as Scroll } from 'react-scroll';\nimport { Container, TextField, FormControl, FormControlLabel, Select, ListSubheader, MenuItem, Checkbox, Button } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    minWidth: 120\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nexport default function BaseSpirit() {\n  _s();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const cocktailData = cocktail.theCocktailData;\n  const [isMetric, setIsMetric] = useState(false);\n  const [baseSpiritObject, setBaseSpiritObject] = useState({});\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric);\n  };\n\n  const testFunction = () => {\n    console.log(baseSpiritObject);\n    console.log(\"teset\");\n  };\n  /*\n   * The way to make this work so that it adds everything to an object is to wrap the form in a <form> tag (go figure),\n   * and then create an object above. Then you create a function in CocktailProvider which takes an object as an argument,\n   * and adds it to the cocktailData object the same way buildCocktailFromInput does. \n   * Should work.\n   */\n\n  /*\n   * So at <form onSubmit={testFunction}> This function would be the one that adds the object to the larger cocktail object\n   * Until then, the input changes should be modifying the temporary object initialized here within this component\n   */\n  // NOTE: onSubmit isn't working. Fix that next\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.formContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: () => console.log(\"test\"),\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"secondary\",\n          id: \"metric\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this),\n        label: \"Metric\",\n        onChange: handleIsMetric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"baseSpirit\",\n        name: \"baseSpirit\",\n        value: cocktailData.baseSpirit,\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          className: classes.input\n        },\n        onChange: e => {\n          setBaseSpiritObject({ ...baseSpiritObject,\n            [e.target.name]: e.target.value\n          });\n          cocktail.buildCocktailIngredient(e.target.name, baseSpiritObject);\n          console.log(\"Spirit: \", baseSpiritObject);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        name: \"spiritSelector\",\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select // look up uncontrolled to controlled input errors\n        , {\n          defaultValue: \"\",\n          id: \"spiritType\",\n          name: \"spiritType\",\n          onClick: e => cocktail.buildCocktailFromInput(e),\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Spirit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), spirits.map((spirit, id) => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: spirit,\n              children: spirit\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), isMetric ? /*#__PURE__*/_jsxDEV(MetricSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(ImperialSelector, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttonDiv,\n        children: /*#__PURE__*/_jsxDEV(Scroll, {\n          to: `step-${cocktail.activeStep}`,\n          smooth: \"true\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.nextButton,\n            type: \"submit\",\n            color: \"primary\",\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 24\n            }, this),\n            onClick: cocktail.handleNext,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BaseSpirit, \"8bRyv5xg8dbVPFKAy26DIreAzSI=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c = BaseSpirit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseSpirit\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js"],"names":["React","useState","useCocktail","MetricSelector","ImperialSelector","spirits","Link","Scroll","Container","TextField","FormControl","FormControlLabel","Select","ListSubheader","MenuItem","Checkbox","Button","ExpandMoreIcon","makeStyles","useStyles","theme","formContainer","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","buttonDiv","textAlign","nextButton","borderRadius","textTransform","BaseSpirit","classes","cocktail","cocktailData","theCocktailData","isMetric","setIsMetric","baseSpiritObject","setBaseSpiritObject","handleIsMetric","testFunction","console","log","baseSpirit","className","e","target","name","value","buildCocktailIngredient","buildCocktailFromInput","map","spirit","id","activeStep","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport MetricSelector from './MetricSelector';\nimport ImperialSelector from './ImperialSelector';\nimport spirits from '../static/spirits';\nimport { Link as Scroll } from 'react-scroll';\nimport {\n  Container,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Checkbox,\n  Button\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    minWidth: 120,\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nexport default function BaseSpirit() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const cocktailData = cocktail.theCocktailData;\n  const [isMetric, setIsMetric] = useState(false);\n  const [baseSpiritObject, setBaseSpiritObject] = useState({});\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric)\n  }\n  \n  const testFunction = () => {\n    console.log(baseSpiritObject)\n    console.log(\"teset\")\n  }\n\n  /*\n   * The way to make this work so that it adds everything to an object is to wrap the form in a <form> tag (go figure),\n   * and then create an object above. Then you create a function in CocktailProvider which takes an object as an argument,\n   * and adds it to the cocktailData object the same way buildCocktailFromInput does. \n   * Should work.\n   */\n\n    /*\n     * So at <form onSubmit={testFunction}> This function would be the one that adds the object to the larger cocktail object\n     * Until then, the input changes should be modifying the temporary object initialized here within this component\n     */\n\n  // NOTE: onSubmit isn't working. Fix that next\n  return (\n    <Container maxWidth=\"lg\" className={classes.formContainer}>\n      <form noValidate onSubmit={() => console.log(\"test\")}>\n        <FormControlLabel\n          control={<Checkbox color=\"secondary\" id=\"metric\" size=\"small\" />}\n          label=\"Metric\"\n          onChange={handleIsMetric}\n        />\n          <TextField \n            id='baseSpirit'\n            name='baseSpirit'\n            value={cocktailData.baseSpirit}\n            label='Ingredient'\n            variant='outlined'\n            margin='normal'\n            InputProps={{className: classes.input}}\n            onChange={(e) => {\n              setBaseSpiritObject({...baseSpiritObject, [e.target.name]: e.target.value})\n              cocktail.buildCocktailIngredient(e.target.name, baseSpiritObject)\n              console.log(\"Spirit: \", baseSpiritObject)\n            }}\n          />\n          <FormControl name='spiritSelector' variant=\"outlined\" className={classes.formControl}>\n            <Select \n              // look up uncontrolled to controlled input errors\n              defaultValue=\"\" \n              id='spiritType'\n              name='spiritType'\n              onClick={(e) => cocktail.buildCocktailFromInput(e)}\n            >\n              <ListSubheader>Spirit Type</ListSubheader>\n              {\n                spirits.map((spirit, id) => {\n                  return (\n                    <MenuItem key={id} value={spirit}>\n                      {spirit}\n                    </MenuItem>\n                  );\n                })\n              }\n            </Select>\n          </FormControl>\n        {\n          isMetric ? <MetricSelector /> : <ImperialSelector />\n        }\n        <div className={classes.buttonDiv}>\n          <Scroll to={`step-${cocktail.activeStep}`} smooth=\"true\">\n            <Button\n              className={classes.nextButton}\n              type=\"submit\"\n              color=\"primary\"\n              variant=\"contained\"\n              endIcon={<ExpandMoreIcon />}\n              onClick={cocktail.handleNext}\n            >\n              Continue\n            </Button>\n          </Scroll>\n        </div>\n      </form>\n    </Container>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}