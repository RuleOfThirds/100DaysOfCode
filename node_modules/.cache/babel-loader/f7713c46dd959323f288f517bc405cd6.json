{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { useState, useEffect, useContext, createContext } from 'react'; //import CircularProgress from '@material-ui/core/CircularProgress';\n//import { makeStyles } from '@material-ui/core/styles';\n\n/*const useStyles = makeStyles(theme => ({\n  loadingScreen: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(6),\n  },\n}));\n*/\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst UserContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider(); //  const [loading, setLoading] = useState(false)\n\n  const signin = (email, password) => {\n    //   setLoading(true)\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    }); //     .finally(() => setLoading(false))\n  };\n\n  const signup = (email, password) => {\n    //  setLoading(true)\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    }); //   .finally(() => setLoading(false))\n  };\n\n  const signout = () => {\n    //setLoading(true)\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    }); // .finally(() => setLoading(false))\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = () => {\n    //setLoading(true)\n    return firebase.auth().signInWithPopup(googleAuth).then(response => {\n      const cred = response.credential;\n      const token = cred.token;\n      setUser(response.user);\n      return response.user;\n    }); //.finally(() => setLoading(false))\n  };\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    //loading,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle\n  };\n}\n\n_s2(useProvideAuth, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s3();\n\n  const auth = useProvideAuth(); // const classes = useStyles();\n\n  /* if (auth.loading) {\n     return (\n       <div className={classes.loadingScreen}>\n         <CircularProgress color=\"secondary\" />\n       </div>\n     );\n   }\n   */\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(AuthProvider, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js"],"names":["firebase","useState","useEffect","useContext","createContext","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENT_ID","initializeApp","UserContext","useAuth","useProvideAuth","user","setUser","googleAuth","auth","GoogleAuthProvider","signin","email","password","signInWithEmailAndPassword","then","response","signup","createUserWithEmailAndPassword","signout","signOut","sendPasswordResetEmail","confirmPasswordReset","code","signInWithGoogle","signInWithPopup","cred","credential","token","unsubscribe","onAuthStateChanged","AuthProvider","children"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { \n  useState, \n  useEffect,\n  useContext,\n  createContext \n} from 'react';\n//import CircularProgress from '@material-ui/core/CircularProgress';\n//import { makeStyles } from '@material-ui/core/styles';\n\n/*const useStyles = makeStyles(theme => ({\n  loadingScreen: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing(6),\n  },\n}));\n*/\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst UserContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(UserContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n//  const [loading, setLoading] = useState(false)\n\n  const signin = (email, password) => {\n //   setLoading(true)\n\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(response => {\n        setUser(response.user);\n        return response.user;\n      })\n //     .finally(() => setLoading(false))\n  }\n\n  const signup = (email, password) => {\n  //  setLoading(true)\n\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        setUser(response.user);\n        return response.user;\n      })\n   //   .finally(() => setLoading(false))\n  }\n\n  const signout = () => {\n    //setLoading(true)\n\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false);\n      })\n     // .finally(() => setLoading(false))\n  }\n\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        return true;\n      })\n  }\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => {\n        return true;\n      })\n  }\n\n  const signInWithGoogle = () => {\n    //setLoading(true)\n    \n    return firebase\n      .auth()\n      .signInWithPopup(googleAuth)\n      .then((response) => {\n        const cred = response.credential;\n        const token = cred.token;\n        setUser(response.user)\n        return response.user;\n      })\n      //.finally(() => setLoading(false))\n  }\n\n  useEffect(() => {\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n    })\n\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    user,\n    signin,\n    signup,\n    signout,\n    //loading,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n  };\n}\n\nexport function AuthProvider({ children }) {\n  const auth = useProvideAuth();\n // const classes = useStyles();\n\n /* if (auth.loading) {\n    return (\n      <div className={classes.loadingScreen}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    );\n  }\n  */\n\n  return (\n    <UserContext.Provider value={auth}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}