{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Container, TextField, Grid, FormControl, FormControlLabel, Typography, Slider, InputLabel, MenuItem, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  }\n}));\n\nfunction MetricSelector() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"discrete-slider\",\n      gutterBottom: true,\n      children: \"Milliliters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: 15 //getAriaValueText={valuetext}\n      ,\n      \"aria-labelledby\": \"discrete-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 5,\n      marks: true,\n      min: 5,\n      max: 60\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MetricSelector;\n\nfunction ImperialSelector() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      id: \"discrete-slider\",\n      gutterBottom: true,\n      children: \"Ounces\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Slider, {\n      defaultValue: 1 //getAriaValueText={valuetext}\n      ,\n      \"aria-labelledby\": \"discrete-slider\",\n      valueLabelDisplay: \"auto\",\n      step: 0.25,\n      marks: true,\n      min: 0.25,\n      max: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ImperialSelector;\nexport default function Ingredients() {\n  _s();\n\n  const classes = useStyles();\n  const [amount, setAmount] = useState(\"\");\n  const [isMetric, setIsMetric] = useState(false);\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        color: \"secondary\",\n        id: \"metric\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 18\n      }, this),\n      label: \"Metric\",\n      onChange: handleIsMetric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"ingredient\",\n          label: \"Ingredient\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          InputProps: {\n            className: classes.input\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), isMetric ? /*#__PURE__*/_jsxDEV(MetricSelector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(ImperialSelector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ingredients, \"XnBWxBz4hu1+MG9MpE3eMHgfuFc=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Ingredients;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MetricSelector\");\n$RefreshReg$(_c2, \"ImperialSelector\");\n$RefreshReg$(_c3, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","Container","TextField","Grid","FormControl","FormControlLabel","Typography","Slider","InputLabel","MenuItem","Checkbox","makeStyles","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","MetricSelector","ImperialSelector","Ingredients","classes","amount","setAmount","isMetric","setIsMetric","handleIsMetric","className"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Container,\n  TextField,\n  Grid,\n  FormControl,\n  FormControlLabel,\n  Typography,\n  Slider,\n  InputLabel,\n  MenuItem,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 650,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n}));\n\nfunction MetricSelector() {\n  return (\n    <div>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Milliliters\n      </Typography>\n      <Slider\n        defaultValue={15}\n        //getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        step={5}\n        marks\n        min={5}\n        max={60}\n      />\n    </div>\n  );\n}\n\nfunction ImperialSelector() {\n  return (\n    <div>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Ounces\n      </Typography>\n      <Slider\n        defaultValue={1}\n        //getAriaValueText={valuetext}\n        aria-labelledby=\"discrete-slider\"\n        valueLabelDisplay=\"auto\"\n        step={0.25}\n        marks\n        min={0.25}\n        max={6}\n      />\n    </div>\n  );\n}\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const [amount, setAmount] = useState(\"\");\n  const [isMetric, setIsMetric] = useState(false);\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric)\n  }\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.formContainer}>\n      <FormControlLabel\n        control={<Checkbox color=\"secondary\" id=\"metric\" size=\"small\" />}\n        label=\"Metric\"\n        onChange={handleIsMetric}\n      />\n      <Grid container>\n        <Grid item xs>\n          <TextField \n            id='ingredient'\n            label='Ingredient'\n            variant='outlined'\n            margin='normal'\n            InputProps={{\n              className: classes.input\n            }}\n          />\n          <IconButton>\n            <AddBoxIcon />\n          </IconButton>\n          {\n            isMetric\n              ? <MetricSelector />\n              : <ImperialSelector />\n          }\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}