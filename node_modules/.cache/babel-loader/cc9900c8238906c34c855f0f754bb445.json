{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MetricSelector from '../Helpers/MetricSelector';\nimport ImperialSelector from '../Helpers/ImperialSelector';\nimport { Container, TextField, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 650\n  }\n}));\nexport default function BaseSpirit() {\n  _s();\n\n  const classes = useStyles();\n  const [isMetric, setIsMetric] = useState(false);\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        color: \"secondary\",\n        id: \"metric\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this),\n      label: \"Metric\",\n      onChange: handleIsMetric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ingredient\",\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          className: classes.input\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isMetric ? /*#__PURE__*/_jsxDEV(MetricSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ImperialSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BaseSpirit, \"jf44rWN/94VJdkTdJsIHJfMRg60=\", false, function () {\n  return [useStyles];\n});\n\n_c = BaseSpirit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseSpirit\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js"],"names":["React","useState","MetricSelector","ImperialSelector","Container","TextField","FormControlLabel","Checkbox","makeStyles","useStyles","theme","formContainer","backgroundColor","padding","fontFamily","input","width","BaseSpirit","classes","isMetric","setIsMetric","handleIsMetric","className"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,gBAHF,EAIEC,QAJF,QAKO,mBALP;AAMA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAK;AACrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,iBADJ;AAEbC,IAAAA,OAAO,EAAE,EAFI;AAGbC,IAAAA,UAAU,EAAE;AAHC,GADsB;AAMrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF;AAN8B,CAAL,CAAN,CAA5B;AAWA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMoB,cAAc,GAAG,MAAM;AAC3BD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIA,sBACE,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAED,OAAO,CAACP,aAA5C;AAAA,4BACE,QAAC,gBAAD;AACE,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,WAAhB;AAA4B,QAAA,EAAE,EAAC,QAA/B;AAAwC,QAAA,IAAI,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADX;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,QAAQ,EAAEU;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,KAAK,EAAC,YAFR;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,MAAM,EAAC,QAJT;AAKE,QAAA,UAAU,EAAE;AACVC,UAAAA,SAAS,EAAEJ,OAAO,CAACH;AADT;AALd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,EAkBII,QAAQ,gBACJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAEJ,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YApBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAjCuBF,U;UACNR,S;;;KADMQ,U","sourcesContent":["import React, { useState } from 'react';\nimport MetricSelector from '../Helpers/MetricSelector';\nimport ImperialSelector from '../Helpers/ImperialSelector';\nimport {\n  Container,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 650\n  },\n}));\n\nexport default function BaseSpirit() {\n  const classes = useStyles();\n  const [isMetric, setIsMetric] = useState(false);\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric)\n  }\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.formContainer}>\n      <FormControlLabel\n        control={<Checkbox color=\"secondary\" id=\"metric\" size=\"small\" />}\n        label=\"Metric\"\n        onChange={handleIsMetric}\n      />\n      <div>\n        <TextField \n          id='ingredient'\n          label='Ingredient'\n          variant='outlined'\n          margin='normal'\n          InputProps={{\n            className: classes.input\n          }}\n        />\n      </div>\n      {\n        isMetric\n          ? <MetricSelector />\n          : <ImperialSelector />\n      }\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}