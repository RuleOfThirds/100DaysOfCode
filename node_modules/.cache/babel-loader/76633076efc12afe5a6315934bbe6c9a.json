{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { Grid, TextField, IconButton, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Select, ListSubheader, MenuItem, Button, Typography, Slider, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  submitButton: {\n    height: theme.spacing(7),\n    margin: theme.spacing(2)\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst types = [\"baseSpirit\", \"modifier\", \"nonAlcoholic\", \"misc\"];\nexport default function Ingredients() {\n  _s();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const [spiritObject, setSpiritObject] = useState({});\n  const [inputs, setInputs] = useState([{\n    amount: '',\n    name: '',\n    type: ''\n  }]);\n  const [unitType, setUnitType] = useState('imperial');\n  const ingredients = [{\n    id: 0,\n    ingredient: {}\n  }];\n\n  const addNewInput = () => setInputs([...inputs, {}]);\n\n  const handleUnitType = e => setUnitType(e.target.value);\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onAddIngredientsToArray = () => {\n    ingredients.push(spiritObject);\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    console.log(\"Onsubmitform: \", event.target.name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    className: classes.formContainer,\n    id: \"ingredients\",\n    name: \"ingredients\",\n    value: ingredients,\n    onSubmit: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Unit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"unitType\",\n            name: \"unit\",\n            value: unitType,\n            onChange: handleUnitType,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"imperial\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 59\n              }, this),\n              label: \"Imperial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"metric\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 57\n              }, this),\n              label: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: addNewInput,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), inputs.map((input, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"ingredient\",\n          label: \"Ingredient\",\n          name: \"name\" //       value={ingredients[id].name}\n          ,\n          variant: \"outlined\",\n          margin: \"normal\",\n          InputProps: {\n            className: classes.input\n          },\n          onChange: e => onChangeInput(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"\",\n            name: \"type\",\n            id: \"spiritType\",\n            onChange: e => onChangeInput(e),\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Spirit Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), types.map((type, id) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type,\n                children: type\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 30\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.submitButton,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: onAddIngredientsToArray,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"discrete-slider\",\n            gutterBottom: true,\n            children: \"Milliliters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            id: \"baseSpiritAmount\",\n            name: \"metricAmount\" //            value={ingredients[id].amount}\n            ,\n            defaultValue: 15,\n            valueLabelDisplay: \"auto\",\n            step: 5,\n            min: 5,\n            max: 60,\n            marks: true,\n            onChange: onChangeSlider(\"amount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"discrete-slider\",\n            gutterBottom: true,\n            children: \"Ounces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            id: \"baseSpiritAmount\",\n            name: \"amount\" //           value={ingredients[id].amount}\n            ,\n            defaultValue: 1,\n            valueLabelDisplay: \"auto\",\n            step: 0.25,\n            min: 0.25,\n            max: 6,\n            marks: true,\n            onChange: onChangeSlider(\"amount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.nextButton,\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 20\n        }, this),\n        onClick: cocktail.handleNext,\n        children: \"Keep going\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ingredients, \"bd3d9pQ4uYjMwD1DLnHSKD5ucXo=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c = Ingredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","Grid","TextField","IconButton","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","Select","ListSubheader","MenuItem","Button","Typography","Slider","Divider","makeStyles","ExpandMoreIcon","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","alignItems","justifyContent","buttonDiv","textAlign","submitButton","height","nextButton","borderRadius","textTransform","types","Ingredients","classes","cocktail","spiritObject","setSpiritObject","inputs","setInputs","amount","name","type","unitType","setUnitType","ingredients","id","ingredient","addNewInput","handleUnitType","e","target","value","onChangeSlider","event","newValue","onChangeInput","onAddIngredientsToArray","push","onSubmitForm","preventDefault","console","log","map","className","handleNext"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SACEC,IADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,gBANF,EAOEC,UAPF,EAQEC,KARF,EASEC,MATF,EAUEC,aAVF,EAWEC,QAXF,EAYEC,MAZF,EAaEC,UAbF,EAcEC,MAdF,EAeEC,OAfF,QAgBO,mBAhBP;AAiBA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbC,IAAAA,eAAe,EAAE,iBAHJ;AAIbC,IAAAA,OAAO,EAAE,EAJI;AAKbC,IAAAA,UAAU,EAAE;AALC,GADsB;AAQrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AADF,GAR8B;AAWrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE;AAFC,GAXwB;AAerCC,EAAAA,QAAQ,EAAE;AACRX,IAAAA,OAAO,EAAE,MADD;AAERY,IAAAA,UAAU,EAAE,OAFJ;AAGRC,IAAAA,cAAc,EAAE;AAHR,GAf2B;AAoBrCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE;AADF,GApB0B;AAuBrCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,MAAM,EAAEnB,KAAK,CAACW,OAAN,CAAc,CAAd,CADI;AAEZD,IAAAA,MAAM,EAAEV,KAAK,CAACW,OAAN,CAAc,CAAd;AAFI,GAvBuB;AA2BrCS,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAE,EADJ;AAEVC,IAAAA,aAAa,EAAE,MAFL;AAGVZ,IAAAA,MAAM,EAAE,EAHE;AAIVJ,IAAAA,UAAU,EAAE;AAJF;AA3ByB,CAAL,CAAN,CAA5B;AAmCA,MAAMiB,KAAK,GAAG,CACZ,YADY,EAEZ,UAFY,EAGZ,cAHY,EAIZ,MAJY,CAAd;AAOA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,QAAM2B,QAAQ,GAAG9C,WAAW,EAA5B;AACA,QAAM,CAAC+C,YAAD,EAAeC,eAAf,IAAkCjD,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkD,MAAD,EAASC,SAAT,IAAsBnD,QAAQ,CAAC,CAAC;AACpCoD,IAAAA,MAAM,EAAE,EAD4B;AAEpCC,IAAAA,IAAI,EAAE,EAF8B;AAGpCC,IAAAA,IAAI,EAAE;AAH8B,GAAD,CAAD,CAApC;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxD,QAAQ,CAAC,UAAD,CAAxC;AACA,QAAMyD,WAAW,GAAG,CAAC;AACnBC,IAAAA,EAAE,EAAE,CADe;AAEnBC,IAAAA,UAAU,EAAE;AAFO,GAAD,CAApB;;AAKA,QAAMC,WAAW,GAAG,MAAMT,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,EAAZ,CAAD,CAAnC;;AAEA,QAAMW,cAAc,GAAIC,CAAD,IAAON,WAAW,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAzC;;AAEA,QAAMC,cAAc,GAAGZ,IAAI,IAAI,CAACa,KAAD,EAAQC,QAAR,KAAqB;AAClDlB,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkB,OAACK,IAAD,GAAQc;AAA1B,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIN,CAAD,IAAO;AAC3Bb,IAAAA,eAAe,CAAC,EAAC,GAAGD,YAAJ;AAAkB,OAACc,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC;AAA5C,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMK,uBAAuB,GAAG,MAAM;AACpCZ,IAAAA,WAAW,CAACa,IAAZ,CAAiBtB,YAAjB;AACD,GAFD;;AAIA,QAAMuB,YAAY,GAAIL,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BR,KAAK,CAACH,MAAN,CAAaV,IAA3C;AACD,GAJD;;AAMA,sBACE;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,SAAS,EAAEP,OAAO,CAACxB,aAFrB;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,IAAA,IAAI,EAAC,aAJP;AAKE,IAAA,KAAK,EAAEmC,WALT;AAME,IAAA,QAAQ,EAAEc,YANZ;AAAA,4BAQE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAC,QAA3B;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,MAAb;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,UAAvB;AAAkC,UAAA,SAAS,EAAEzB,OAAO,CAAChB,WAArD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,GAAG,MAAf;AAAgB,0BAAW,UAA3B;AAAsC,YAAA,IAAI,EAAC,MAA3C;AAAkD,YAAA,KAAK,EAAEyB,QAAzD;AAAmE,YAAA,QAAQ,EAAEM,cAA7E;AAAA,oCACE,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC,UAAxB;AAAmC,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAA5C;AAAuD,cAAA,KAAK,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,gBAAD;AAAkB,cAAA,KAAK,EAAC,QAAxB;AAAiC,cAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,sBAA1C;AAAqD,cAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAED,WAArB;AAAkC,UAAA,KAAK,EAAC,SAAxC;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,QAAQ,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAwBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAxBF,EA0BIV,MAAM,CAACyB,GAAP,CAAW,CAAC/C,KAAD,EAAQ8B,EAAR,KAAe;AACxB,0BACE;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAC,YADL;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,IAAI,EAAC,MAHP,CAIL;AAJK;AAKE,UAAA,OAAO,EAAC,UALV;AAME,UAAA,MAAM,EAAC,QANT;AAOE,UAAA,UAAU,EAAE;AAACkB,YAAAA,SAAS,EAAE9B,OAAO,CAAClB;AAApB,WAPd;AAQE,UAAA,QAAQ,EAAGkC,CAAD,IAAOM,aAAa,CAACN,CAAD;AARhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE,QAAC,WAAD;AAAa,UAAA,OAAO,EAAC,UAArB;AAAgC,UAAA,SAAS,EAAEhB,OAAO,CAAChB,WAAnD;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,YAAY,EAAC,EADf;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,EAAE,EAAC,YAHL;AAIE,YAAA,QAAQ,EAAGgC,CAAD,IAAOM,aAAa,CAACN,CAAD,CAJhC;AAAA,oCAME,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,EAQIlB,KAAK,CAAC+B,GAAN,CAAU,CAACrB,IAAD,EAAOI,EAAP,KAAc;AACtB,kCAAO,QAAC,QAAD;AAAmB,gBAAA,KAAK,EAAEJ,IAA1B;AAAA,0BAAiCA;AAAjC,iBAAeI,EAAf;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFD,CARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXF,eA0BE,QAAC,MAAD;AACE,UAAA,SAAS,EAAEZ,OAAO,CAACP,YADrB;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAC,WAHV;AAIE,UAAA,OAAO,EAAE8B,uBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF,EAmCId,QAAQ,KAAK,QAAb,gBACE;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,iBAAf;AAAiC,YAAA,YAAY,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,kBADL;AAEE,YAAA,IAAI,EAAC,cAFP,CAGV;AAHU;AAIE,YAAA,YAAY,EAAE,EAJhB;AAKE,YAAA,iBAAiB,EAAC,MALpB;AAME,YAAA,IAAI,EAAE,CANR;AAOE,YAAA,GAAG,EAAE,CAPP;AAQE,YAAA,GAAG,EAAE,EARP;AASE,YAAA,KAAK,MATP;AAUE,YAAA,QAAQ,EAAEU,cAAc,CAAC,QAAD;AAV1B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,gBAkBE;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,iBAAf;AAAiC,YAAA,YAAY,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,MAAD;AACE,YAAA,EAAE,EAAC,kBADL;AAEE,YAAA,IAAI,EAAC,QAFP,CAGT;AAHS;AAIE,YAAA,YAAY,EAAE,CAJhB;AAKE,YAAA,iBAAiB,EAAC,MALpB;AAME,YAAA,IAAI,EAAE,IANR;AAOE,YAAA,GAAG,EAAE,IAPP;AAQE,YAAA,GAAG,EAAE,CARP;AASE,YAAA,KAAK,MATP;AAUE,YAAA,QAAQ,EAAEA,cAAc,CAAC,QAAD;AAV1B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBArDN;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA0ED,KA3ED,CA1BJ,eAuGE;AAAK,MAAA,SAAS,EAAEnB,OAAO,CAACT,SAAxB;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAES,OAAO,CAACL,UADrB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAC,WAJV;AAKE,QAAA,OAAO,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBALX;AAME,QAAA,OAAO,EAAEM,QAAQ,CAAC8B,UANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAvGF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsHD;;GA3JuBhC,W;UACNzB,S,EACCnB,W;;;KAFK4C,W","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n  Divider,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  submitButton: {\n    height: theme.spacing(7),\n    margin: theme.spacing(2),\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst types = [\n  \"baseSpirit\",\n  \"modifier\",\n  \"nonAlcoholic\",\n  \"misc\",\n];\n  \nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const [spiritObject, setSpiritObject] = useState({});\n  const [inputs, setInputs] = useState([{\n    amount: '',\n    name: '',\n    type: '',\n  }]);\n  const [unitType, setUnitType] = useState('imperial');\n  const ingredients = [{\n    id: 0,\n    ingredient: {},\n  }];\n\n  const addNewInput = () => setInputs([...inputs, {}])\n\n  const handleUnitType = (e) => setUnitType(e.target.value)\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  const onAddIngredientsToArray = () => {\n    ingredients.push(spiritObject)\n  }\n\n  const onSubmitForm = (event) => {\n    event.preventDefault()\n\n    console.log(\"Onsubmitform: \", event.target.name)\n  }\n\n  return (\n    <form \n      noValidate \n      className={classes.formContainer}\n      id='ingredients'\n      name='ingredients'\n      value={ingredients}\n      onSubmit={onSubmitForm} \n    >\n      <Grid container alignItems='center'>\n        <Grid item xs>\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormLabel component='legend'>Unit Type</FormLabel>\n            <RadioGroup row aria-label='unitType' name='unit' value={unitType} onChange={handleUnitType}>\n              <FormControlLabel value='imperial' control={<Radio />} label='Imperial' />\n              <FormControlLabel value='metric' control={<Radio />} label='Metric' />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={addNewInput} color=\"primary\">\n            <AddBoxIcon fontSize=\"large\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Divider />\n      {\n        inputs.map((input, id) => { \n          return (\n            <div>\n              <TextField \n                id='ingredient'\n                label='Ingredient'\n                name='name'\n         //       value={ingredients[id].name}\n                variant='outlined'\n                margin='normal'\n                InputProps={{className: classes.input}}\n                onChange={(e) => onChangeInput(e)}\n              />\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select \n                  defaultValue=\"\" \n                  name='type' \n                  id=\"spiritType\"\n                  onChange={(e) => onChangeInput(e)}\n                >\n                  <ListSubheader>Spirit Type</ListSubheader>\n                  {\n                    types.map((type, id) => {\n                      return <MenuItem key={id} value={type}>{type}</MenuItem>\n                    })\n                  }\n                </Select>\n              </FormControl>\n              <Button\n                className={classes.submitButton}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={onAddIngredientsToArray}\n              >\n                Submit\n              </Button>\n              {\n                unitType === \"metric\" ? \n                  <div>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                      Milliliters\n                    </Typography>\n                    <Slider\n                      id=\"baseSpiritAmount\"\n                      name=\"metricAmount\"\n          //            value={ingredients[id].amount}\n                      defaultValue={15}\n                      valueLabelDisplay=\"auto\"\n                      step={5}\n                      min={5}\n                      max={60}\n                      marks\n                      onChange={onChangeSlider(\"amount\")}\n                    />\n                  </div>\n                : <div>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                      Ounces\n                    </Typography>\n                    <Slider\n                      id='baseSpiritAmount'\n                      name='amount'\n           //           value={ingredients[id].amount}\n                      defaultValue={1}\n                      valueLabelDisplay=\"auto\"\n                      step={0.25}\n                      min={0.25}\n                      max={6}\n                      marks\n                      onChange={onChangeSlider(\"amount\")}\n                    />\n                  </div>\n              }\n            </div>\n          )\n        })\n      }\n      <div className={classes.buttonDiv}>\n        <Button\n          className={classes.nextButton}\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"contained\"\n          endIcon={<ExpandMoreIcon />}\n          onClick={cocktail.handleNext}\n        >\n          Keep going\n        </Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}