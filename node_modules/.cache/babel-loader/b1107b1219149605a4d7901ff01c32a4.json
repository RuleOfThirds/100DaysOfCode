{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Drawer, Grid, Typography, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 10,\n    maxWidth: 500\n  },\n  title: {\n    textAlign: 'center',\n    fontFamily: 'Nunito',\n    padding: 5\n  }\n}));\nexport default function InfoDrawer({\n  step,\n  stepTitle,\n  isOpen,\n  handleDrawer\n}) {\n  _s();\n\n  const classes = useStyles();\n\n  const steps = () => {\n    switch (step) {\n      case 0:\n        return `help text1 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n                  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaBBBBBBBBBBBBBBBBBBBBB\n                  CCCCCCCCCCCCCCCCCCCCCCC`;\n\n      case 1:\n        return `Text 2 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n                xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n                xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n                xXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        `;\n\n      case 2:\n        return `Text 3 yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n                yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n                yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n                yyyyyyYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYyyyyyyyyy\n        `;\n\n      case 3:\n        return `Text 4 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGgggggggggg\n                ggggggggggggggggggggggggggggggggggggggggggggggggg aaaaaaa\n                GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGggggggggg\n                gggggggggggggggggggggggggggggggggggggggggghghggggggg`;\n\n      default:\n        return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    anchor: \"right\",\n    open: isOpen,\n    onClose: handleDrawer,\n    variant: \"persistent\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: classes.root,\n      children: step <= 3 ? /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.title,\n          variant: \"h5\",\n          children: stepTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          children: steps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InfoDrawer, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = InfoDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoDrawer\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js"],"names":["React","Drawer","Grid","Typography","Divider","makeStyles","useStyles","theme","root","padding","maxWidth","title","textAlign","fontFamily","InfoDrawer","step","stepTitle","isOpen","handleDrawer","classes","steps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,UAHF,EAIEC,OAJF,QAKO,mBALP;AAMA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADiC;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,QADN;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLJ,IAAAA,OAAO,EAAE;AAHJ;AALgC,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASK,UAAT,CAAoB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAApB,EAA+D;AAAA;;AAC5E,QAAMC,OAAO,GAAGb,SAAS,EAAzB;;AAEA,QAAMc,KAAK,GAAG,MAAM;AAClB,YAAQL,IAAR;AACE,WAAK,CAAL;AACE,eAAQ;AAChB;AACA,0CAFQ;;AAGF,WAAK,CAAL;AACE,eAAQ;AAChB;AACA;AACA;AACA,SAJQ;;AAKF,WAAK,CAAL;AACE,eAAQ;AAChB;AACA;AACA;AACA,SAJQ;;AAKF,WAAK,CAAL;AACE,eAAQ;AAChB;AACA;AACA,qEAHQ;;AAIF;AACE,eAAO,KAAP;AAvBJ;AAyBD,GA1BD;;AA4BA,sBACE,QAAC,MAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,IAAI,EAAEE,MAFR;AAGE,IAAA,OAAO,EAAEC,YAHX;AAIE,IAAA,OAAO,EAAC,YAJV;AAAA,2BAME,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,QAA1B;AAAmC,MAAA,SAAS,EAAEC,OAAO,CAACX,IAAtD;AAAA,gBAEIO,IAAI,IAAI,CAAR,gBAEE;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEI,OAAO,CAACR,KAA/B;AAAsC,UAAA,OAAO,EAAC,IAA9C;AAAA,oBAAoDK;AAApD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,MAAtB;AAAA,oBAA8BI,KAAK;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,GAQE;AAVN;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArDuBN,U;UACNR,S;;;KADMQ,U","sourcesContent":["import React from 'react';\nimport {\n  Drawer,\n  Grid,\n  Typography,\n  Divider\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 10,\n    maxWidth: 500,\n  },\n  title: {\n    textAlign: 'center',\n    fontFamily: 'Nunito',\n    padding: 5,\n  },\n}));\n\nexport default function InfoDrawer({ step, stepTitle, isOpen, handleDrawer }) {\n  const classes = useStyles();\n\n  const steps = () => {\n    switch (step) {\n      case 0:\n        return `help text1 aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n                  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaBBBBBBBBBBBBBBBBBBBBB\n                  CCCCCCCCCCCCCCCCCCCCCCC`\n      case 1:\n        return `Text 2 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n                xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n                xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n                xXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n        `\n      case 2:\n        return `Text 3 yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n                yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n                yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy\n                yyyyyyYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYyyyyyyyyy\n        `\n      case 3:\n        return `Text 4 GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGgggggggggg\n                ggggggggggggggggggggggggggggggggggggggggggggggggg aaaaaaa\n                GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGggggggggg\n                gggggggggggggggggggggggggggggggggggggggggghghggggggg`\n      default:\n        return false\n    }\n  }\n\n  return (\n    <Drawer\n      anchor='right'\n      open={isOpen}\n      onClose={handleDrawer}\n      variant='persistent'\n    >\n      <Grid container direction='column' className={classes.root}>\n        {\n          step <= 3\n          ? (\n            <main>\n              <Typography className={classes.title} variant='h5'>{stepTitle}</Typography>\n              <Divider />\n              <Typography component='span'>{steps()}</Typography>\n            </main>\n          )\n          : false\n        }\n      </Grid>\n    </Drawer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}