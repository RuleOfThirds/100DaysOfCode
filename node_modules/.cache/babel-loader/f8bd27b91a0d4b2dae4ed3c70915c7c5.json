{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport MetricSelector from './MetricSelector';\nimport ImperialSelector from './ImperialSelector';\nimport spirits from '../static/spirits';\nimport { Link as Scroll } from 'react-scroll';\nimport { Container, TextField, FormControl, FormControlLabel, Select, ListSubheader, MenuItem, Checkbox, Button, Typography, Slider } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    minWidth: 120\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nexport default function BaseSpirit() {\n  _s();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const cocktailData = cocktail.theCocktailData;\n  const [isMetric, setIsMetric] = useState(false);\n  const [baseSpirit, setBaseSpirit] = useState({});\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric);\n  };\n\n  const onChangeInput = e => {\n    setBaseSpirit({ ...baseSpirit,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onChangeSlider = (event, newValue) => {\n    setBaseSpirit({ ...baseSpirit,\n      [event]: newValue\n    });\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n\n    if (baseSpirit) {\n      cocktail.buildCocktailIngredient(baseSpirit);\n    }\n  };\n\n  const valuetext = value => {\n    return 'amount';\n  };\n  /*\n   * The way to make this work so that it adds everything to an object is to wrap the form in a <form> tag (go figure),\n   * and then create an object above. Then you create a function in CocktailProvider which takes an object as an argument,\n   * and adds it to the cocktailData object the same way buildCocktailFromInput does. \n   * Should work.\n   */\n\n  /*\n   * So at <form onSubmit={testFunction}> This function would be the one that adds the object to the larger cocktail object\n   * Until then, the input changes should be modifying the temporary object initialized here within this component\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.formContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          color: \"secondary\",\n          id: \"metric\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 20\n        }, this),\n        label: \"Metric\",\n        onChange: handleIsMetric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"baseSpiritName\",\n        name: \"name\",\n        value: baseSpirit.name || '',\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          className: classes.input\n        },\n        onChange: e => onChangeInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        name: \"spiritSelector\",\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select // look up uncontrolled to controlled input errors\n        , {\n          defaultValue: \"\",\n          id: \"baseSpiritType\",\n          name: \"type\",\n          value: baseSpirit.type || '',\n          onChange: e => onChangeInput(e),\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Spirit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), spirits.map((spirit, id) => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: spirit,\n              children: spirit\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), isMetric ? /*#__PURE__*/_jsxDEV(MetricSelector, {\n        spirit: baseSpirit,\n        handler: setBaseSpirit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"discrete-slider\",\n          gutterBottom: true,\n          children: \"Ounces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          defaultValue: 1,\n          id: \"baseSpiritAmount\",\n          name: \"amount\",\n          getAriaValueText: () => 'amount',\n          \"aria-valuetext\": \"amount\",\n          \"aria-labelledby\": \"discrete-slider\",\n          valueLabelDisplay: \"auto\",\n          step: 0.25,\n          marks: true,\n          min: 0.25,\n          max: 6,\n          onChange: onChangeSlider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.nextButton,\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 22\n        }, this),\n        onClick: () => {\n          document.getElementById(`step-${cocktail.activeStep}`).scrollIntoView({\n            behavior: 'smooth'\n          });\n          cocktail.handleNext();\n        },\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BaseSpirit, \"4QD+harHsA0e7HRjS84A2evLOe4=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c = BaseSpirit;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseSpirit\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BaseSpirit.js"],"names":["React","useState","useCocktail","MetricSelector","ImperialSelector","spirits","Link","Scroll","Container","TextField","FormControl","FormControlLabel","Select","ListSubheader","MenuItem","Checkbox","Button","Typography","Slider","ExpandMoreIcon","makeStyles","useStyles","theme","formContainer","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","buttonDiv","textAlign","nextButton","borderRadius","textTransform","BaseSpirit","classes","cocktail","cocktailData","theCocktailData","isMetric","setIsMetric","baseSpirit","setBaseSpirit","handleIsMetric","onChangeInput","e","target","name","value","onChangeSlider","event","newValue","onSubmitForm","preventDefault","buildCocktailIngredient","valuetext","className","type","map","spirit","id","document","getElementById","activeStep","scrollIntoView","behavior","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport MetricSelector from './MetricSelector';\nimport ImperialSelector from './ImperialSelector';\nimport spirits from '../static/spirits';\nimport { Link as Scroll } from 'react-scroll';\nimport {\n  Container,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Checkbox,\n  Button,\n  Typography,\n  Slider,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 650\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    minWidth: 120,\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nexport default function BaseSpirit() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const cocktailData = cocktail.theCocktailData;\n  const [isMetric, setIsMetric] = useState(false);\n  const [baseSpirit, setBaseSpirit] = useState({});\n\n  const handleIsMetric = () => {\n    setIsMetric(!isMetric)\n  }\n  \n  const onChangeInput = (e) => {\n    setBaseSpirit({...baseSpirit, [e.target.name]: e.target.value})\n  }\n\n  const onChangeSlider = (event, newValue) => {\n    setBaseSpirit({...baseSpirit, [event]: newValue})\n  }\n\n  const onSubmitForm = (event) => {\n    event.preventDefault()\n\n    if (baseSpirit) {\n      cocktail.buildCocktailIngredient(baseSpirit)\n    }\n  }\n\n  const valuetext = (value) => {\n    return 'amount';\n  }\n\n  /*\n   * The way to make this work so that it adds everything to an object is to wrap the form in a <form> tag (go figure),\n   * and then create an object above. Then you create a function in CocktailProvider which takes an object as an argument,\n   * and adds it to the cocktailData object the same way buildCocktailFromInput does. \n   * Should work.\n   */\n\n    /*\n     * So at <form onSubmit={testFunction}> This function would be the one that adds the object to the larger cocktail object\n     * Until then, the input changes should be modifying the temporary object initialized here within this component\n     */\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.formContainer}>\n      <form noValidate onSubmit={onSubmitForm}>\n        <FormControlLabel\n          control={<Checkbox color=\"secondary\" id=\"metric\" size=\"small\" />}\n          label=\"Metric\"\n          onChange={handleIsMetric}\n        />\n          <TextField \n            id='baseSpiritName'\n            name='name'\n            value={baseSpirit.name || ''}\n            label='Ingredient'\n            variant='outlined'\n            margin='normal'\n            InputProps={{className: classes.input}}\n            onChange={(e) => onChangeInput(e)}\n          />\n          <FormControl name='spiritSelector' variant=\"outlined\" className={classes.formControl}>\n            <Select \n              // look up uncontrolled to controlled input errors\n              defaultValue=\"\" \n              id='baseSpiritType'\n              name='type'\n              value={baseSpirit.type || ''}\n              onChange={(e) => onChangeInput(e)}\n            >\n              <ListSubheader>Spirit Type</ListSubheader>\n              {\n                spirits.map((spirit, id) => {\n                  return (\n                    <MenuItem key={id} value={spirit}>\n                      {spirit}\n                    </MenuItem>\n                  );\n                })\n              }\n            </Select>\n          </FormControl>\n          {\n            isMetric \n              ? <MetricSelector spirit={baseSpirit} handler={setBaseSpirit} /> \n              : (\n              <div>\n                <Typography id=\"discrete-slider\" gutterBottom>\n                  Ounces\n                </Typography>\n                <Slider\n                  defaultValue={1}\n                  id='baseSpiritAmount'\n                  name='amount'\n                  getAriaValueText={() => 'amount'}\n                  aria-valuetext='amount'\n                  aria-labelledby=\"discrete-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={0.25}\n                  marks\n                  min={0.25}\n                  max={6}\n                  onChange={onChangeSlider}\n                />\n              </div>\n            )\n          }\n          <Button\n            className={classes.nextButton}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            endIcon={<ExpandMoreIcon />}\n            onClick={() => {\n              document.getElementById(`step-${cocktail.activeStep}`).scrollIntoView({behavior: 'smooth'})\n              cocktail.handleNext()\n            }}\n          >\n            Continue\n          </Button>\n      </form>\n    </Container>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}