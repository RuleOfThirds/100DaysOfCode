{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.primary.background,\n    justifyContent: 'center'\n  }\n}));\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst UserContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n\n  const signin = (email, password) => {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      setLoading(false);\n      return response.user;\n    }).catch(e => setError(e.message)).finally(() => setLoading(false));\n  };\n\n  const signup = (displayName, phone, email, password) => {\n    setLoading(true);\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      const uid = response.user.uid;\n      const initData = {\n        id: uid,\n        email,\n        displayName,\n        phone,\n        bio: '',\n        twitter: '',\n        instagram: '',\n        website: '',\n        picture: '',\n        favorites: []\n      }; // finish creating the full user object\n\n      const userData = Object.assign({}, initData); // User was already added to the Auth database, now add it to firestore\n\n      const userRef = firebase.firestore().collection(\"users\");\n      userRef.doc(uid).set(userData).then(() => {\n        setUser(response.user);\n      }).finally(() => {\n        setLoading(false);\n        firebase.auth().signOut();\n      });\n    });\n  };\n\n  const signout = () => {\n    setLoading(true);\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    }).finally(() => setLoading(false));\n  };\n\n  const updateUser = userData => {\n    const userRef = firebase.firestore().collection(\"users\");\n\n    if (user) {\n      return userRef.doc(user.id).update(userData).then(() => {\n        console.log(\"successfully updated user\");\n      });\n    }\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(googleAuth).then(response => {\n      //const cred = response.credential;\n      //const token = cred.token;\n      setUser(response.user);\n      return response.user;\n    }).finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        userRef.doc(user.uid).get().then(document => {\n          const userData = document.data();\n          setUser(userData);\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n        setUser(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    error,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    updateUser\n  };\n}\n\n_s2(useProvideAuth, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s3();\n\n  const auth = useProvideAuth();\n  const classes = useStyles();\n\n  if (auth.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(AuthProvider, \"gswGbzuEikHRan6AN9/fVPXhO3E=\", false, function () {\n  return [useProvideAuth, useStyles];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js"],"names":["useState","useEffect","useContext","createContext","firebase","CircularProgress","makeStyles","useStyles","theme","root","display","backgroundColor","palette","primary","background","justifyContent","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENT_ID","initializeApp","UserContext","useAuth","useProvideAuth","user","setUser","loading","setLoading","error","setError","googleAuth","auth","GoogleAuthProvider","signin","email","password","signInWithEmailAndPassword","then","response","catch","e","message","finally","signup","displayName","phone","createUserWithEmailAndPassword","uid","initData","id","bio","twitter","instagram","website","picture","favorites","userData","Object","assign","userRef","firestore","collection","doc","set","signOut","signout","updateUser","update","console","log","sendPasswordResetEmail","confirmPasswordReset","code","signInWithGoogle","signInWithPopup","unsubscribe","onAuthStateChanged","get","document","data","AuthProvider","children","classes"],"mappings":"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","sourcesContent":["import { \n  useState, \n  useEffect,\n  useContext,\n  createContext \n} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: theme.palette.primary.background,\n    justifyContent: 'center',\n  },\n}));\n\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst UserContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(UserContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n\n  const signin = (email, password) => {\n    setLoading(true);\n\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(response => {\n        setUser(response.user)\n        setLoading(false)\n        return response.user\n      })\n      .catch((e) => setError(e.message))\n      .finally(() => setLoading(false))\n  }\n\n  const signup = (displayName, phone, email, password) => {\n    setLoading(true);\n\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        const uid = response.user.uid\n        const initData = {\n          id: uid,\n          email,\n          displayName,\n          phone,\n          bio: '',\n          twitter: '',\n          instagram: '',\n          website: '',\n          picture: '',\n          favorites: [],\n        }\n        // finish creating the full user object\n        const userData = Object.assign({}, initData)\n\n        // User was already added to the Auth database, now add it to firestore\n        const userRef = firebase.firestore().collection(\"users\")\n        userRef\n          .doc(uid)\n          .set(userData)\n          .then(() => {\n            setUser(response.user);\n          })\n          .finally(() => {\n            setLoading(false);\n            firebase.auth().signOut();\n          });\n      })\n  }\n\n  const signout = () => {\n    setLoading(true);\n\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false);\n      })\n      .finally(() => setLoading(false));\n  }\n\n  const updateUser = (userData) => {\n    const userRef = firebase.firestore().collection(\"users\");\n    if (user) {\n      return userRef\n        .doc(user.id)\n        .update(userData)\n        .then(() => {\n          console.log(\"successfully updated user\")\n        })\n    }\n  }\n\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        return true;\n      })\n  }\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => {\n        return true;\n      })\n  }\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n\n    return firebase\n      .auth()\n      .signInWithPopup(googleAuth)\n      .then((response) => {\n        //const cred = response.credential;\n        //const token = cred.token;\n        setUser(response.user)\n        return response.user;\n      })\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        userRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setUser(userData)\n            setLoading(false)\n          })\n      } else {\n        setLoading(false)\n        setUser(false)\n      }\n    })\n\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    user,\n    error,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    updateUser,\n  };\n}\n\nexport function AuthProvider({ children }) {\n  const auth = useProvideAuth();\n  const classes = useStyles();\n\n  if (auth.loading) {\n    return (\n      <div className={classes.root}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    )\n  }\n\n  return (\n    <UserContext.Provider value={auth}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}