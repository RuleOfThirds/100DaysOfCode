{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider'; //import MetricSelector from './MetricSelector';\n//import ImperialSelector from './ImperialSelector';\n\nimport spirits from '../static/spirits';\nimport { Container, TextField, IconButton, FormControl, Select, ListSubheader, MenuItem, Button, Typography, Slider } from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    textAlign: 'center'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\n\nfunction IngredientInput() {\n  _s();\n\n  const classes = useStyles();\n  const [isUnitIngredient, setIsUnitIngredient] = useState(true);\n  const [unitType, setUnitType] = useState('Imperial');\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const handleIsUnitIngredient = () => {\n    setIsUnitIngredient(!isUnitIngredient);\n  };\n\n  const handleUnitType = event => {\n    setUnitType(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Spirit\",\n          id: \"ingredient-type\",\n          value: unitType,\n          onChange: handleUnitType,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Imperial\",\n            children: \"Imperial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Metric\",\n            children: \"Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Unit\",\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ingredient\",\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          className: classes.input\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), unitType === \"Imperial\" || unitType === \"Metric\" ? /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"\",\n          id: \"search-filter\",\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Spirit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), spirits.map((spirit, id) => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: spirit,\n              children: spirit\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 30\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }, this) : false]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), isUnitIngredient ? unitType === \"Metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Milliliters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"metricAmount\",\n        defaultValue: 15,\n        valueLabelDisplay: \"auto\",\n        step: 5,\n        min: 5,\n        max: 60,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this) : unitType === \"Imperial\" ? /*#__PURE__*/_jsxDEV(ImperialSelector, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }, this) : false : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IngredientInput, \"9p33LpMjBksli895XVJuDnLxLEI=\", false, function () {\n  return [useStyles];\n});\n\n_c = IngredientInput;\nexport default function Ingredients() {\n  _s2();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const newInput = {\n    'amount': '',\n    'name': '',\n    'unit': ''\n  };\n  const [inputs, setInputs] = useState([{ ...newInput\n  }]);\n\n  const addNewInput = () => {\n    setInputs([...inputs, { ...newInput\n    }]);\n    console.log(window.pageYOffset);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    className: classes.formContainer,\n    children: [inputs.map((input, id) => {\n      return /*#__PURE__*/_jsxDEV(IngredientInput, {}, `ingredient-${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.nextItem,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: addNewInput,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        to: `step-${cocktail.activeStep}`,\n        smooth: \"true\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.nextButton,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 22\n          }, this),\n          onClick: cocktail.handleNext,\n          children: \"Keep going\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ingredients, \"mJ8DCn2OI4g8SJjiP3/bJZrZ/+c=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c2 = Ingredients;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientInput\");\n$RefreshReg$(_c2, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","spirits","Container","TextField","IconButton","FormControl","Select","ListSubheader","MenuItem","Button","Typography","Slider","Link","Scroll","makeStyles","ExpandMoreIcon","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","textAlign","buttonDiv","nextButton","borderRadius","textTransform","IngredientInput","classes","isUnitIngredient","setIsUnitIngredient","unitType","setUnitType","spiritObject","setSpiritObject","onChangeSlider","name","event","newValue","handleIsUnitIngredient","handleUnitType","target","value","className","map","spirit","id","Ingredients","cocktail","newInput","inputs","setInputs","addNewInput","console","log","window","pageYOffset","activeStep","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\n//import MetricSelector from './MetricSelector';\n//import ImperialSelector from './ImperialSelector';\nimport spirits from '../static/spirits';\nimport {\n  Container,\n  TextField,\n  IconButton,\n  FormControl,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n} from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    textAlign: 'center',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nfunction IngredientInput() {\n  const classes = useStyles();\n  const [isUnitIngredient, setIsUnitIngredient] = useState(true);\n  const [unitType, setUnitType] = useState('Imperial');\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const handleIsUnitIngredient = () => {\n    setIsUnitIngredient(!isUnitIngredient)\n  }\n\n  const handleUnitType = (event) => {\n    setUnitType(event.target.value)\n  }\n\n  return (\n    <div>\n      <div>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select \n            defaultValue=\"Spirit\" \n            id=\"ingredient-type\"\n            value={unitType}\n            onChange={handleUnitType}\n          >\n            <MenuItem value=\"Imperial\">Imperial</MenuItem>\n            <MenuItem value=\"Metric\">Metric</MenuItem>\n            <MenuItem value=\"Unit\">Unit</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField \n          id='ingredient'\n          label='Ingredient'\n          variant='outlined'\n          margin='normal'\n          InputProps={{className: classes.input}}\n        />\n        {\n          unitType === \"Imperial\" || unitType === \"Metric\"\n            ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select defaultValue=\"\" id=\"search-filter\">\n                  <ListSubheader>Spirit Type</ListSubheader>\n                  {\n                    spirits.map((spirit, id) => {\n                      return <MenuItem key={id} value={spirit}>{spirit}</MenuItem>\n                    })\n                  }\n                </Select>\n              </FormControl>\n            : false\n        }\n      </div>\n      {\n        isUnitIngredient \n          ? (\n            unitType === \"Metric\"\n              ? (\n                <div>\n                  <Typography id=\"discrete-slider\" gutterBottom>\n                    Milliliters\n                  </Typography>\n                  <Slider\n                    id=\"baseSpiritAmount\"\n                    name=\"metricAmount\"\n                    defaultValue={15}\n                    valueLabelDisplay=\"auto\"\n                    step={5}\n                    min={5}\n                    max={60}\n                    marks\n                    onChange={onChangeSlider(\"amount\")}\n                  />\n                </div>\n              ) : unitType === \"Imperial\"\n                  ? <ImperialSelector />\n                  : false\n          )\n          : false\n      }\n    </div>\n  );\n}\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const newInput = {\n    'amount': '',\n    'name': '',\n    'unit': '',\n  };\n  const [inputs, setInputs] = useState([{...newInput}]);\n\n  const addNewInput = () => {\n    setInputs([...inputs, {...newInput}])\n    console.log(window.pageYOffset)\n  }\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.formContainer}>\n      {\n        inputs.map((input, id) => { \n          return <IngredientInput key={`ingredient-${id}`} />\n        })\n      }\n      <div className={classes.nextItem}>\n        <IconButton onClick={addNewInput} color=\"primary\">\n          <AddBoxIcon fontSize=\"large\"/>\n        </IconButton>\n      </div>\n      <div className={classes.buttonDiv}>\n        <Scroll to={`step-${cocktail.activeStep}`} smooth=\"true\">\n          <Button\n            className={classes.nextButton}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            endIcon={<ExpandMoreIcon />}\n            onClick={cocktail.handleNext}\n          >\n            Keep going\n          </Button>\n        </Scroll>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}