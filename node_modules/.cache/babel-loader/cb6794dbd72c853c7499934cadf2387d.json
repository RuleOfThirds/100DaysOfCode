{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { Grid, TextField, IconButton, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Select, ListSubheader, MenuItem, Button, Typography, Slider, Divider } from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  submitButton: {\n    height: theme.spacing(7)\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst spirits = [\"Bourbon\", \"Whiskey\", \"Scotch\", \"Brandy\", \"Cognac\", \"Rum\", \"Tequila\", \"Gin\", \"Vodka\", \"Absinthe\", \"Vermouth\"];\n\nfunction IngredientInput({\n  ingredientNumber,\n  ingredientsArray,\n  input,\n  unitType\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onAddIngredientsToArray = () => {\n    ingredientsArray.push(spiritObject);\n    console.log(ingredientsArray);\n  };\n\n  console.log(\"From IngredientInput: \", ingredientNumber, input);\n  console.log(ingredientsArray, spiritObject);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"ingredient\",\n      label: \"Ingredient\",\n      name: \"name\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      InputProps: {\n        className: classes.input\n      },\n      onChange: e => onChangeInput(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        defaultValue: \"\",\n        name: \"type\",\n        id: \"spiritType\",\n        onChange: e => onChangeInput(e),\n        children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n          children: \"Spirit Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), spirits.map((spirit, id) => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: spirit,\n            children: spirit\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: classes.submitButton,\n      type: \"submit\",\n      color: \"primary\",\n      variant: \"contained\",\n      onClick: onAddIngredientsToArray,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Milliliters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"metricAmount\",\n        defaultValue: 15,\n        valueLabelDisplay: \"auto\",\n        step: 5,\n        min: 5,\n        max: 60,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Ounces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"amount\",\n        defaultValue: 1,\n        valueLabelDisplay: \"auto\",\n        step: 0.25,\n        min: 0.25,\n        max: 6,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IngredientInput, \"tXhlAyqMvriaZqFXZv4hlnukDUg=\", false, function () {\n  return [useStyles];\n});\n\n_c = IngredientInput;\nexport default function Ingredients() {\n  _s2();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const [inputs, setInputs] = useState([{}]);\n  const [unitType, setUnitType] = useState('imperial');\n  const [ingredients, setIngredients] = useState([]);\n\n  const addNewInput = () => setInputs([...inputs, {}]);\n\n  const handleUnitType = e => setUnitType(e.target.value);\n\n  console.log(\"From Ingredients: \", ingredients);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Unit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"unitType\",\n            name: \"unit\",\n            value: unitType,\n            onChange: handleUnitType,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"imperial\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 59\n              }, this),\n              label: \"Imperial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"metric\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 57\n              }, this),\n              label: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"unit\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 55\n              }, this),\n              label: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: addNewInput,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), inputs.map((input, id) => {\n      return /*#__PURE__*/_jsxDEV(IngredientInput, {\n        ingredientNumber: id,\n        input: input,\n        ingredientsArray: ingredients,\n        unitType: unitType\n      }, `ingredient-${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        to: `step-${cocktail.activeStep}`,\n        smooth: \"true\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.nextButton,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 22\n          }, this),\n          onClick: cocktail.handleNext,\n          children: \"Keep going\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ingredients, \"BlB+/HxIDZEDb1KLA+qtIVqTtEo=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c2 = Ingredients;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientInput\");\n$RefreshReg$(_c2, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","Grid","TextField","IconButton","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","Select","ListSubheader","MenuItem","Button","Typography","Slider","Divider","Link","Scroll","makeStyles","ExpandMoreIcon","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","alignItems","justifyContent","buttonDiv","textAlign","submitButton","height","nextButton","borderRadius","textTransform","spirits","IngredientInput","ingredientNumber","ingredientsArray","unitType","classes","spiritObject","setSpiritObject","onChangeSlider","name","event","newValue","onChangeInput","e","target","value","onAddIngredientsToArray","push","console","log","className","map","spirit","id","Ingredients","cocktail","inputs","setInputs","setUnitType","ingredients","setIngredients","addNewInput","handleUnitType","activeStep","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n  Divider,\n} from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  submitButton: {\n    height: theme.spacing(7),\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst spirits = [\n  \"Bourbon\",\n  \"Whiskey\",\n  \"Scotch\",\n  \"Brandy\",\n  \"Cognac\",\n  \"Rum\",\n  \"Tequila\",\n  \"Gin\",\n  \"Vodka\",\n  \"Absinthe\",\n  \"Vermouth\",\n];\n  \nfunction IngredientInput({ ingredientNumber, ingredientsArray, input, unitType }) {\n  const classes = useStyles();\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  const onAddIngredientsToArray = () => {\n    ingredientsArray.push(spiritObject)\n    console.log(ingredientsArray)\n  }\n\n  console.log(\"From IngredientInput: \", ingredientNumber, input)\n  console.log(ingredientsArray, spiritObject)\n\n  return (\n    <div>\n      <TextField \n        id='ingredient'\n        label='Ingredient'\n        name='name'\n        variant='outlined'\n        margin='normal'\n        InputProps={{className: classes.input}}\n        onChange={(e) => onChangeInput(e)}\n      />\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <Select \n          defaultValue=\"\" \n          name='type' \n          id=\"spiritType\"\n          onChange={(e) => onChangeInput(e)}\n        >\n          <ListSubheader>Spirit Type</ListSubheader>\n          {\n            spirits.map((spirit, id) => {\n              return <MenuItem key={id} value={spirit}>{spirit}</MenuItem>\n            })\n          }\n        </Select>\n      </FormControl>\n      <Button\n        className={classes.submitButton}\n        type=\"submit\"\n        color=\"primary\"\n        variant=\"contained\"\n        onClick={onAddIngredientsToArray}\n      >\n        Submit\n      </Button>\n      {\n        unitType === \"metric\" ? \n          <div>\n            <Typography id=\"discrete-slider\" gutterBottom>\n              Milliliters\n            </Typography>\n            <Slider\n              id=\"baseSpiritAmount\"\n              name=\"metricAmount\"\n              defaultValue={15}\n              valueLabelDisplay=\"auto\"\n              step={5}\n              min={5}\n              max={60}\n              marks\n              onChange={onChangeSlider(\"amount\")}\n            />\n          </div>\n        : <div>\n            <Typography id=\"discrete-slider\" gutterBottom>\n              Ounces\n            </Typography>\n            <Slider\n              id='baseSpiritAmount'\n              name='amount'\n              defaultValue={1}\n              valueLabelDisplay=\"auto\"\n              step={0.25}\n              min={0.25}\n              max={6}\n              marks\n              onChange={onChangeSlider(\"amount\")}\n            />\n          </div>\n      }\n    </div>\n  );\n}\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const [inputs, setInputs] = useState([{}]);\n  const [unitType, setUnitType] = useState('imperial');\n  const [ingredients, setIngredients] = useState([]);\n\n  const addNewInput = () => setInputs([...inputs, {}])\n\n  const handleUnitType = (e) => setUnitType(e.target.value)\n\n  console.log(\"From Ingredients: \", ingredients)\n\n  return (\n    <div className={classes.formContainer}>\n      <Grid container alignItems='center'>\n        <Grid item xs>\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormLabel component='legend'>Unit Type</FormLabel>\n            <RadioGroup row aria-label='unitType' name='unit' value={unitType} onChange={handleUnitType}>\n              <FormControlLabel value='imperial' control={<Radio />} label='Imperial' />\n              <FormControlLabel value='metric' control={<Radio />} label='Metric' />\n              <FormControlLabel value='unit' control={<Radio />} label='Unit' />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={addNewInput} color=\"primary\">\n            <AddBoxIcon fontSize=\"large\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Divider />\n      {\n        inputs.map((input, id) => { \n          return (\n            <IngredientInput \n              key={`ingredient-${id}`} \n              ingredientNumber={id} \n              input={input} \n              ingredientsArray={ingredients}\n              unitType={unitType}\n            />\n          )\n        })\n      }\n      <div className={classes.buttonDiv}>\n        <Scroll to={`step-${cocktail.activeStep}`} smooth=\"true\">\n          <Button\n            className={classes.nextButton}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            endIcon={<ExpandMoreIcon />}\n            onClick={cocktail.handleNext}\n          >\n            Keep going\n          </Button>\n        </Scroll>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}