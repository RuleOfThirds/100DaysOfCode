{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { Grid, TextField, IconButton, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Select, ListSubheader, MenuItem, Button, Typography, Slider } from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  submitButton: {\n    height: theme.spacing(7)\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst spirits = [\"Bourbon\", \"Whiskey\", \"Scotch\", \"Brandy\", \"Cognac\", \"Rum\", \"Tequila\", \"Gin\", \"Vodka\", \"Absinthe\", \"Vermouth\"];\n\nfunction IngredientInput({\n  ingredientNumber,\n  newInput\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [isUnitIngredient, setIsUnitIngredient] = useState(true);\n  const [unitType, setUnitType] = useState('imperial');\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleIsUnitIngredient = () => {\n    setIsUnitIngredient(!isUnitIngredient);\n  };\n\n  console.log(\"From IngredientInput: \", ingredientNumber, newInput);\n  console.log(spiritObject);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"ingredient\",\n          label: \"Ingredient\",\n          name: \"name\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          InputProps: {\n            className: classes.input\n          },\n          onChange: e => onChangeInput(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: // Select the spirit type here \n        unitType === \"imperial\" || unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"\",\n            name: \"type\",\n            id: \"spiritType\",\n            onChange: e => onChangeInput(e),\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Spirit Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, this), spirits.map((spirit, id) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: spirit,\n                children: spirit\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 32\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this) : false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.submitButton,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\" //  onClick={cocktail.handleNext}\n          ,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), // This is the slider\n    isUnitIngredient ? unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Milliliters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"metricAmount\",\n        defaultValue: 15,\n        valueLabelDisplay: \"auto\",\n        step: 5,\n        min: 5,\n        max: 60,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }, this) : unitType === \"imperial\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Ounces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"amount\",\n        defaultValue: 1,\n        valueLabelDisplay: \"auto\",\n        step: 0.25,\n        min: 0.25,\n        max: 6,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }, this) : false : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IngredientInput, \"QpVc5Cupdtba3HVXNnc3G8+vWCs=\", false, function () {\n  return [useStyles];\n});\n\n_c = IngredientInput;\nexport default function Ingredients() {\n  _s2();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const newInput = {};\n  const [inputs, setInputs] = useState([{ ...newInput\n  }]);\n  const [unitType, setUnitType] = useState('imperial');\n\n  const addNewInput = () => {\n    setInputs([...inputs, { ...newInput\n    }]);\n  };\n\n  const handleUnitType = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          component: \"fieldset\",\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            component: \"legend\",\n            children: \"Unit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            \"aria-label\": \"unitType\",\n            name: \"unit\",\n            value: unitType,\n            onChange: handleUnitType,\n            children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"imperial\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 59\n              }, this),\n              label: \"Imperial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"metric\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 57\n              }, this),\n              label: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: \"unit\",\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 55\n              }, this),\n              label: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: addNewInput,\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), inputs.map((input, id) => {\n      return /*#__PURE__*/_jsxDEV(IngredientInput, {\n        ingredientNumber: id,\n        newInput: input,\n        setInput: setInputs\n      }, `ingredient-${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        to: `step-${cocktail.activeStep}`,\n        smooth: \"true\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.nextButton,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 22\n          }, this),\n          onClick: cocktail.handleNext,\n          children: \"Keep going\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ingredients, \"zntrFPDBQ6eMOELkFGpmH6WDLfI=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c2 = Ingredients;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientInput\");\n$RefreshReg$(_c2, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","Grid","TextField","IconButton","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","Select","ListSubheader","MenuItem","Button","Typography","Slider","Link","Scroll","makeStyles","ExpandMoreIcon","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","alignItems","justifyContent","buttonDiv","textAlign","submitButton","height","nextButton","borderRadius","textTransform","spirits","IngredientInput","ingredientNumber","newInput","classes","isUnitIngredient","setIsUnitIngredient","unitType","setUnitType","spiritObject","setSpiritObject","onChangeSlider","name","event","newValue","onChangeInput","e","target","value","handleIsUnitIngredient","console","log","className","map","spirit","id","Ingredients","cocktail","inputs","setInputs","addNewInput","handleUnitType","activeStep","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n} from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  submitButton: {\n    height: theme.spacing(7),\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst spirits = [\n  \"Bourbon\",\n  \"Whiskey\",\n  \"Scotch\",\n  \"Brandy\",\n  \"Cognac\",\n  \"Rum\",\n  \"Tequila\",\n  \"Gin\",\n  \"Vodka\",\n  \"Absinthe\",\n  \"Vermouth\",\n];\n  \nfunction IngredientInput({ ingredientNumber, newInput }) {\n  const classes = useStyles();\n  const [isUnitIngredient, setIsUnitIngredient] = useState(true);\n  const [unitType, setUnitType] = useState('imperial');\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  const handleIsUnitIngredient = () => {\n    setIsUnitIngredient(!isUnitIngredient)\n  }\n\n  console.log(\"From IngredientInput: \", ingredientNumber, newInput)\n  console.log(spiritObject)\n\n  return (\n    <div>\n      <Grid container alignItems='center'>\n        {/* This is where you enter the spirit name */}\n        <Grid item xs>\n          <TextField \n            id='ingredient'\n            label='Ingredient'\n            name='name'\n            variant='outlined'\n            margin='normal'\n            InputProps={{className: classes.input}}\n            onChange={(e) => onChangeInput(e)}\n          />\n        </Grid>\n        <Grid item xs>\n          {\n            // Select the spirit type here \n            unitType === \"imperial\" || unitType === \"metric\"\n              ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <Select \n                    defaultValue=\"\" \n                    name='type' \n                    id=\"spiritType\"\n                    onChange={(e) => onChangeInput(e)}\n                  >\n                    <ListSubheader>Spirit Type</ListSubheader>\n                    {\n                      spirits.map((spirit, id) => {\n                        return <MenuItem key={id} value={spirit}>{spirit}</MenuItem>\n                      })\n                    }\n                  </Select>\n                </FormControl>\n              : false\n          }\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.submitButton}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n          //  onClick={cocktail.handleNext}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n      {\n        // This is the slider\n        isUnitIngredient \n          ? (\n            unitType === \"metric\"\n              ? (\n                <div>\n                  <Typography id=\"discrete-slider\" gutterBottom>\n                    Milliliters\n                  </Typography>\n                  <Slider\n                    id=\"baseSpiritAmount\"\n                    name=\"metricAmount\"\n                    defaultValue={15}\n                    valueLabelDisplay=\"auto\"\n                    step={5}\n                    min={5}\n                    max={60}\n                    marks\n                    onChange={onChangeSlider(\"amount\")}\n                  />\n                </div>\n              ) : unitType === \"imperial\"\n                  ? (\n                    <div>\n                      <Typography id=\"discrete-slider\" gutterBottom>\n                        Ounces\n                      </Typography>\n                      <Slider\n                        id='baseSpiritAmount'\n                        name='amount'\n                        defaultValue={1}\n                        valueLabelDisplay=\"auto\"\n                        step={0.25}\n                        min={0.25}\n                        max={6}\n                        marks\n                        onChange={onChangeSlider(\"amount\")}\n                      />\n                    </div>\n                  ) : false\n          ) : false\n      }\n    </div>\n  );\n}\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const newInput = {}\n  const [inputs, setInputs] = useState([{...newInput}]);\n  const [unitType, setUnitType] = useState('imperial');\n\n  const addNewInput = () => {\n    setInputs([...inputs, {...newInput}])\n  }\n\n  const handleUnitType = () => {\n  }\n\n  return (\n    <div className={classes.formContainer}>\n      <Grid container alignItems='center'>\n        <Grid item xs>\n          <FormControl component='fieldset' className={classes.formControl}>\n            <FormLabel component='legend'>Unit Type</FormLabel>\n            <RadioGroup row aria-label='unitType' name='unit' value={unitType} onChange={handleUnitType}>\n              <FormControlLabel value='imperial' control={<Radio />} label='Imperial' />\n              <FormControlLabel value='metric' control={<Radio />} label='Metric' />\n              <FormControlLabel value='unit' control={<Radio />} label='Unit' />\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={addNewInput} color=\"primary\">\n            <AddBoxIcon fontSize=\"large\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      {\n        inputs.map((input, id) => { \n          return (\n            <IngredientInput \n              key={`ingredient-${id}`} \n              ingredientNumber={id} \n              newInput={input} \n              setInput={setInputs} \n            />\n          )\n        })\n      }\n      <div className={classes.buttonDiv}>\n        <Scroll to={`step-${cocktail.activeStep}`} smooth=\"true\">\n          <Button\n            className={classes.nextButton}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            endIcon={<ExpandMoreIcon />}\n            onClick={cocktail.handleNext}\n          >\n            Keep going\n          </Button>\n        </Scroll>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}