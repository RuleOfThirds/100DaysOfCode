{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLayoutEffect, useState } from 'react';\nexport default function useWindowPosition(id) {\n  _s();\n\n  const [animation, setAnimation] = useState(false);\n  useLayoutEffect(() => {\n    // this function runs as soon as you begin scrolling\n    function updatePosition() {\n      const offSetHeight = window.document.getElementById(id).offsetHeight; // then, once window.document.getElementById(\"header\").offsetHeight * 0.7 is less then the pageYOffset\n      // the animation becomes true\n      // So once the height of a certain element is higher then the pages YOffset, run the animation.\n      // that's when the animation should kick off\n\n      if (window.pageYOffset > offSetHeight * 0.7) {\n        setAnimation(true);\n      }\n    } // as seen here\n\n\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n    return () => window.removeEventListener('scroll', updatePosition);\n  }, [id]);\n  return animation;\n}\n\n_s(useWindowPosition, \"nuWaoAFUqcnv7Yhijhu2/YERFMI=\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/LandingPage/useWindowPosition.js"],"names":["useLayoutEffect","useState","useWindowPosition","id","animation","setAnimation","updatePosition","offSetHeight","window","document","getElementById","offsetHeight","pageYOffset","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,eAAe,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,eAAe,CAAC,MAAM;AACrB;AACA,aAASM,cAAT,GAA0B;AACzB,YAAMC,YAAY,GAAGC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+BP,EAA/B,EAAmCQ,YAAxD,CADyB,CAEzB;AACA;AACA;AACA;;AACA,UAAIH,MAAM,CAACI,WAAP,GAAqBL,YAAY,GAAG,GAAxC,EAA6C;AAC5CF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD,KAXoB,CAYrB;;;AACAG,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCP,cAAlC;AACAA,IAAAA,cAAc;AACd,WAAO,MAAME,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCR,cAArC,CAAb;AACA,GAhBc,EAgBZ,CAACH,EAAD,CAhBY,CAAf;AAkBA,SAAOC,SAAP;AACA;;GAtBuBF,iB","sourcesContent":["import { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowPosition(id) {\n\tconst [animation, setAnimation] = useState(false);\n\n\tuseLayoutEffect(() => {\n\t\t// this function runs as soon as you begin scrolling\n\t\tfunction updatePosition() {\n\t\t\tconst offSetHeight = window.document.getElementById(id).offsetHeight;\n\t\t\t// then, once window.document.getElementById(\"header\").offsetHeight * 0.7 is less then the pageYOffset\n\t\t\t// the animation becomes true\n\t\t\t// So once the height of a certain element is higher then the pages YOffset, run the animation.\n\t\t\t// that's when the animation should kick off\n\t\t\tif (window.pageYOffset > offSetHeight * 0.7) {\n\t\t\t\tsetAnimation(true);\n\t\t\t}\n\t\t}\n\t\t// as seen here\n\t\twindow.addEventListener('scroll', updatePosition);\n\t\tupdatePosition();\n\t\treturn () => window.removeEventListener('scroll', updatePosition);\n\t}, [id])\n\n\treturn animation;\n}\n"]},"metadata":{},"sourceType":"module"}