{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/FirebaseProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    backgroundColor: '#202020',\n    height: '100vh',\n    justifyContent: 'center'\n  }\n});\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst FirebaseContext = /*#__PURE__*/createContext();\nexport const useFirebase = () => {\n  _s();\n\n  return useContext(FirebaseContext);\n};\n\n_s(useFirebase, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useFirebaseProvider() {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n  const storageRef = firebase.storage().ref();\n  console.log(error, user);\n\n  const signin = (email, password) => {\n    setLoading(true);\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    }).catch(e => setError(e.message)).finally(() => {\n      setLoading(false);\n      setError(null);\n    });\n  };\n\n  const signup = data => {\n    const {\n      accountType,\n      company,\n      confirm,\n      name,\n      email,\n      password,\n      phone\n    } = data;\n    setLoading(true);\n    /*    if (confirm !== password) {\n          setError(\"Passwords do not match\");\n          setLoading(false);\n        } else {\n        */\n\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      const userData = Object.assign({}, {\n        accountType,\n        bio: '',\n        company,\n        email,\n        favorites: [],\n        id: response.user.uid,\n        instagram: '',\n        isVerified: false,\n        isAdmin: accountType === 'business' ? true : false,\n        name,\n        phone,\n        picture: '',\n        twitter: '',\n        website: ''\n      });\n      firebase.firestore().collection(\"users\").doc(response.user.id).set(userData);\n    }).catch(e => setError(e.message)).finally(() => {\n      setLoading(false);\n      setError(null);\n    }); //}\n  };\n\n  const signout = () => {\n    console.log(\"It's signing you out automatically\");\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n      setError(null);\n    });\n  };\n\n  const updateUser = userData => {\n    const userRef = firebase.firestore().collection(\"users\");\n\n    if (user) {\n      return userRef.doc(user.id).update(userData).then(() => {\n        console.log(\"successfully updated user\");\n      }).catch(e => setError(e));\n    }\n  };\n\n  const uploadImageToStorage = (image, name) => {\n    //    const imageRef = storageRef.child(`${user.id}/images/${name}`)\n    const imageRef = storageRef.child(name); // This successfully updates the user's picture in Firestore. Now to just get it to display on Profile\n\n    imageRef.put(image).then(snapshot => {\n      imageRef.getDownloadURL().then(url => {\n        updateUser({\n          picture: url\n        });\n      });\n    }).catch(e => setError(e));\n  };\n\n  const sendContactEmail = formData => {\n    const emailRef = firebase.firestore().collection(\"emails\");\n    return new Promise((resolve, reject) => {\n      emailRef.add({\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone || '',\n        message: formData.message,\n        time: new Date()\n      }).then(() => resolve(console.log(\"Successfully added email to database\"))).catch(e => {\n        reject(\"Failed to submit contact form. Perhaps you forgot to fill out a required input?\");\n      });\n    });\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => true).catch(e => setError(e));\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => true);\n  };\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n    return firebase.auth().signInWithPopup(googleAuth).then(response => {\n      //const cred = response.credential;\n      //const token = cred.token;\n      setUser(response.user);\n      return response.user;\n    }).finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(user);\n        userRef.doc(user.uid).get().then(document => {\n          const userData = document.data();\n          setUser(userData);\n          setLoading(false);\n        });\n      } else {\n        setLoading(false);\n        setUser(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    // the user object\n    error,\n    // the error message\n    loading,\n    // the loading boolean\n    signin,\n    signup,\n    signout,\n    signInWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    updateUser,\n    uploadImageToStorage,\n    sendContactEmail\n  };\n}\n\n_s2(useFirebaseProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n\nexport function FirebaseProvider({\n  children\n}) {\n  _s3();\n\n  const classes = useStyles();\n  const firebase = useFirebaseProvider();\n\n  if (firebase.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"secondary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: firebase,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(FirebaseProvider, \"VTSVNtX0TjwSeYwoYr1/Y1dntWs=\", false, function () {\n  return [useStyles, useFirebaseProvider];\n});\n\n_c = FirebaseProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseProvider\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/FirebaseProvider.js"],"names":["useState","useEffect","useContext","createContext","firebase","CircularProgress","makeStyles","useStyles","root","display","backgroundColor","height","justifyContent","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENT_ID","initializeApp","FirebaseContext","useFirebase","useFirebaseProvider","user","setUser","loading","setLoading","error","setError","googleAuth","auth","GoogleAuthProvider","storageRef","storage","ref","console","log","signin","email","password","signInWithEmailAndPassword","then","response","catch","e","message","finally","signup","data","accountType","company","confirm","name","phone","createUserWithEmailAndPassword","userData","Object","assign","bio","favorites","id","uid","instagram","isVerified","isAdmin","picture","twitter","website","firestore","collection","doc","set","signout","signOut","updateUser","userRef","update","uploadImageToStorage","image","imageRef","child","put","snapshot","getDownloadURL","url","sendContactEmail","formData","emailRef","Promise","resolve","reject","add","time","Date","sendPasswordResetEmail","confirmPasswordReset","code","signInWithGoogle","signInWithPopup","unsubscribe","onAuthStateChanged","get","document","FirebaseProvider","children","classes"],"mappings":";;;;;;;AAAA,SACEA,QADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,aAJF,QAKO,OALP;AAMA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAO,kBAAP;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAC;AAC3BE,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,eAAe,EAAE,SAFb;AAGJC,IAAAA,MAAM,EAAE,OAHJ;AAIJC,IAAAA,cAAc,EAAE;AAJZ;AADqB,CAAD,CAA5B;AASA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADC;AAErBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFH;AAGrBC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,6BAHF;AAIrBC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,iCAJN;AAKrBC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,sCALV;AAMrBC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,eANE;AAOrBC,EAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPN,CAAvB;AASAzB,QAAQ,CAAC0B,aAAT,CAAuBjB,cAAvB;AAEA,MAAMkB,eAAe,gBAAG5B,aAAa,EAArC;AAEA,OAAO,MAAM6B,WAAW,GAAG,MAAM;AAAA;;AAC/B,SAAO9B,UAAU,CAAC6B,eAAD,CAAjB;AACD,CAFM;;GAAMC,W;;AAIb,SAASC,mBAAT,GAA+B;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACoC,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACsC,KAAD,EAAQC,QAAR,IAAoBvC,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMwC,UAAU,GAAG,IAAIpC,QAAQ,CAACqC,IAAT,CAAcC,kBAAlB,EAAnB;AACA,QAAMC,UAAU,GAAGvC,QAAQ,CAACwC,OAAT,GAAmBC,GAAnB,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ,EAAmBJ,IAAnB;;AAEA,QAAMc,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAClCb,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,WAAOjC,QAAQ,CACZqC,IADI,GAEJU,0BAFI,CAEuBF,KAFvB,EAE8BC,QAF9B,EAGJE,IAHI,CAGCC,QAAQ,IAAI;AAChBlB,MAAAA,OAAO,CAACkB,QAAQ,CAACnB,IAAV,CAAP;AACA,aAAOmB,QAAQ,CAACnB,IAAhB;AACD,KANI,EAOJoB,KAPI,CAOGC,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,OAAH,CAPjB,EAQJC,OARI,CAQI,MAAM;AACbpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAXI,CAAP;AAYD,GAfD;;AAiBA,QAAMmB,MAAM,GAAIC,IAAD,IAAU;AACvB,UAAM;AACJC,MAAAA,WADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA,OAHI;AAIJC,MAAAA,IAJI;AAKJd,MAAAA,KALI;AAMJC,MAAAA,QANI;AAOJc,MAAAA;AAPI,QAQFL,IARJ;AAUAtB,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEJ;AACA;AACA;AACA;AACA;;AACM,WAAOjC,QAAQ,CACZqC,IADI,GAEJwB,8BAFI,CAE2BhB,KAF3B,EAEkCC,QAFlC,EAGJE,IAHI,CAGCC,QAAQ,IAAI;AAChB,YAAMa,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACjCR,QAAAA,WADiC;AAEjCS,QAAAA,GAAG,EAAE,EAF4B;AAGjCR,QAAAA,OAHiC;AAIjCZ,QAAAA,KAJiC;AAKjCqB,QAAAA,SAAS,EAAE,EALsB;AAMjCC,QAAAA,EAAE,EAAElB,QAAQ,CAACnB,IAAT,CAAcsC,GANe;AAOjCC,QAAAA,SAAS,EAAE,EAPsB;AAQjCC,QAAAA,UAAU,EAAE,KARqB;AASjCC,QAAAA,OAAO,EAAEf,WAAW,KAAK,UAAhB,GAA6B,IAA7B,GAAoC,KATZ;AAUjCG,QAAAA,IAViC;AAWjCC,QAAAA,KAXiC;AAYjCY,QAAAA,OAAO,EAAE,EAZwB;AAajCC,QAAAA,OAAO,EAAE,EAbwB;AAcjCC,QAAAA,OAAO,EAAE;AAdwB,OAAlB,CAAjB;AAgBA1E,MAAAA,QAAQ,CAAC2E,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6C5B,QAAQ,CAACnB,IAAT,CAAcqC,EAA3D,EAA+DW,GAA/D,CAAmEhB,QAAnE;AACD,KArBI,EAsBJZ,KAtBI,CAsBGC,CAAD,IAAOhB,QAAQ,CAACgB,CAAC,CAACC,OAAH,CAtBjB,EAuBJC,OAvBI,CAuBI,MAAM;AACbpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KA1BI,CAAP,CAlBqB,CA6CvB;AACD,GA9CD;;AAgDA,QAAM4C,OAAO,GAAG,MAAM;AACpBrC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,WAAO3C,QAAQ,CACZqC,IADI,GAEJ2C,OAFI,GAGJhC,IAHI,CAGC,MAAM;AACVjB,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAI,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KANI,CAAP;AAOD,GATD;;AAWA,QAAM8C,UAAU,GAAInB,QAAD,IAAc;AAC/B,UAAMoB,OAAO,GAAGlF,QAAQ,CAAC2E,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAhB;;AACA,QAAI9C,IAAJ,EAAU;AACR,aAAOoD,OAAO,CACXL,GADI,CACA/C,IAAI,CAACqC,EADL,EAEJgB,MAFI,CAEGrB,QAFH,EAGJd,IAHI,CAGC,MAAM;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,OALI,EAMJO,KANI,CAMGC,CAAD,IAAOhB,QAAQ,CAACgB,CAAD,CANjB,CAAP;AAOD;AACF,GAXD;;AAaA,QAAMiC,oBAAoB,GAAG,CAACC,KAAD,EAAQ1B,IAAR,KAAiB;AAChD;AACI,UAAM2B,QAAQ,GAAG/C,UAAU,CAACgD,KAAX,CAAiB5B,IAAjB,CAAjB,CAF4C,CAI5C;;AACA2B,IAAAA,QAAQ,CACLE,GADH,CACOH,KADP,EAEGrC,IAFH,CAESyC,QAAD,IAAc;AAClBH,MAAAA,QAAQ,CAACI,cAAT,GAA0B1C,IAA1B,CAAgC2C,GAAD,IAAS;AACtCV,QAAAA,UAAU,CAAC;AAACT,UAAAA,OAAO,EAAEmB;AAAV,SAAD,CAAV;AACD,OAFD;AAGD,KANH,EAOGzC,KAPH,CAOUC,CAAD,IAAOhB,QAAQ,CAACgB,CAAD,CAPxB;AAQD,GAbD;;AAeA,QAAMyC,gBAAgB,GAAIC,QAAD,IAAc;AACrC,UAAMC,QAAQ,GAAG9F,QAAQ,CAAC2E,SAAT,GAAqBC,UAArB,CAAgC,QAAhC,CAAjB;AAEA,WAAO,IAAImB,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCH,MAAAA,QAAQ,CAACI,GAAT,CAAa;AACXvC,QAAAA,IAAI,EAAEkC,QAAQ,CAAClC,IADJ;AAEXd,QAAAA,KAAK,EAAEgD,QAAQ,CAAChD,KAFL;AAGXe,QAAAA,KAAK,EAAEiC,QAAQ,CAACjC,KAAT,IAAkB,EAHd;AAIXR,QAAAA,OAAO,EAAEyC,QAAQ,CAACzC,OAJP;AAKX+C,QAAAA,IAAI,EAAE,IAAIC,IAAJ;AALK,OAAb,EAOCpD,IAPD,CAOM,MAAMgD,OAAO,CAACtD,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAD,CAPnB,EAQCO,KARD,CAQQC,CAAD,IAAO;AACZ8C,QAAAA,MAAM,CAAC,iFAAD,CAAN;AACD,OAVD;AAWD,KAZM,CAAP;AAaD,GAhBD;;AAkBA,QAAMI,sBAAsB,GAAIxD,KAAD,IAAW;AACxC,WAAO7C,QAAQ,CACZqC,IADI,GAEJgE,sBAFI,CAEmBxD,KAFnB,EAGJG,IAHI,CAGC,MAAM,IAHP,EAIJE,KAJI,CAIGC,CAAD,IAAOhB,QAAQ,CAACgB,CAAD,CAJjB,CAAP;AAKD,GAND;;AAQA,QAAMmD,oBAAoB,GAAG,CAACC,IAAD,EAAOzD,QAAP,KAAoB;AAC/C,WAAO9C,QAAQ,CACZqC,IADI,GAEJiE,oBAFI,CAEiBC,IAFjB,EAEuBzD,QAFvB,EAGJE,IAHI,CAGC,MAAM,IAHP,CAAP;AAID,GALD;;AAOA,QAAMwD,gBAAgB,GAAG,MAAM;AAC7BvE,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,WAAOjC,QAAQ,CACZqC,IADI,GAEJoE,eAFI,CAEYrE,UAFZ,EAGJY,IAHI,CAGEC,QAAD,IAAc;AAClB;AACA;AACAlB,MAAAA,OAAO,CAACkB,QAAQ,CAACnB,IAAV,CAAP;AACA,aAAOmB,QAAQ,CAACnB,IAAhB;AACD,KARI,EASJuB,OATI,CASI,MAAMpB,UAAU,CAAC,KAAD,CATpB,CAAP;AAUD,GAbD;;AAeApC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqF,OAAO,GAAGlF,QAAQ,CAAC2E,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,CAAhB;AACA,UAAM8B,WAAW,GAAG1G,QAAQ,CAACqC,IAAT,GAAgBsE,kBAAhB,CAAmC7E,IAAI,IAAI;AAC7D,UAAIA,IAAJ,EAAU;AACRY,QAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAoD,QAAAA,OAAO,CACJL,GADH,CACO/C,IAAI,CAACsC,GADZ,EAEGwC,GAFH,GAGG5D,IAHH,CAGS6D,QAAD,IAAc;AAClB,gBAAM/C,QAAQ,GAAG+C,QAAQ,CAACtD,IAAT,EAAjB;AACAxB,UAAAA,OAAO,CAAC+B,QAAD,CAAP;AACA7B,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD,SAPH;AAQD,OAVD,MAUO;AACLA,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAfmB,CAApB;AAiBA,WAAO,MAAM2E,WAAW,EAAxB;AACD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,SAAO;AACL5E,IAAAA,IADK;AACK;AACVI,IAAAA,KAFK;AAEK;AACVF,IAAAA,OAHK;AAGK;AACVY,IAAAA,MAJK;AAKLU,IAAAA,MALK;AAMLyB,IAAAA,OANK;AAOLyB,IAAAA,gBAPK;AAQLH,IAAAA,sBARK;AASLC,IAAAA,oBATK;AAULrB,IAAAA,UAVK;AAWLG,IAAAA,oBAXK;AAYLQ,IAAAA;AAZK,GAAP;AAcD;;IArMQ/D,mB;;AAuMT,OAAO,SAASiF,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAAA;;AAC7C,QAAMC,OAAO,GAAG7G,SAAS,EAAzB;AACA,QAAMH,QAAQ,GAAG6B,mBAAmB,EAApC;;AAEA,MAAI7B,QAAQ,CAACgC,OAAb,EAAsB;AACpB,wBACE;AAAK,MAAA,SAAS,EAAEgF,OAAO,CAAC5G,IAAxB;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEJ,QAAjC;AAAA,cACG+G;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAjBeD,gB;UACE3G,S,EACC0B,mB;;;KAFHiF,gB","sourcesContent":["import { \n  useState, \n  useEffect,\n  useContext,\n  createContext \n} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    backgroundColor: '#202020',\n    height: '100vh',\n    justifyContent: 'center',\n  },\n});\n\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst FirebaseContext = createContext();\n\nexport const useFirebase = () => {\n  return useContext(FirebaseContext);\n}\n\nfunction useFirebaseProvider() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n  const storageRef = firebase.storage().ref();\n\n  console.log(error, user);\n\n  const signin = (email, password) => {\n    setLoading(true)\n\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(response => {\n        setUser(response.user)\n        return response.user;\n      })\n      .catch((e) => setError(e.message))\n      .finally(() => {\n        setLoading(false)\n        setError(null)\n      })\n  }\n\n  const signup = (data) => {\n    const { \n      accountType,\n      company, \n      confirm, \n      name, \n      email, \n      password, \n      phone \n    } = data;\n\n    setLoading(true)\n\n/*    if (confirm !== password) {\n      setError(\"Passwords do not match\");\n      setLoading(false);\n    } else {\n    */\n      return firebase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n        .then(response => {\n          const userData = Object.assign({}, {\n            accountType,\n            bio: '',\n            company,\n            email,\n            favorites: [],\n            id: response.user.uid,\n            instagram: '',\n            isVerified: false,\n            isAdmin: accountType === 'business' ? true : false,\n            name,\n            phone,\n            picture: '',\n            twitter: '',\n            website: '',\n          })\n          firebase.firestore().collection(\"users\").doc(response.user.id).set(userData)\n        })\n        .catch((e) => setError(e.message))\n        .finally(() => {\n          setLoading(false)\n          setError(null)\n        })\n    //}\n  }\n\n  const signout = () => {\n    console.log(\"It's signing you out automatically\");\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false)\n        setError(null)\n      })\n  }\n\n  const updateUser = (userData) => {\n    const userRef = firebase.firestore().collection(\"users\");\n    if (user) {\n      return userRef\n        .doc(user.id)\n        .update(userData)\n        .then(() => {\n          console.log(\"successfully updated user\")\n        })\n        .catch((e) => setError(e))\n    }\n  }\n\n  const uploadImageToStorage = (image, name) => {\n//    const imageRef = storageRef.child(`${user.id}/images/${name}`)\n    const imageRef = storageRef.child(name)\n\n    // This successfully updates the user's picture in Firestore. Now to just get it to display on Profile\n    imageRef\n      .put(image)\n      .then((snapshot) => {\n        imageRef.getDownloadURL().then((url) => {\n          updateUser({picture: url})\n        })\n      })\n      .catch((e) => setError(e))\n  }\n\n  const sendContactEmail = (formData) => {\n    const emailRef = firebase.firestore().collection(\"emails\");\n\n    return new Promise((resolve, reject) => {\n      emailRef.add({\n        name: formData.name,\n        email: formData.email,\n        phone: formData.phone || '',\n        message: formData.message,\n        time: new Date(),\n      })\n      .then(() => resolve(console.log(\"Successfully added email to database\")))\n      .catch((e) => {\n        reject(\"Failed to submit contact form. Perhaps you forgot to fill out a required input?\")\n      })\n    })\n  }\n\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => true)\n      .catch((e) => setError(e))\n  }\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => true)\n  }\n\n  const signInWithGoogle = () => {\n    setLoading(true);\n\n    return firebase\n      .auth()\n      .signInWithPopup(googleAuth)\n      .then((response) => {\n        //const cred = response.credential;\n        //const token = cred.token;\n        setUser(response.user)\n        return response.user;\n      })\n      .finally(() => setLoading(false));\n  }\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        console.log(user)\n        userRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            setUser(userData)\n            setLoading(false)\n          })\n      } else {\n        setLoading(false)\n        setUser(false)\n      }\n    })\n\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    user,     // the user object\n    error,    // the error message\n    loading,  // the loading boolean\n    signin, \n    signup,\n    signout,\n    signInWithGoogle,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    updateUser,\n    uploadImageToStorage,\n    sendContactEmail,\n  };\n}\n\nexport function FirebaseProvider({ children }) {\n  const classes = useStyles();\n  const firebase = useFirebaseProvider();\n\n  if (firebase.loading) {\n    return (\n      <div className={classes.root}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    )\n  }\n\n  return (\n    <FirebaseContext.Provider value={firebase}>\n      {children}\n    </FirebaseContext.Provider>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}