{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLayoutEffect, useState } from 'react';\nexport default function useWindowPosition(id) {\n  _s();\n\n  const [animation, setAnimation] = useState(false);\n  useLayoutEffect(() => {\n    // This function gets called as soon as you start scrolling, but doesn't do anything until....\n    function updatePosition() {\n      const offSetHeight = window.document.getElementById(id).offsetHeight;\n      console.log(\"window.pageYOffset\", window.pageYOffset, offSetHeight * 0.7); // ... window.document.getElementById.offsetHeight is less then the pages YOffset height\n\n      if (window.pageYOffset > offSetHeight * 0.7) {\n        // once this becomes true the animation runs\n        setAnimation(true);\n      }\n    } // Calls the function once you start scrolling\n\n\n    window.addEventListener('scroll', updatePosition);\n    updatePosition();\n    return () => window.remoteEventListener('scroll', updatePosition);\n  }, [id]);\n  return animation;\n}\n\n_s(useWindowPosition, \"nuWaoAFUqcnv7Yhijhu2/YERFMI=\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/useWindowPosition.js"],"names":["React","useLayoutEffect","useState","useWindowPosition","id","animation","setAnimation","updatePosition","offSetHeight","window","document","getElementById","offsetHeight","console","log","pageYOffset","addEventListener","remoteEventListener"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,eAAe,SAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAAA;;AAC7C,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,eAAe,CAAC,MAAM;AACrB;AACA,aAASM,cAAT,GAA0B;AACzB,YAAMC,YAAY,GAAGC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+BP,EAA/B,EAAmCQ,YAAxD;AACCC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,MAAM,CAACM,WAAzC,EAAuDP,YAAY,GAAG,GAAtE,EAFwB,CAGzB;;AACA,UAAIC,MAAM,CAACM,WAAP,GAAqBP,YAAY,GAAG,GAAxC,EAA6C;AAC5C;AACAF,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD,KAVoB,CAWrB;;;AACAG,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCT,cAAlC;AACAA,IAAAA,cAAc;AACd,WAAO,MAAME,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCV,cAArC,CAAb;AACA,GAfc,EAeZ,CAACH,EAAD,CAfY,CAAf;AAiBA,SAAOC,SAAP;AACA;;GArBuBF,iB","sourcesContent":["import React from 'react';\nimport { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowPosition(id) {\n\tconst [animation, setAnimation] = useState(false);\n\n\tuseLayoutEffect(() => {\n\t\t// This function gets called as soon as you start scrolling, but doesn't do anything until....\n\t\tfunction updatePosition() {\n\t\t\tconst offSetHeight = window.document.getElementById(id).offsetHeight;\n \t\t\tconsole.log(\"window.pageYOffset\", window.pageYOffset, (offSetHeight * 0.7))\n\t\t\t// ... window.document.getElementById.offsetHeight is less then the pages YOffset height\n\t\t\tif (window.pageYOffset > offSetHeight * 0.7) {\n\t\t\t\t// once this becomes true the animation runs\n\t\t\t\tsetAnimation(true);\n\t\t\t}\n\t\t}\n\t\t// Calls the function once you start scrolling\n\t\twindow.addEventListener('scroll', updatePosition);\n\t\tupdatePosition();\n\t\treturn () => window.remoteEventListener('scroll', updatePosition);\n\t}, [id])\n\n\treturn animation;\n}\n"]},"metadata":{},"sourceType":"module"}