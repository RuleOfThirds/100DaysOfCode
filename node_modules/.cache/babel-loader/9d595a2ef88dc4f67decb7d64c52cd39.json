{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { TextField, IconButton, FormControl, Select, ListSubheader, MenuItem, Button, Typography, Slider } from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    textAlign: 'center'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst spirits = [\"Bourbon\", \"Whiskey\", \"Scotch\", \"Brandy\", \"Cognac\", \"Rum\", \"Tequila\", \"Gin\", \"Vodka\", \"Absinthe\", \"Vermouth\"];\n\nfunction IngredientInput({\n  ingredientNumber,\n  newInput\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [isUnitIngredient, setIsUnitIngredient] = useState(true);\n  const [unitType, setUnitType] = useState('imperial');\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...newInput,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...newInput,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleIsUnitIngredient = () => {\n    setIsUnitIngredient(!isUnitIngredient);\n  };\n\n  const handleUnitType = event => {\n    setUnitType(event.target.value);\n    setSpiritObject({ ...newInput,\n      newInput\n    });\n  };\n\n  console.log(\"From IngredientInput: \", ingredientNumber, newInput);\n  console.log(spiritObject);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"Spirit\",\n          id: \"ingredientUnit\",\n          name: \"ingredientUnit\",\n          value: unitType,\n          onChange: handleUnitType,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"imperial\",\n            children: \"Imperial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"metric\",\n            children: \"Metric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"unit\",\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"ingredient\",\n        label: \"Ingredient\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        InputProps: {\n          className: classes.input\n        },\n        onChange: e => onChangeInput(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), // Select the spirit type here \n      unitType === \"imperial\" || unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: \"\",\n          id: \"search-filter\",\n          children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n            children: \"Spirit Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this), spirits.map((spirit, id) => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: spirit,\n              children: spirit\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 30\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this) : false]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), // This is the slider\n    isUnitIngredient ? unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Milliliters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"metricAmount\",\n        defaultValue: 15,\n        valueLabelDisplay: \"auto\",\n        step: 5,\n        min: 5,\n        max: 60,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this) : unitType === \"imperial\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"discrete-slider\",\n        gutterBottom: true,\n        children: \"Ounces\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"baseSpiritAmount\",\n        name: \"amount\",\n        defaultValue: 1,\n        valueLabelDisplay: \"auto\",\n        step: 0.25,\n        min: 0.25,\n        max: 6,\n        marks: true,\n        onChange: onChangeSlider(\"amount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }, this) : false : false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IngredientInput, \"QpVc5Cupdtba3HVXNnc3G8+vWCs=\", false, function () {\n  return [useStyles];\n});\n\n_c = IngredientInput;\nexport default function Ingredients() {\n  _s2();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const newInput = {\n    'amount': '',\n    'name': '',\n    'type': '',\n    'unit': ''\n  };\n  const [inputs, setInputs] = useState([{ ...newInput\n  }]);\n\n  const addNewInput = () => {\n    setInputs([...inputs, { ...newInput\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.formContainer,\n    children: [inputs.map((input, id) => {\n      return /*#__PURE__*/_jsxDEV(IngredientInput, {\n        ingredientNumber: id,\n        newInput: input\n      }, `ingredient-${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 18\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.nextItem,\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: addNewInput,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Scroll, {\n        to: `step-${cocktail.activeStep}`,\n        smooth: \"true\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.nextButton,\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 22\n          }, this),\n          onClick: cocktail.handleNext,\n          children: \"Keep going\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ingredients, \"mJ8DCn2OI4g8SJjiP3/bJZrZ/+c=\", false, function () {\n  return [useStyles, useCocktail];\n});\n\n_c2 = Ingredients;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IngredientInput\");\n$RefreshReg$(_c2, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","TextField","IconButton","FormControl","Select","ListSubheader","MenuItem","Button","Typography","Slider","Link","Scroll","makeStyles","ExpandMoreIcon","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","textAlign","buttonDiv","nextButton","borderRadius","textTransform","spirits","IngredientInput","ingredientNumber","newInput","classes","isUnitIngredient","setIsUnitIngredient","unitType","setUnitType","spiritObject","setSpiritObject","onChangeSlider","name","event","newValue","onChangeInput","e","target","value","handleIsUnitIngredient","handleUnitType","console","log","className","map","spirit","id","Ingredients","cocktail","inputs","setInputs","addNewInput","activeStep","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport {\n  TextField,\n  IconButton,\n  FormControl,\n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n} from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    textAlign: 'center',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst spirits = [\n  \"Bourbon\",\n  \"Whiskey\",\n  \"Scotch\",\n  \"Brandy\",\n  \"Cognac\",\n  \"Rum\",\n  \"Tequila\",\n  \"Gin\",\n  \"Vodka\",\n  \"Absinthe\",\n  \"Vermouth\",\n];\n  \nfunction IngredientInput({ ingredientNumber, newInput }) {\n  const classes = useStyles();\n  const [isUnitIngredient, setIsUnitIngredient] = useState(true);\n  const [unitType, setUnitType] = useState('imperial');\n  const [spiritObject, setSpiritObject] = useState({});\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...newInput, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...newInput, [e.target.name]: e.target.value})\n  }\n\n  const handleIsUnitIngredient = () => {\n    setIsUnitIngredient(!isUnitIngredient)\n  }\n\n  const handleUnitType = (event) => {\n    setUnitType(event.target.value)\n    setSpiritObject({...newInput, newInput})\n  }\n\n  console.log(\"From IngredientInput: \", ingredientNumber, newInput)\n  console.log(spiritObject)\n\n  return (\n    <div>\n      <div>\n        {/* This is the unit type selector */}\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <Select \n            defaultValue=\"Spirit\" \n            id=\"ingredientUnit\"\n            name=\"ingredientUnit\"\n            value={unitType}\n            onChange={handleUnitType}\n          >\n            <MenuItem value=\"imperial\">Imperial</MenuItem>\n            <MenuItem value=\"metric\">Metric</MenuItem>\n            <MenuItem value=\"unit\">Unit</MenuItem>\n          </Select>\n        </FormControl>\n        {/* This is where you enter the spirit name */}\n        <TextField \n          id='ingredient'\n          label='Ingredient'\n          variant='outlined'\n          margin='normal'\n          InputProps={{className: classes.input}}\n          onChange={(e) => onChangeInput(e)}\n        />\n        {\n          // Select the spirit type here \n          unitType === \"imperial\" || unitType === \"metric\"\n            ? <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select defaultValue=\"\" id=\"search-filter\">\n                  <ListSubheader>Spirit Type</ListSubheader>\n                  {\n                    spirits.map((spirit, id) => {\n                      return <MenuItem key={id} value={spirit}>{spirit}</MenuItem>\n                    })\n                  }\n                </Select>\n              </FormControl>\n            : false\n        }\n      </div>\n      {\n        // This is the slider\n        isUnitIngredient \n          ? (\n            unitType === \"metric\"\n              ? (\n                <div>\n                  <Typography id=\"discrete-slider\" gutterBottom>\n                    Milliliters\n                  </Typography>\n                  <Slider\n                    id=\"baseSpiritAmount\"\n                    name=\"metricAmount\"\n                    defaultValue={15}\n                    valueLabelDisplay=\"auto\"\n                    step={5}\n                    min={5}\n                    max={60}\n                    marks\n                    onChange={onChangeSlider(\"amount\")}\n                  />\n                </div>\n              ) : unitType === \"imperial\"\n                  ? (\n                    <div>\n                      <Typography id=\"discrete-slider\" gutterBottom>\n                        Ounces\n                      </Typography>\n                      <Slider\n                        id='baseSpiritAmount'\n                        name='amount'\n                        defaultValue={1}\n                        valueLabelDisplay=\"auto\"\n                        step={0.25}\n                        min={0.25}\n                        max={6}\n                        marks\n                        onChange={onChangeSlider(\"amount\")}\n                      />\n                    </div>\n                  ) : false\n          ) : false\n      }\n    </div>\n  );\n}\n\nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const newInput = {\n    'amount': '',\n    'name': '',\n    'type': '',\n    'unit': '',\n  };\n  const [inputs, setInputs] = useState([{...newInput}]);\n\n  const addNewInput = () => {\n    setInputs([...inputs, {...newInput}])\n  }\n\n  return (\n    <div className={classes.formContainer}>\n      {\n        inputs.map((input, id) => { \n          return <IngredientInput key={`ingredient-${id}`} ingredientNumber={id} newInput={input} />\n        })\n      }\n      <div className={classes.nextItem}>\n        <IconButton onClick={addNewInput} color=\"primary\">\n          <AddBoxIcon fontSize=\"large\"/>\n        </IconButton>\n      </div>\n      <div className={classes.buttonDiv}>\n        <Scroll to={`step-${cocktail.activeStep}`} smooth=\"true\">\n          <Button\n            className={classes.nextButton}\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            endIcon={<ExpandMoreIcon />}\n            onClick={cocktail.handleNext}\n          >\n            Keep going\n          </Button>\n        </Scroll>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}