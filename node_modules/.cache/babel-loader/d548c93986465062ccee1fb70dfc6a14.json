{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm } from 'react-hook-form';\nimport { Grid, TextField, IconButton, FormControl, Select, ListSubheader, MenuItem, Button, Typography, Slider, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  submitButton: {\n    height: theme.spacing(7),\n    margin: theme.spacing(2)\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst types = [\"baseSpirit\", \"modifier\", \"nonAlcoholic\", \"misc\"];\nexport default function Ingredients() {\n  _s();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const ingredients = [{}];\n  const [spiritObject, setSpiritObject] = useState({});\n  const [unitType, setUnitType] = useState('imperial');\n  const [inputs, setInputs] = useState([{\n    amount: '',\n    name: '',\n    type: '',\n    unit: unitType\n  }]);\n\n  const onSubmit = data => {\n    console.log(\"From form hook: \", data);\n  };\n\n  const addNewInput = () => {\n    setInputs([...inputs, {}]);\n  };\n\n  const handleUnitType = e => {\n    setUnitType(e.target.value);\n  };\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onAddIngredientsToArray = () => {\n    ingredients.push(spiritObject);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    className: classes.formContainer,\n    id: \"ingredients\",\n    name: \"ingredients\",\n    value: ingredients,\n    onSubmit: handleSubmit(data => alert(JSON.stringify(data))),\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setInputs([...inputs, {}]),\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), inputs.map((input, id) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, { ...register(`ingredient${id}`),\n          id: \"ingredient\",\n          label: \"Ingredient\",\n          variant: \"outlined\",\n          margin: \"normal\",\n          InputProps: {\n            className: classes.input\n          },\n          onChange: e => onChangeInput(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          variant: \"outlined\",\n          className: classes.formControl,\n          children: /*#__PURE__*/_jsxDEV(Select, { ...register('type'),\n            defaultValue: \"\",\n            name: \"type\",\n            id: \"spiritType\",\n            onChange: e => onChangeInput(e),\n            children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n              children: \"Ingredient Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, this), types.map((type, id) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type,\n                children: type\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 30\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.submitButton,\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: onAddIngredientsToArray,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this), unitType === \"metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"discrete-slider\",\n            gutterBottom: true,\n            children: \"Milliliters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Slider, { ...register('amount'),\n            id: \"baseSpiritAmount\",\n            name: \"metricAmount\",\n            defaultValue: 15,\n            valueLabelDisplay: \"auto\",\n            step: 5,\n            min: 5,\n            max: 60,\n            marks: true,\n            onChange: onChangeSlider(\"amount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"discrete-slider\",\n            gutterBottom: true,\n            children: \"Ounces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Slider, { ...register('amount'),\n            id: \"baseSpiritAmount\",\n            name: \"amount\",\n            defaultValue: 1,\n            valueLabelDisplay: \"auto\",\n            step: 0.25,\n            min: 0.25,\n            max: 6,\n            marks: true,\n            onChange: onChangeSlider(\"amount\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.nextButton,\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"outlined\",\n        endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 20\n        }, this),\n        onClick: cocktail.handleNext,\n        children: \"Keep going\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Ingredients, \"HdxOQPC2M4kbBJd9CRE84gAfgP0=\", false, function () {\n  return [useStyles, useCocktail, useForm];\n});\n\n_c = Ingredients;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","useForm","Grid","TextField","IconButton","FormControl","Select","ListSubheader","MenuItem","Button","Typography","Slider","Divider","makeStyles","ExpandMoreIcon","AddBoxIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","alignItems","justifyContent","buttonDiv","textAlign","submitButton","height","nextButton","borderRadius","textTransform","types","Ingredients","classes","cocktail","register","handleSubmit","watch","formState","errors","ingredients","spiritObject","setSpiritObject","unitType","setUnitType","inputs","setInputs","amount","name","type","unit","onSubmit","data","console","log","addNewInput","handleUnitType","e","target","value","onChangeSlider","event","newValue","onChangeInput","onAddIngredientsToArray","push","alert","JSON","stringify","map","id","className","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm } from 'react-hook-form';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,  \n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n  Divider,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  submitButton: {\n    height: theme.spacing(7),\n    margin: theme.spacing(2),\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst types = [\n  \"baseSpirit\",\n  \"modifier\",\n  \"nonAlcoholic\",\n  \"misc\",\n];\n  \nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const { register, handleSubmit, watch, formState: { errors } } = useForm();\n  const ingredients = [{}];\n  const [spiritObject, setSpiritObject] = useState({});\n  const [unitType, setUnitType] = useState('imperial');\n  const [inputs, setInputs] = useState([{\n    amount: '',\n    name: '',\n    type: '',\n    unit: unitType,\n  }]);\n\n  const onSubmit = (data) => {\n    console.log(\"From form hook: \", data)\n  }\n\n  const addNewInput = () => {\n    setInputs([...inputs, {}])\n  }\n\n  const handleUnitType = (e) => {\n    setUnitType(e.target.value)\n  }\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  const onAddIngredientsToArray = () => {\n    ingredients.push(spiritObject)\n  }\n\n  return (\n    <form \n      noValidate \n      className={classes.formContainer}\n      id='ingredients'\n      name='ingredients'\n      value={ingredients}\n      onSubmit={handleSubmit((data) => alert(JSON.stringify(data)))} \n    >\n      <Grid container alignItems='center'>\n        <Grid item xs>\n    \n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setInputs([...inputs, {}])} color=\"primary\">\n            <AddBoxIcon fontSize=\"large\"/>\n          </IconButton>\n        </Grid>\n      </Grid>\n      <Divider />\n      {\n        inputs.map((input, id) => { \n          return (\n            <div>\n              <TextField \n                {...register(`ingredient${id}`)}\n                id='ingredient'\n                label='Ingredient'\n                variant='outlined'\n                margin='normal'\n                InputProps={{className: classes.input}}\n                onChange={(e) => onChangeInput(e)}\n              />\n              <FormControl variant=\"outlined\" className={classes.formControl}>\n                <Select \n                  {...register('type')}\n                  defaultValue=\"\" \n                  name='type' \n                  id=\"spiritType\"\n                  onChange={(e) => onChangeInput(e)}\n                >\n                  <ListSubheader>Ingredient Type</ListSubheader>\n                  {\n                    types.map((type, id) => {\n                      return <MenuItem key={id} value={type}>{type}</MenuItem>\n                    })\n                  }\n                </Select>\n              </FormControl>\n              <Button\n                className={classes.submitButton}\n                color=\"primary\"\n                variant=\"contained\"\n                onClick={onAddIngredientsToArray}\n              >\n                Submit\n              </Button>\n              {\n                unitType === \"metric\" ? \n                  <div>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                      Milliliters\n                    </Typography>\n                    <Slider\n                      {...register('amount')}\n                      id=\"baseSpiritAmount\"\n                      name=\"metricAmount\"\n                      defaultValue={15}\n                      valueLabelDisplay=\"auto\"\n                      step={5}\n                      min={5}\n                      max={60}\n                      marks\n                      onChange={onChangeSlider(\"amount\")}\n                    />\n                  </div>\n                : <div>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                      Ounces\n                    </Typography>\n                    <Slider\n                      {...register('amount')}\n                      id='baseSpiritAmount'\n                      name='amount'\n                      defaultValue={1}\n                      valueLabelDisplay=\"auto\"\n                      step={0.25}\n                      min={0.25}\n                      max={6}\n                      marks\n                      onChange={onChangeSlider(\"amount\")}\n                    />\n                  </div>\n              }\n            </div>\n          )\n        })\n      }\n      <div className={classes.buttonDiv}>\n        <Button\n          className={classes.nextButton}\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"outlined\"\n          endIcon={<ExpandMoreIcon />}\n          onClick={cocktail.handleNext}\n        >\n          Keep going\n        </Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}