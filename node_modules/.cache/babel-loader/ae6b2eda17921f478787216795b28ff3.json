{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useState, useEffect, useContext, createContext } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\nconst userObject = {\n  phone: '',\n  bio: '',\n  twitter: '',\n  instagram: '',\n  website: '',\n  picture: '',\n  favorites: []\n};\nconst UserContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s2();\n\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n\n  const signin = (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      setUser(response.user);\n      return response.user;\n    }).catch(e => setError(e));\n  };\n\n  const signup = (displayName, email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password).then(response => {\n      const uid = response.user.uid;\n      const initData = {\n        id: uid,\n        email,\n        displayName\n      }; // finish creating the full user object\n\n      data = Object.assign({}, initData, userObject);\n      const userRef = firebase.firestore().collection(\"users\");\n      userRef.doc(uid).set(data).then(() => {\n        setUser(response.user);\n      }).catch(e => setError(e));\n      return response.user;\n    });\n  };\n\n  const signout = () => {\n    return firebase.auth().signOut().then(() => {\n      setUser(false);\n    }).catch(e => setError(e));\n  };\n\n  const updateUser = userData => {\n    const userRef = firebase.firestore().collection(\"users\");\n\n    if (user) {\n      userRef.doc(user.id).update(userData).then(() => {\n        console.log(\"From provider after update: \", user);\n      }).catch(e => setError(e.message));\n    }\n  };\n\n  const sendPasswordResetEmail = email => {\n    return firebase.auth().sendPasswordResetEmail(email).then(() => {\n      return true;\n    });\n  };\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase.auth().confirmPasswordReset(code, password).then(() => {\n      return true;\n    });\n  };\n\n  const signInWithGoogle = () => {\n    return firebase.auth().signInWithPopup(googleAuth).then(response => {\n      const cred = response.credential;\n      const token = cred.token;\n      setUser(response.user);\n      return response.user;\n    }).catch(e => setError(e));\n  };\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        userRef.doc(user.uid).get().then(document => {\n          const userData = document.data();\n          console.log(\"User uid: \", user.uid, \"User: \", user, \"Document data: \", document.data());\n          setUser(userData);\n        });\n      } else {\n        setUser(false);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    error,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    updateUser\n  };\n}\n\n_s2(useProvideAuth, \"FoT8xzvemVmWV60BhcL+ltjm2pQ=\");\n\nexport function AuthProvider({\n  children\n}) {\n  _s3();\n\n  const auth = useProvideAuth();\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(AuthProvider, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/FirebaseAuthProvider.js"],"names":["useState","useEffect","useContext","createContext","firebase","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENT_ID","initializeApp","userObject","phone","bio","twitter","instagram","website","picture","favorites","UserContext","useAuth","useProvideAuth","user","setUser","error","setError","googleAuth","auth","GoogleAuthProvider","signin","email","password","signInWithEmailAndPassword","then","response","catch","e","signup","displayName","createUserWithEmailAndPassword","uid","initData","id","data","Object","assign","userRef","firestore","collection","doc","set","signout","signOut","updateUser","userData","update","console","log","message","sendPasswordResetEmail","confirmPasswordReset","code","signInWithGoogle","signInWithPopup","cred","credential","token","unsubscribe","onAuthStateChanged","get","document","AuthProvider","children"],"mappings":"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","sourcesContent":["import { \n  useState, \n  useEffect,\n  useContext,\n  createContext \n} from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n/* \n * Auth API reference\n * https://firebase.google.com/docs/reference/js/firebase.auth.Auth\n */\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nconst userObject = {\n  phone: '',\n  bio: '',\n  twitter: '',\n  instagram: '',\n  website: '',\n  picture: '',\n  favorites: [],\n}\n\nconst UserContext = createContext();\n\nexport const useAuth = () => {\n  return useContext(UserContext);\n}\n\nfunction useProvideAuth() {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n  const googleAuth = new firebase.auth.GoogleAuthProvider();\n\n\n  const signin = (email, password) => {\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(response => {\n        setUser(response.user);\n        return response.user;\n      })\n      .catch((e) => setError(e))\n  }\n\n  const signup = (displayName, email, password) => {\n    return firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(response => {\n        const uid = response.user.uid\n        const initData = {\n          id: uid,\n          email,\n          displayName,\n        }\n        // finish creating the full user object\n        data = Object.assign({}, initData, userObject)\n\n        const userRef = firebase.firestore().collection(\"users\")\n        userRef.doc(uid).set(data).then(() => {\n          setUser(response.user);\n        })\n        .catch((e) => setError(e))\n        return response.user;\n      })\n  }\n\n  const signout = () => {\n    return firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        setUser(false);\n      })\n      .catch((e) => setError(e))\n  }\n\n  const updateUser = (userData) => {\n    const userRef = firebase.firestore().collection(\"users\");\n    if (user) {\n      userRef\n        .doc(user.id)\n        .update(userData)\n        .then(() => {\n          console.log(\"From provider after update: \", user)\n        })\n        .catch((e) => setError(e.message))\n    }\n  }\n\n  const sendPasswordResetEmail = (email) => {\n    return firebase\n      .auth()\n      .sendPasswordResetEmail(email)\n      .then(() => {\n        return true;\n      })\n  }\n\n  const confirmPasswordReset = (code, password) => {\n    return firebase\n      .auth()\n      .confirmPasswordReset(code, password)\n      .then(() => {\n        return true;\n      })\n  }\n\n  const signInWithGoogle = () => {\n    return firebase\n      .auth()\n      .signInWithPopup(googleAuth)\n      .then((response) => {\n        const cred = response.credential;\n        const token = cred.token;\n        setUser(response.user)\n        return response.user;\n      })\n      .catch((e) => setError(e))\n  }\n\n  useEffect(() => {\n    const userRef = firebase.firestore().collection(\"users\");\n    const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        userRef\n          .doc(user.uid)\n          .get()\n          .then((document) => {\n            const userData = document.data()\n            console.log(\"User uid: \", user.uid, \"User: \", user, \"Document data: \", document.data())\n            setUser(userData)\n          })\n      } else {\n        setUser(false)\n      }\n    })\n\n    return () => unsubscribe();\n  }, []);\n\n  return {\n    user,\n    error,\n    signin,\n    signup,\n    signout,\n    sendPasswordResetEmail,\n    confirmPasswordReset,\n    signInWithGoogle,\n    updateUser,\n  };\n}\n\nexport function AuthProvider({ children }) {\n  const auth = useProvideAuth();\n\n  return (\n    <UserContext.Provider value={auth}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}