{"ast":null,"code":"import _slicedToArray from\"/home/dj/Development/ThirdsMedia/100DaysOfCode/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useLayoutEffect,useState}from'react';export default function useWindowPosition(id){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),animation=_useState2[0],setAnimation=_useState2[1];useLayoutEffect(function(){// this function runs as soon as you begin scrolling\nfunction updatePosition(){var offSetHeight=window.document.getElementById(id).offsetHeight;// then, once window.document.getElementById(\"header\").offsetHeight * 0.7 is less then the pageYOffset\n// the animation becomes true\n// So once the height of a certain element is higher then the pages YOffset, run the animation.\nconsole.log(\"window.pageYOffset\",window.pageYOffset,offSetHeight*0.7);// that's when the animation should kick off\nif(window.pageYOffset>offSetHeight*0.7){setAnimation(true);}}// as seen here\nwindow.addEventListener('scroll',updatePosition);updatePosition();return function(){return window.removeEventListener('scroll',updatePosition);};},[id]);return animation;}","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/LandingPage/useWindowPosition.js"],"names":["useLayoutEffect","useState","useWindowPosition","id","animation","setAnimation","updatePosition","offSetHeight","window","document","getElementById","offsetHeight","console","log","pageYOffset","addEventListener","removeEventListener"],"mappings":"qKAAA,OAASA,eAAT,CAA0BC,QAA1B,KAA0C,OAA1C,CAEA,cAAe,SAASC,CAAAA,iBAAT,CAA2BC,EAA3B,CAA+B,eACXF,QAAQ,CAAC,KAAD,CADG,wCACtCG,SADsC,eAC3BC,YAD2B,eAG7CL,eAAe,CAAC,UAAM,CACrB;AACA,QAASM,CAAAA,cAAT,EAA0B,CACzB,GAAMC,CAAAA,YAAY,CAAGC,MAAM,CAACC,QAAP,CAAgBC,cAAhB,CAA+BP,EAA/B,EAAmCQ,YAAxD,CACA;AACA;AACA;AACGC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCL,MAAM,CAACM,WAAzC,CAAuDP,YAAY,CAAG,GAAtE,EACH;AACA,GAAIC,MAAM,CAACM,WAAP,CAAqBP,YAAY,CAAG,GAAxC,CAA6C,CAC5CF,YAAY,CAAC,IAAD,CAAZ,CACA,CACD,CACD;AACAG,MAAM,CAACO,gBAAP,CAAwB,QAAxB,CAAkCT,cAAlC,EACAA,cAAc,GACd,MAAO,kBAAME,CAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,CAAqCV,cAArC,CAAN,EAAP,CACA,CAjBc,CAiBZ,CAACH,EAAD,CAjBY,CAAf,CAmBA,MAAOC,CAAAA,SAAP,CACA","sourcesContent":["import { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowPosition(id) {\n\tconst [animation, setAnimation] = useState(false);\n\n\tuseLayoutEffect(() => {\n\t\t// this function runs as soon as you begin scrolling\n\t\tfunction updatePosition() {\n\t\t\tconst offSetHeight = window.document.getElementById(id).offsetHeight;\n\t\t\t// then, once window.document.getElementById(\"header\").offsetHeight * 0.7 is less then the pageYOffset\n\t\t\t// the animation becomes true\n\t\t\t// So once the height of a certain element is higher then the pages YOffset, run the animation.\n      console.log(\"window.pageYOffset\", window.pageYOffset, (offSetHeight * 0.7))\n\t\t\t// that's when the animation should kick off\n\t\t\tif (window.pageYOffset > offSetHeight * 0.7) {\n\t\t\t\tsetAnimation(true);\n\t\t\t}\n\t\t}\n\t\t// as seen here\n\t\twindow.addEventListener('scroll', updatePosition);\n\t\tupdatePosition();\n\t\treturn () => window.removeEventListener('scroll', updatePosition);\n\t}, [id])\n\n\treturn animation;\n}\n"]},"metadata":{},"sourceType":"module"}