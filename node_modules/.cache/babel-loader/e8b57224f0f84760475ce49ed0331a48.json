{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Wizard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MainBar from '../Helpers/MainBar';\nimport Help from './Help';\nimport CocktailStepper from './CocktailStepper';\nimport RecipeStepper from './RecipeStepper';\nimport { Container, Grid, Typography, Collapse, IconButton, Stepper, Step, StepLabel, StepContent, FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Button } from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#303030',\n    position: 'sticky',\n    top: 0,\n    zIndex: 1\n  },\n  infoButton: {\n    float: 'right'\n  },\n  button: {\n    borderRadius: 37,\n    width: 250\n  },\n  buttonDiv: {\n    flex: 1,\n    margin: 25,\n    textAlign: 'center'\n  }\n}));\n/*\n * Notes:\n *  - git branch day36 if you want to see the version where you could pick your recipe type. \n *  - Removed that feature because it's WAY too much code and there must be a simpler way\n */\n\nexport default function Wizard() {\n  _s();\n\n  const classes = useStyles();\n  const steps = ['Basic Information', 'Base Spirit', 'Ingredients', 'Instructions'];\n  const [activeStep, setActiveStep] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [readyForReview, setReadyForReview] = useState(false); // const [recipeType, setRecipeType] = useState(false);\n  // const [showRecipePrompt, setShowRecipePrompt] = useState(true);\n\n  const handleHelp = () => {\n    setShowHelp(!showHelp);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleNext = () => {\n    // This should also be pushing the entered data into the object\n    // This could get complicated. I'll need to give each input a unique ID so that if I backtrack I can have it update\n    // The unique item you'd want to change otherwise stuff could get messy\n    if (activeStep < steps.length) {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n    }\n  };\n  /*\n  const handleRecipeType = (event) => {\n    setRecipeType(event.target.value)\n    setShowRecipePrompt(false)\n  }\n  */\n\n\n  const handleReview = () => {\n    setReadyForReview(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(MainBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showRecipePrompt ? /*#__PURE__*/_jsxDEV(Container, {\n        className: classes.formContainer,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              children: \"What kind of recipe is this?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                component: \"legend\",\n                children: \"Recipe Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                \"aria-label\": \"recipe-type\",\n                name: \"recipe-type\",\n                onChange: handleRecipeType,\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"cocktail\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 63\n                  }, this),\n                  label: \"Cocktail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"msi\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 58\n                  }, this),\n                  label: \"Mixer/Syrup/Infusion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"other\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 60\n                  }, this),\n                  label: \"Other\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          className: classes.button,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.appBar,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          disabled: activeStep === 0,\n          onClick: handleBack,\n          children: /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Scroll, {\n          to: `step-${activeStep}`,\n          smooth: \"true\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            children:\n            /*\n             * If you're on the last step then display the CheckCircle instead of the ExpandMore\n             */\n            activeStep >= steps.length - 1 ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n              onClick: handleReview\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this),\n        /*\n         * If you're at the end of your stepper then stop showing the help icon\n         */\n        activeStep <= steps.length - 1 ? /*#__PURE__*/_jsxDEV(IconButton, {\n          className: classes.infoButton,\n          onClick: handleHelp,\n          children: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this) : false]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children:\n      /*\n       * Decide what Stepper type to show\n       */\n      !recipeType ? false : recipeType === 'cocktail' ? /*#__PURE__*/_jsxDEV(CocktailStepper, {\n        activeStep: activeStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(RecipeStepper, {\n        activeStep: activeStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children:\n      /*\n       * Once all steps are completed then display the Review button\n       */\n      readyForReview && activeStep >= steps.length ? /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.button,\n        variant: \"outlined\",\n        color: \"primary\",\n        href: \"/cocktail\",\n        onClick: () => console.log(\"Went to next\"),\n        children: \"Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this) : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Wizard, \"cUqB+uA6jXCU4LSog1Z+EqiVTdk=\", false, function () {\n  return [useStyles];\n});\n\n_c = Wizard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wizard\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Wizard.js"],"names":["React","useState","useEffect","MainBar","Help","CocktailStepper","RecipeStepper","Container","Grid","Typography","Collapse","IconButton","Stepper","Step","StepLabel","StepContent","FormControl","FormLabel","FormControlLabel","RadioGroup","Radio","Button","Link","Scroll","ExpandMoreIcon","ExpandLessIcon","CheckCircleIcon","InfoOutlinedIcon","makeStyles","useStyles","theme","appBar","backgroundColor","position","top","zIndex","infoButton","float","button","borderRadius","width","buttonDiv","flex","margin","textAlign","Wizard","classes","steps","activeStep","setActiveStep","showHelp","setShowHelp","readyForReview","setReadyForReview","handleHelp","handleBack","prevActiveStep","handleNext","length","handleReview","showRecipePrompt","formContainer","handleRecipeType","recipeType","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MainBar from '../Helpers/MainBar';\nimport Help from './Help';\nimport CocktailStepper from './CocktailStepper';\nimport RecipeStepper from './RecipeStepper';\nimport {\n  Container,\n  Grid,\n  Typography,\n  Collapse,\n  IconButton,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Button,\n} from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: '#303030',\n    position: 'sticky',\n    top: 0,\n    zIndex: 1,\n  },\n  infoButton: {\n    float: 'right',\n  },\n  button: {\n  borderRadius: 37,\n    width: 250\n  },\n  buttonDiv: {\n    flex: 1,\n    margin: 25,\n  textAlign: 'center',\n  },\n}));\n\n/*\n * Notes:\n *  - git branch day36 if you want to see the version where you could pick your recipe type. \n *  - Removed that feature because it's WAY too much code and there must be a simpler way\n */\n\nexport default function Wizard() {\n  const classes = useStyles();\n  const steps = ['Basic Information', 'Base Spirit', 'Ingredients', 'Instructions'];\n  const [activeStep, setActiveStep] = useState(0);\n  const [showHelp, setShowHelp] = useState(false);\n  const [readyForReview, setReadyForReview] = useState(false);\n // const [recipeType, setRecipeType] = useState(false);\n // const [showRecipePrompt, setShowRecipePrompt] = useState(true);\n\n  const handleHelp = () => {\n    setShowHelp(!showHelp)\n  }\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1)\n  }\n\n  const handleNext = () => {\n    // This should also be pushing the entered data into the object\n    // This could get complicated. I'll need to give each input a unique ID so that if I backtrack I can have it update\n    // The unique item you'd want to change otherwise stuff could get messy\n    if (activeStep < steps.length) {\n      setActiveStep((prevActiveStep) => prevActiveStep + 1)\n    } \n  }\n\n  /*\n  const handleRecipeType = (event) => {\n    setRecipeType(event.target.value)\n    setShowRecipePrompt(false)\n  }\n  */\n\n  const handleReview = () => {\n    setReadyForReview(true)\n  }\n\n  return (\n    <main>\n      { \n        // Show help text if the InfoOutlinedIcon is clicked\n        //showHelp ? <Help step={activeStep} /> : false \n      }\n      <MainBar />\n      <div>\n      {\n        showRecipePrompt ? \n        <Container className={classes.formContainer}>\n          <Grid container alignItems=\"center\">\n            <Grid item xs>\n            <Typography>\n              What kind of recipe is this?\n            </Typography>\n            </Grid>\n            <Grid item xs>\n              <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Recipe Type</FormLabel>\n                <RadioGroup aria-label=\"recipe-type\" name=\"recipe-type\" onChange={handleRecipeType}>\n                  <FormControlLabel value=\"cocktail\" control={<Radio />} label=\"Cocktail\" />\n                  <FormControlLabel value=\"msi\" control={<Radio />} label=\"Mixer/Syrup/Infusion\" />\n                  <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\n                </RadioGroup>\n              </FormControl>\n            </Grid>\n          </Grid>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Next\n          </Button>\n        </Container>\n        : \n        <div className={classes.appBar}>\n          <IconButton disabled={activeStep === 0} onClick={handleBack}>\n            <ExpandLessIcon />\n          </IconButton>\n          <Scroll to={`step-${activeStep}`} smooth=\"true\">\n            <IconButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleNext}\n            >\n              {\n                /*\n                 * If you're on the last step then display the CheckCircle instead of the ExpandMore\n                 */\n                activeStep >= steps.length - 1\n                  ? <CheckCircleIcon onClick={handleReview} />\n                  : <ExpandMoreIcon />\n              }\n            </IconButton>\n          </Scroll>\n          {\n            /*\n             * If you're at the end of your stepper then stop showing the help icon\n             */\n            activeStep <= steps.length - 1\n              ? <IconButton className={classes.infoButton} onClick={handleHelp}>\n                  <InfoOutlinedIcon />\n                </IconButton>\n              : false\n          }\n        </div>\n      }\n      </div>\n      <div>\n      {\n        /*\n         * Decide what Stepper type to show\n         */\n        !recipeType ? false : (\n          recipeType === 'cocktail'\n            ? <CocktailStepper activeStep={activeStep} />\n            : <RecipeStepper activeStep={activeStep} />\n        )\n      }\n      </div>\n      <div className={classes.buttonDiv}>\n      {\n        /*\n         * Once all steps are completed then display the Review button\n         */\n        readyForReview && activeStep >= steps.length\n          ? <Button\n              className={classes.button}\n              variant=\"outlined\"\n              color=\"primary\"\n              href=\"/cocktail\"\n              onClick={() => console.log(\"Went to next\")}\n            >\n              Review\n            </Button>\n          : false\n      }\n      </div>\n    </main>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}