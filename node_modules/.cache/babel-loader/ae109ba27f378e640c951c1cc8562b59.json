{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Grid, TextField, IconButton, FormControl, Select, ListSubheader, MenuItem, Button, Typography, Slider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport RemoveIcon from '@material-ui/icons/Remove';\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito'\n  },\n  input: {\n    width: 900\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end'\n  },\n  buttonDiv: {\n    textAlign: 'center'\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito'\n  }\n}));\nconst types = [\"Base Spirit\", \"Modifier\", \"Non-alcoholic\"];\n\nfunction PlusButton({\n  props\n}) {\n  const {\n    id,\n    inputs,\n    setInputs,\n    assignId,\n    spiritObject,\n    setSpiritObject,\n    ingredientsArray,\n    setIngredientsArray\n  } = props; // WAY TO GO THIS WORKS FIRST TRY\n\n  const addIngredientToArray = () => {\n    inputs[id] = {\n      id: id,\n      ...spiritObject\n    };\n    setIngredientsArray([...ingredientsArray, inputs[id]]);\n    setInputs([...inputs, {}]);\n    setSpiritObject({});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: inputs.length === id ? /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: () => addIngredientToArray(),\n      children: /*#__PURE__*/_jsxDEV(AddBoxIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this) : false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PlusButton;\n\nfunction InputField({\n  id,\n  inputs,\n  onClick\n}) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [inputs.length > 1 ? /*#__PURE__*/_jsxDEV(IconButton, {\n      id: id,\n      color: \"primary\",\n      onClick: onClick,\n      children: /*#__PURE__*/_jsxDEV(RemoveIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this) : false, /*#__PURE__*/_jsxDEV(TextField //        {...register('name')}\n    , {\n      id: id,\n      label: \"Ingredient\",\n      variant: \"outlined\",\n      margin: \"normal\",\n      InputProps: {\n        className: classes.input\n      } //       onChange={(e) => onChangeInput(e)}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputField, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = InputField;\nexport default function Ingredients() {\n  _s2();\n\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm();\n  const [spiritObject, setSpiritObject] = useState({});\n  const [ingredientsArray, setIngredientsArray] = useState([]);\n  const [inputs, setInputs] = useState([{}]); // This works yo!\n\n  console.log(\"From ingredients: \", ingredientsArray);\n\n  const handleRemoveInput = id => {\n    console.log(id);\n    console.log(inputs.findIndex(input => input.id === id));\n    setInputs(inputs.filter(input => input.id !== id));\n  }; // Success. Now get the Slider working too, and add an id field to spiritOject\n\n\n  const onSubmit = () => {\n    cocktail.addIngredients(ingredientsArray);\n  }; // Now just need to get this working and then make onSubmit add the ingredientsArray to the cocktail object\n\n\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({ ...spiritObject,\n      [name]: newValue\n    });\n  };\n\n  const onChangeInput = e => {\n    setSpiritObject({ ...spiritObject,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    noValidate: true,\n    className: classes.formContainer,\n    id: \"ingredients\",\n    name: \"ingredients\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [inputs.map(({\n      input,\n      id\n    }) => {\n      const inputProps = {\n        id,\n        inputs,\n        setInputs,\n        spiritObject,\n        setSpiritObject,\n        ingredientsArray,\n        setIngredientsArray\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignContent: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            id: id,\n            inputs: inputs,\n            onClick: id => handleRemoveInput(id)\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: /*#__PURE__*/_jsxDEV(Select, { ...register('type'),\n              defaultValue: \"\",\n              id: \"spiritType\",\n              onChange: e => onChangeInput(e),\n              children: [/*#__PURE__*/_jsxDEV(ListSubheader, {\n                children: \"Ingredient Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), types.map((type, id) => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: type,\n                  children: type\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 32\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PlusButton, {\n            props: inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this), // Pretty sure I'll need to use a Controller component from useForm here\n        cocktail.recipe.unit === \"metric\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"discrete-slider\",\n            gutterBottom: true,\n            children: \"Milliliters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"slider\",\n            control: control //                      defaultValue={[0,60]}\n            ,\n            render: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(Slider, { ...field,\n              defaultValue: 15,\n              onChange: value => console.log(value),\n              valueLabelDisplay: \"auto\",\n              step: 5,\n              min: 5,\n              max: 60,\n              marks: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            id: \"discrete-slider\",\n            gutterBottom: true,\n            children: \"Ounces\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Slider, { ...register('amount'),\n            id: \"amount\",\n            defaultValue: 1,\n            valueLabelDisplay: \"auto\",\n            step: 0.25,\n            min: 0.25,\n            max: 6,\n            marks: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonDiv,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.nextButton,\n        type: \"submit\",\n        color: \"primary\",\n        variant: \"outlined\",\n        endIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 20\n        }, this),\n        onClick: cocktail.handleNext,\n        children: \"Keep going\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ingredients, \"fUDOVXJBqpcvPAPz5jo17EosVmc=\", false, function () {\n  return [useStyles, useCocktail, useForm];\n});\n\n_c3 = Ingredients;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PlusButton\");\n$RefreshReg$(_c2, \"InputField\");\n$RefreshReg$(_c3, \"Ingredients\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js"],"names":["React","useState","useCocktail","useForm","Controller","Grid","TextField","IconButton","FormControl","Select","ListSubheader","MenuItem","Button","Typography","Slider","makeStyles","ExpandMoreIcon","AddBoxIcon","RemoveIcon","useStyles","theme","formContainer","display","flexDirection","backgroundColor","padding","fontFamily","input","width","formControl","margin","spacing","minWidth","nextItem","alignItems","justifyContent","buttonDiv","textAlign","nextButton","borderRadius","textTransform","types","PlusButton","props","id","inputs","setInputs","assignId","spiritObject","setSpiritObject","ingredientsArray","setIngredientsArray","addIngredientToArray","length","InputField","onClick","classes","className","Ingredients","cocktail","register","handleSubmit","control","console","log","handleRemoveInput","findIndex","filter","onSubmit","addIngredients","onChangeSlider","name","event","newValue","onChangeInput","e","target","value","map","inputProps","type","recipe","unit","field","handleNext"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useCocktail } from '../Providers/CocktailProvider';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  Grid,\n  TextField,\n  IconButton,\n  FormControl,  \n  Select,\n  ListSubheader,\n  MenuItem,\n  Button,\n  Typography,\n  Slider,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst useStyles = makeStyles(theme => ({\n  formContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 20,\n    fontFamily: 'Nunito',\n  },\n  input: {\n    width: 900,\n  },\n  formControl: {\n    margin: theme.spacing(2),\n    minWidth: 120,\n  },\n  nextItem: {\n    display: 'flex',\n    alignItems: 'right',\n    justifyContent: 'flex-end',\n  },\n  buttonDiv: {\n    textAlign: 'center',\n  },\n  nextButton: {\n    borderRadius: 37,\n    textTransform: 'none',\n    margin: 10,\n    fontFamily: 'Nunito',\n  },\n}));\n\nconst types = [\n  \"Base Spirit\",\n  \"Modifier\",\n  \"Non-alcoholic\",\n];\n\nfunction PlusButton({ props }) {\n  const { \n    id, \n    inputs, \n    setInputs, \n    assignId,\n    spiritObject, \n    setSpiritObject, \n    ingredientsArray, \n    setIngredientsArray \n  } = props;\n\n  // WAY TO GO THIS WORKS FIRST TRY\n  const addIngredientToArray = () => {\n    inputs[id] = { id: id, ...spiritObject}\n    setIngredientsArray([...ingredientsArray, inputs[id]])\n    setInputs([...inputs, {}])\n    setSpiritObject({})\n  }\n\n  return (\n    <div>\n      {\n        inputs.length === id ? \n          <IconButton\n            color=\"primary\"\n            onClick={() => addIngredientToArray()}\n          >\n            <AddBoxIcon fontSize=\"large\"/>\n          </IconButton>\n        : false\n      }\n    </div>\n  )\n}\n\nfunction InputField({ id, inputs, onClick }) {\n  const classes = useStyles();\n\n  return (\n    <div> \n      {\n        inputs.length > 1 ?\n          <IconButton\n            id={id}\n            color=\"primary\"\n            onClick={onClick}\n          >\n            <RemoveIcon fontSize=\"large\"/>\n          </IconButton>\n        : false\n      }\n      <TextField \n//        {...register('name')}\n        id={id}\n        label='Ingredient'\n        variant='outlined'\n        margin='normal'\n        InputProps={{className: classes.input}}\n //       onChange={(e) => onChangeInput(e)}\n      />\n    </div>\n  );\n}\n  \nexport default function Ingredients() {\n  const classes = useStyles();\n  const cocktail = useCocktail();\n  const { register, handleSubmit, control } = useForm();\n  const [spiritObject, setSpiritObject] = useState({});\n  const [ingredientsArray, setIngredientsArray] = useState([]);\n  const [inputs, setInputs] = useState([{}]);\n\n  // This works yo!\n  console.log(\"From ingredients: \", ingredientsArray)\n\n  const handleRemoveInput = (id) => {\n    console.log(id)\n    console.log(inputs.findIndex((input) => input.id === id))\n    setInputs(inputs.filter((input) => input.id !== id));\n  }\n\n  // Success. Now get the Slider working too, and add an id field to spiritOject\n  const onSubmit = () => {\n    cocktail.addIngredients(ingredientsArray)\n  }\n\n  // Now just need to get this working and then make onSubmit add the ingredientsArray to the cocktail object\n  const onChangeSlider = name => (event, newValue) => {\n    setSpiritObject({...spiritObject, [name]: newValue})\n  }\n\n  const onChangeInput = (e) => {\n    setSpiritObject({...spiritObject, [e.target.name]: e.target.value})\n  }\n\n  return (\n    <form \n      noValidate \n      className={classes.formContainer}\n      id='ingredients'\n      name='ingredients'\n      onSubmit={handleSubmit(onSubmit)} \n    >\n      {\n        inputs.map(({input, id}) => { \n          const inputProps = { \n            id, \n            inputs, \n            setInputs, \n            spiritObject, \n            setSpiritObject, \n            ingredientsArray, \n            setIngredientsArray \n          }\n\n          return (\n            <div>\n              <Grid container alignContent=\"center\" alignItems=\"center\">\n                <InputField key={id} id={id} inputs={inputs} onClick={(id) => handleRemoveInput(id)} />\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                  <Select \n                    {...register('type')}\n                    defaultValue=\"\" \n                    id=\"spiritType\"\n                    onChange={(e) => onChangeInput(e)}\n                  >\n                    <ListSubheader>Ingredient Type</ListSubheader>\n                    {\n                      types.map((type, id) => {\n                        return <MenuItem key={id} value={type}>{type}</MenuItem>\n                      })\n                    }\n                  </Select>\n                </FormControl>\n                <PlusButton props={inputProps} />\n              </Grid>\n              {\n                // Pretty sure I'll need to use a Controller component from useForm here\n                cocktail.recipe.unit === \"metric\" ? \n                  <div>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                      Milliliters\n                    </Typography>\n                    <Controller\n                      name='slider'\n                      control={control}\n//                      defaultValue={[0,60]}\n                      render={({ field }) => (\n                      <Slider {...field}\n                      defaultValue={15}\n                      onChange={(value) => console.log(value)}\n                      valueLabelDisplay=\"auto\"\n                      step={5}\n                      min={5}\n                      max={60}\n                      marks\n                      />\n                      )}\n                    />\n                  </div>\n                : <div>\n                    <Typography id=\"discrete-slider\" gutterBottom>\n                      Ounces\n                    </Typography>\n                    <Slider\n                      {...register('amount')}\n                      id='amount'\n                      defaultValue={1}\n                      valueLabelDisplay=\"auto\"\n                      step={0.25}\n                      min={0.25}\n                      max={6}\n                      marks\n                    />\n                  </div>\n              }\n            </div>\n          )\n        })\n      }\n      <div className={classes.buttonDiv}>\n        <Button\n          className={classes.nextButton}\n          type=\"submit\"\n          color=\"primary\"\n          variant=\"outlined\"\n          endIcon={<ExpandMoreIcon />}\n          onClick={cocktail.handleNext}\n        >\n          Keep going\n        </Button>\n      </div>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}