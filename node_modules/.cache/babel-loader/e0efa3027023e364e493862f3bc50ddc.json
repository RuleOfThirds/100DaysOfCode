{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { Container, Typography, TextField, Button, FormControlLabel, Grid, Link, Checkbox, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/jade8.jpg'})`,\n    backgroundSize: 'cover',\n    minHeight: '100vh',\n    paddingTop: theme.spacing(10)\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid grey',\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.primary.background\n  },\n  colorText: {\n    color: theme.palette.primary.main\n  },\n  submitButton: {\n    color: 'white',\n    margin: theme.spacing(1),\n    textTransform: 'none',\n    fontWeight: 'bold'\n  },\n  googButton: {\n    margin: theme.spacing(1),\n    textTransform: 'none',\n    fontWeight: 'bold'\n  },\n  logo: {\n    height: theme.spacing(10),\n    width: theme.spacing(10)\n  },\n  error: {\n    color: theme.palette.secondary.main,\n    fontFamily: 'Nunito',\n    margin: theme.spacing(2)\n  }\n}));\nexport default function SignIn() {\n  _s();\n\n  const classes = useStyles();\n  const firebaseProvider = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n\n    if (name === 'userEmail') {\n      setEmail(value);\n    } else if (name === 'userPassword') {\n      setPassword(value);\n    }\n  };\n\n  const onSignInHandler = e => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(response => {\n      console.log(response.user);\n      firebaseProvider.setCurrentUser(response.user);\n    }).catch(e => setError(e)).finally(() => history.push(\"/\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.paper,\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontFamily: 'Nunito'\n        },\n        component: \"h1\",\n        variant: \"h5\",\n        children: [\"Log in to \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: classes.colorText,\n          children: \"JADE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), error ? /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.error,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this) : false, /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"email\",\n        name: \"userEmail\",\n        label: \"Email\",\n        margin: \"normal\",\n        value: email,\n        required: true,\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: e => onChangeHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"password\",\n        name: \"userPassword\",\n        label: \"Password\",\n        value: password,\n        margin: \"normal\",\n        type: \"password\",\n        required: true,\n        fullWidth: true,\n        variant: \"outlined\",\n        onChange: e => onChangeHandler(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            color: \"secondary\",\n            id: \"remember\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 22\n          }, this),\n          label: \"Remember Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.submitButton,\n        type: \"submit\",\n        name: \"reg\",\n        color: \"primary\",\n        fullWidth: true,\n        variant: \"contained\",\n        onClick: onSignInHandler,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"space-around\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/forgotpassword\",\n            variant: \"body2\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            variant: \"body2\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          color: '#d0d0d0'\n        },\n        children: \"Or\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.googButton,\n        type: \"submit\",\n        name: \"goog\",\n        color: \"secondary\",\n        fullWidth: true,\n        variant: \"outlined\",\n        onClick: () => {\n          firebase.signInWithGoogle().catch(e => {\n            setError(e.message);\n          });\n        },\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"LCBkr6Wa79Yvto5OU1F20E0xNdM=\", false, function () {\n  return [useStyles, useFirebase, useHistory];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignIn.js"],"names":["React","useState","useEffect","useHistory","useFirebase","firebase","Container","Typography","TextField","Button","FormControlLabel","Grid","Link","Checkbox","CircularProgress","makeStyles","useStyles","theme","root","backgroundImage","process","env","PUBLIC_URL","backgroundSize","minHeight","paddingTop","spacing","paper","display","flexDirection","alignItems","alignContent","border","padding","backgroundColor","palette","primary","background","colorText","color","main","submitButton","margin","textTransform","fontWeight","googButton","logo","height","width","error","secondary","fontFamily","SignIn","classes","firebaseProvider","history","email","setEmail","password","setPassword","setError","onChangeHandler","event","name","value","currentTarget","onSignInHandler","e","auth","signInWithEmailAndPassword","then","response","console","log","user","setCurrentUser","catch","finally","push","signInWithGoogle","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  FormControlLabel,\n  Grid,\n  Link,\n  Checkbox,\n  CircularProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/jade8.jpg'})`,\n    backgroundSize: 'cover',\n    minHeight: '100vh',\n    paddingTop: theme.spacing(10),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid grey',\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.primary.background,\n  },\n  colorText: {\n    color: theme.palette.primary.main,\n  },\n  submitButton: {\n    color: 'white',\n    margin: theme.spacing(1),\n    textTransform: 'none',\n    fontWeight: 'bold',\n  },\n  googButton: {\n    margin: theme.spacing(1),\n    textTransform: 'none',\n    fontWeight: 'bold',\n  },\n  logo: {\n    height: theme.spacing(10),\n    width: theme.spacing(10),\n  },\n  error: {\n    color: theme.palette.secondary.main,\n    fontFamily: 'Nunito',\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const firebaseProvider = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const onChangeHandler = (event) => {\n    const {name, value} = event.currentTarget;\n\n    if (name === 'userEmail') {\n      setEmail(value);\n    } else if (name === 'userPassword') {\n      setPassword(value);\n    }\n  }\n\n  const onSignInHandler = (e) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        console.log(response.user);\n        firebaseProvider.setCurrentUser(response.user);\n      })\n      .catch((e) => setError(e))\n      .finally(() => history.push(\"/\"));\n  }\n\n  return (\n    <div className={classes.root}>\n    <Container className={classes.paper} component=\"main\" maxWidth=\"xs\">\n      <Typography style={{fontFamily: 'Nunito'}} component=\"h1\" variant=\"h5\">\n        Log in to <span className={classes.colorText}>JADE</span>\n      </Typography>\n      {\n        error\n          ? <Typography className={classes.error}>{error}</Typography>\n          : false\n      }\n        <TextField\n          id=\"email\"\n          name=\"userEmail\"\n          label=\"Email\"\n          margin=\"normal\"\n          value={email}\n          required\n          fullWidth\n          variant=\"outlined\"\n          onChange={(e) => onChangeHandler(e)}\n        />\n        <TextField\n          id=\"password\"\n          name=\"userPassword\"\n          label=\"Password\"\n          value={password}\n          margin=\"normal\"\n          type=\"password\"\n          required\n          fullWidth\n          variant=\"outlined\"\n          onChange={(e) => onChangeHandler(e)}\n        />\n        <Grid container>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" id=\"remember\" size=\"small\" />}\n            label=\"Remember Me\"\n          />\n        </Grid>\n        <Button \n          className={classes.submitButton}\n          type=\"submit\"\n          name=\"reg\"\n          color=\"primary\"\n          fullWidth\n          variant=\"contained\"\n          onClick={onSignInHandler}\n        >\n          Sign In\n        </Button>\n      <Grid container justify=\"space-around\">\n        <Grid item>\n          <Link href=\"/forgotpassword\" variant=\"body2\">\n            Forgot password?\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"/\" variant=\"body2\">\n            Sign Up\n          </Link>\n        </Grid>\n      </Grid>\n      <Typography style={{color: '#d0d0d0'}}>Or</Typography>\n      <Button \n        className={classes.googButton}\n        type=\"submit\"\n        name=\"goog\"\n        color=\"secondary\"\n        fullWidth\n        variant=\"outlined\"\n        onClick={() => {\n          firebase.signInWithGoogle().catch((e) => {\n            setError(e.message)\n          })\n        }}\n      >\n        Sign in with Google\n      </Button>\n\n    </Container>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}