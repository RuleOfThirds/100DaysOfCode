[{"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/index.js":"1","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/App.js":"2","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/MainBar.js":"3","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Search.js":"4","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/exampleDatabase.js":"5","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile.js":"6","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/profileData.js":"7","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/QRCode.js":"8","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CardList.js":"9","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/EditProfile.js":"10","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/SignIn.js":"11","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/SignUp.js":"12","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products.js":"13","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Copyright.js":"14","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/ItemSheet.js":"15"},{"size":227,"mtime":1614188481961,"results":"16","hashOfConfig":"17"},{"size":854,"mtime":1614189329626,"results":"18","hashOfConfig":"17"},{"size":1177,"mtime":1614188481917,"results":"19","hashOfConfig":"17"},{"size":681,"mtime":1614188481917,"results":"20","hashOfConfig":"17"},{"size":3193,"mtime":1614188934112,"results":"21","hashOfConfig":"17"},{"size":4630,"mtime":1614188481917,"results":"22","hashOfConfig":"17"},{"size":534,"mtime":1614188481961,"results":"23","hashOfConfig":"17"},{"size":572,"mtime":1614188481917,"results":"24","hashOfConfig":"17"},{"size":2338,"mtime":1614189208313,"results":"25","hashOfConfig":"17"},{"size":3235,"mtime":1614188481917,"results":"26","hashOfConfig":"17"},{"size":2189,"mtime":1614188481917,"results":"27","hashOfConfig":"17"},{"size":2099,"mtime":1614188481917,"results":"28","hashOfConfig":"17"},{"size":703,"mtime":1614188481917,"results":"29","hashOfConfig":"17"},{"size":355,"mtime":1614188481917,"results":"30","hashOfConfig":"17"},{"size":716,"mtime":1614190367520,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"t0et0f",{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/index.js",[],["67","68"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/App.js",["69","70","71","72","73","74","75"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/MainBar.js",["76","77","78","79","80"],"import React, { useState } from 'react';\nimport Search from './Search';\n\nimport {\n  AppBar,\n  Toolbar,\n  Avatar,\n  IconButton,\n  Menu,\n  MenuItem\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\n/* Style and image */\nimport { makeStyles } from '@material-ui/core/styles';\nimport tmImage from './assets/ThirdsMediaSmall.png';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.primary.background,\n    boxShadow: 'none',\n  },\n  menuButton: {\n    color: theme.palette.primary.main,\n  },\n  logo: {\n    height: theme.spacing(7),\n    width: theme.spacing(10),\n  },\n}));\n\nexport default function MainBar({ hasLogo }) {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\" className={classes.appBar}>\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        {\n          hasLogo ?\n            <Avatar className={classes.logo} src={tmImage} />\n          : false\n        }\n      </Toolbar>\n    </AppBar>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Search.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/exampleDatabase.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile.js",["81","82"],"import React, { useState }  from 'react';\nimport MainBar from './MainBar';\nimport CardList from './CardList';\nimport QRCode from './QRCode';\nimport ProfilePic from './assets/dj-pct.jpg';\nimport exampleDatabase from './static/exampleDatabase';\nimport {\n  AppBar,\n  Avatar,\n  Container,\n  Box,\n  Grid,\n  Link,\n  Typography,\n  Button,\n  Breadcrumbs,\n  Tabs,\n  Tab\n} from '@material-ui/core';\nimport LinkIcon from '@material-ui/icons/Link';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport EditIcon from '@material-ui/icons/Edit';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    padding: 20,\n    backgroundColor: '#202020', // ok so that color looks way better anyway\n  },\n  navContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  info: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: 'Nunito',\n    borderRadius: 15,\n  },\n  editButton: {\n    borderRadius: 37,\n    height: 37,\n    width: 200,\n    fontFamily: 'Nunito',\n    textTransform: 'none',\n  },\n  navBar: {\n    backgroundColor: '#202020',\n    color: theme.palette.primary.main,\n    borderRadius: 5,\n  },\n  profilePic: {\n    height: theme.spacing(26),\n    width: theme.spacing(26),\n  },\n  breadcrumbs: {\n    fontFamily: 'Nunito',\n    margin: 20\n  },\n  link: {\n    display: 'flex',\n    color: theme.palette.secondary.main\n  },\n  tabPanel: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box className={classes.tabPanel} p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function Profile({ profileData }) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <div>\n      {/* profile container */}\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Avatar className={classes.profilePic} src={ProfilePic} />\n        <Container className={classes.info}>\n          <Typography component=\"h1\" variant=\"h3\" style={{fontFamily: 'Nunito'}}>\n            {profileData.fname} {profileData.lname}\n          </Typography>\n          <span style={{color: '#d0d0d0'}}>{profileData.username}</span>\n          <Breadcrumbs className={classes.breadcrumbs}>\n            <Link rel=\"noopener\" href={profileData.twitter} className={classes.link}>\n              <TwitterIcon />\n            </Link>\n            <Link rel=\"noopener\" href={profileData.instagram} className={classes.link}>\n              <InstagramIcon />\n            </Link>\n            <Link rel=\"noopener\" href={profileData.url} className={classes.link}>\n              <LinkIcon />\n            </Link>\n          </Breadcrumbs>\n          <Typography className={classes.bio} style={{fontFamily: 'Roboto'}}>\n            {profileData.bio}\n          </Typography>\n        </Container>\n        <Button \n          variant=\"outlined\" \n          color=\"primary\" \n          className={classes.editButton}\n          startIcon={<EditIcon />}\n        >\n          Edit Profile\n        </Button>\n      </Container>\n      <AppBar position=\"sticky\" className={classes.navBar}>\n        <Tabs \n          value={value}\n          indicatorColor=\"primary\"\n          onChange={handleChange} \n          variant=\"fullWidth\" \n          aria-label=\"simple tabs example\"\n        >\n          <Tab disableRipple label=\"Info\" {...a11yProps(0)} />\n          <Tab disableRipple label=\"Favorites\" {...a11yProps(1)} />\n          <Tab disableRipple label=\"QR Code\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        Figure out what goes here, or just get rid of it. Maybe this is where edit profile goes\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CardList data={exampleDatabase} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <QRCode />       \n      </TabPanel>\n    </div>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/profileData.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/QRCode.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CardList.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/EditProfile.js",["83"],"import React, { useState } from 'react';\nimport {\n  Container,\n  Avatar,\n  IconButton,\n  Button,\n  TextField,\n  Switch,\n  FormControlLabel,\n  Grid,\n} from '@material-ui/core';\nimport ProfilePic from './assets/dj-pct.jpg';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 25,\n    backgroundColor: theme.palette.primary.background\n  },\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  avatar: {\n    height: theme.spacing(26),\n    width: theme.spacing(26),\n  },\n  field: {\n    marginBottom: 15\n  },\n  switch: {\n    margin: 20\n  },\n  button: {\n    borderRadius: 37\n  },\n}));\n\nexport default function EditProfile({ profileData }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container className={classes.container}>\n        <IconButton>\n          <Avatar className={classes.avatar} src={ProfilePic} />\n        </IconButton>\n      </Container>\n      <Container>\n        <FormControlLabel\n          control={\n            <Switch\n              name=\"checkedB\"\n              color=\"secondary\"\n            />\n          }\n          label=\"Dark Theme\"\n          className={classes.switch}\n        />\n        <form className={classes.form}>\n          <TextField \n            id=\"fname\" \n            label=\"First Name\"\n            variant=\"outlined\"\n            defaultValue={profileData.fname} \n            className={classes.field}\n            fullWidth\n          />\n          <TextField \n            id=\"lname\" \n            label=\"Last Name\"\n            variant=\"outlined\"\n            defaultValue={profileData.lname} \n            className={classes.field}\n            fullWidth\n          />\n          <TextField \n            id=\"bio\" \n            label=\"Bio\"\n            variant=\"outlined\"\n            defaultValue={profileData.bio} \n            className={classes.field}\n            fullWidth \n            multiline \n            rows={5}\n          />\n          <TextField \n            id=\"website\" \n            label=\"Website\"\n            variant=\"outlined\"\n            defaultValue={profileData.url} \n            className={classes.field}\n            fullWidth\n          />\n          <TextField \n            id=\"twitter\"\n            label=\"Twitter\"\n            variant=\"outlined\"\n            defaultValue={profileData.twitter} \n            className={classes.field}\n            fullWidth\n          />\n        </form>\n        <Grid container justify=\"center\">\n          <Grid item xs=\"2\">\n            <Button \n              color=\"primary\" \n              variant=\"outlined\"\n              className={classes.button}\n              startIcon={<SaveIcon />}\n            >\n              Update Profile\n            </Button>\n          </Grid>\n          <Grid item xs=\"2\">\n            <Button \n              color=\"secondary\" \n              variant=\"outlined\"\n              className={classes.button}\n              startIcon={<DeleteIcon />}\n            >\n              Cancel\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/SignIn.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/SignUp.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products.js",["84","85"],"import React from 'react';\nimport MainBar from './MainBar';\nimport Search from './Search';\nimport CardList from './CardList';\nimport {\n  Container,\n  Grid\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: theme.palette.primary.background,\n    zIndex: 1,\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n}));\n\nexport default function Products({ data }) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className={classes.appBar}>\n        <MainBar hasLogo />\n        <Search />\n      </div>\n      <CardList data={data} />\n    </div>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Copyright.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/ItemSheet.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"94","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"95","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":23},{"ruleId":"90","severity":1,"message":"96","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":19},{"ruleId":"90","severity":1,"message":"97","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":14},{"ruleId":"90","severity":1,"message":"98","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":14},{"ruleId":"90","severity":1,"message":"99","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":16},{"ruleId":"90","severity":1,"message":"100","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"101","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"102","line":9,"column":3,"nodeType":"92","messageId":"93","endLine":9,"endColumn":7},{"ruleId":"90","severity":1,"message":"103","line":10,"column":3,"nodeType":"92","messageId":"93","endLine":10,"endColumn":11},{"ruleId":"90","severity":1,"message":"104","line":13,"column":8,"nodeType":"92","messageId":"93","endLine":13,"endColumn":21},{"ruleId":"90","severity":1,"message":"105","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":15},{"ruleId":"90","severity":1,"message":"106","line":12,"column":3,"nodeType":"92","messageId":"93","endLine":12,"endColumn":7},{"ruleId":"90","severity":1,"message":"100","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":25},{"ruleId":"90","severity":1,"message":"107","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":6,"endColumn":12},{"ruleId":"90","severity":1,"message":"106","line":7,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":7},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'EditProfile' is defined but never used.","'exampleDatabase' is defined but never used.","'profileData' is defined but never used.","'SignIn' is defined but never used.","'SignUp' is defined but never used.","'Products' is defined but never used.","'useState' is defined but never used.","'Search' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'AccountCircle' is defined but never used.","'MainBar' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation"]