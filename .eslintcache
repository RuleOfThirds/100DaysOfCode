[{"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/index.js":"1","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/App.js":"2","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignIn.js":"3","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignUp.js":"4","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Wizard.js":"5","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/Products.js":"6","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/ForgotPassword.js":"7","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Cocktail.js":"8","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/exampleDatabase.js":"9","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Copyright.js":"10","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js":"11","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/QRCode.js":"12","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BasicInfo.js":"13","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js":"14","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Instructions.js":"15","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/AppDrawer.js":"16","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Contact.js":"17","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/About.js":"18","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/Profile.js":"19","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/CocktailProvider.js":"20","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/spirits.js":"21","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/FirebaseProvider.js":"22","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Review.js":"23","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/Start.js":"24","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/useWindowPosition.js":"25","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Admin/Panel.js":"26","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/NotFound.js":"27","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/ThirdsMediaLogo.js":"28","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/CardList.js":"29","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/MainBar.js":"30","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/StartPageBar.js":"31","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/Search.js":"32","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/UserMenu.js":"33","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/Settings.js":"34","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/PictureSelector.js":"35","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Message.js":"36"},{"size":341,"mtime":1620613391443,"results":"37","hashOfConfig":"38"},{"size":2443,"mtime":1620670136177,"results":"39","hashOfConfig":"38"},{"size":4362,"mtime":1620613391439,"results":"40","hashOfConfig":"38"},{"size":9395,"mtime":1620613391439,"results":"41","hashOfConfig":"38"},{"size":4265,"mtime":1620669603818,"results":"42","hashOfConfig":"38"},{"size":1097,"mtime":1620671301762,"results":"43","hashOfConfig":"38"},{"size":2415,"mtime":1620613391439,"results":"44","hashOfConfig":"38"},{"size":4535,"mtime":1620673758440,"results":"45","hashOfConfig":"38"},{"size":9116,"mtime":1616531001032,"results":"46","hashOfConfig":"38"},{"size":644,"mtime":1620613391439,"results":"47","hashOfConfig":"38"},{"size":2352,"mtime":1620613391443,"results":"48","hashOfConfig":"38"},{"size":709,"mtime":1620613391439,"results":"49","hashOfConfig":"38"},{"size":3396,"mtime":1620613391443,"results":"50","hashOfConfig":"38"},{"size":7263,"mtime":1620613391443,"results":"51","hashOfConfig":"38"},{"size":3354,"mtime":1620613391443,"results":"52","hashOfConfig":"38"},{"size":3331,"mtime":1620613391443,"results":"53","hashOfConfig":"38"},{"size":4647,"mtime":1620613391439,"results":"54","hashOfConfig":"38"},{"size":1582,"mtime":1620613391439,"results":"55","hashOfConfig":"38"},{"size":4471,"mtime":1620669632674,"results":"56","hashOfConfig":"38"},{"size":1847,"mtime":1620671475952,"results":"57","hashOfConfig":"38"},{"size":180,"mtime":1616531001032,"results":"58","hashOfConfig":"38"},{"size":4355,"mtime":1620673429498,"results":"59","hashOfConfig":"38"},{"size":3464,"mtime":1620669569618,"results":"60","hashOfConfig":"38"},{"size":3924,"mtime":1620613391439,"results":"61","hashOfConfig":"38"},{"size":538,"mtime":1620613391439,"results":"62","hashOfConfig":"38"},{"size":235,"mtime":1620613391439,"results":"63","hashOfConfig":"38"},{"size":102,"mtime":1620196949692,"results":"64","hashOfConfig":"38"},{"size":306,"mtime":1620613391439,"results":"65","hashOfConfig":"38"},{"size":2466,"mtime":1620670376054,"results":"66","hashOfConfig":"38"},{"size":830,"mtime":1620625523258,"results":"67","hashOfConfig":"38"},{"size":1455,"mtime":1620613391443,"results":"68","hashOfConfig":"38"},{"size":3499,"mtime":1620628203758,"results":"69","hashOfConfig":"38"},{"size":3521,"mtime":1620625495523,"results":"70","hashOfConfig":"38"},{"size":4402,"mtime":1620613391443,"results":"71","hashOfConfig":"38"},{"size":2485,"mtime":1620613391443,"results":"72","hashOfConfig":"38"},{"size":978,"mtime":1620613391439,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"pkiulu",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/index.js",[],["150","151"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/App.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignIn.js",["152"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport {\n  Container,\n  Typography,\n  TextField,\n  Button,\n  FormControlLabel,\n  Grid,\n  Link,\n  Checkbox,\n  CircularProgress,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/jade8.jpg'})`,\n    backgroundSize: 'cover',\n    minHeight: '100vh',\n    paddingTop: theme.spacing(10),\n  },\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignContent: 'center',\n    border: '1px solid grey',\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.primary.background,\n  },\n  colorText: {\n    color: theme.palette.primary.main,\n  },\n  submitButton: {\n    color: 'white',\n    margin: theme.spacing(1),\n    textTransform: 'none',\n    fontWeight: 'bold',\n  },\n  googButton: {\n    margin: theme.spacing(1),\n    textTransform: 'none',\n    fontWeight: 'bold',\n  },\n  logo: {\n    height: theme.spacing(10),\n    width: theme.spacing(10),\n  },\n  error: {\n    color: theme.palette.secondary.main,\n    fontFamily: 'Nunito',\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const db = useFirebase();\n  const history = useHistory();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (db.user) {\n      history.push(\"/\");\n    }\n  });\n\n  const onChangeHandler = (event) => {\n    const {name, value} = event.currentTarget;\n\n    if (name === 'userEmail') {\n      setEmail(value);\n    } else if (name === 'userPassword') {\n      setPassword(value);\n    }\n  }\n\n  const onSignInHandler = (e) => {\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((response) => {\n        db.setCurrentUser(response.user);\n      })\n      .catch((e) => setError(e.message))\n  }\n\n  return (\n    <div className={classes.root}>\n    <Container className={classes.paper} component=\"main\" maxWidth=\"xs\">\n      <Typography style={{fontFamily: 'Nunito'}} component=\"h1\" variant=\"h5\">\n        Log in to <span className={classes.colorText}>JADE</span>\n      </Typography>\n      {\n        error\n          ? <Typography className={classes.error}>{error}</Typography>\n          : false\n      }\n        <TextField\n          id=\"email\"\n          name=\"userEmail\"\n          label=\"Email\"\n          margin=\"normal\"\n          value={email}\n          required\n          fullWidth\n          variant=\"outlined\"\n          onChange={(e) => onChangeHandler(e)}\n        />\n        <TextField\n          id=\"password\"\n          name=\"userPassword\"\n          label=\"Password\"\n          value={password}\n          margin=\"normal\"\n          type=\"password\"\n          required\n          fullWidth\n          variant=\"outlined\"\n          onChange={(e) => onChangeHandler(e)}\n        />\n        <Grid container>\n          <FormControlLabel\n            control={<Checkbox color=\"secondary\" id=\"remember\" size=\"small\" />}\n            label=\"Remember Me\"\n          />\n        </Grid>\n        <Button \n          className={classes.submitButton}\n          type=\"submit\"\n          name=\"reg\"\n          color=\"primary\"\n          fullWidth\n          variant=\"contained\"\n          onClick={onSignInHandler}\n        >\n          Sign In\n        </Button>\n      <Grid container justify=\"space-around\">\n        <Grid item>\n          <Link href=\"/forgotpassword\" variant=\"body2\">\n            Forgot password?\n          </Link>\n        </Grid>\n        <Grid item>\n          <Link href=\"/\" variant=\"body2\">\n            Sign Up\n          </Link>\n        </Grid>\n      </Grid>\n      <Typography style={{color: '#d0d0d0'}}>Or</Typography>\n      <Button \n        className={classes.googButton}\n        type=\"submit\"\n        name=\"goog\"\n        color=\"secondary\"\n        fullWidth\n        variant=\"outlined\"\n        onClick={() => {\n          firebase.signInWithGoogle().catch((e) => {\n            setError(e.message)\n          })\n        }}\n      >\n        Sign in with Google\n      </Button>\n\n    </Container>\n    </div>\n  );\n}\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignUp.js",["153"],"import React, { useState, useEffect } from 'react';\nimport Copyright from '../Components/Copyright';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport { useForm } from 'react-hook-form';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Link,\n  CircularProgress,\n  Paper,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(3),\n  },\n  root: {\n    height: '100vh',\n  },\n  jade: {\n    color: theme.palette.primary.main,\n    fontWeight: 'bold',\n  },\n  thirds: {\n    color: theme.palette.secondary.main,\n  },\n  text: {\n    fontFamily: 'Nunito',\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/pour.jpeg'})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  error: {\n    color: theme.palette.secondary.main,\n    fontFamily: 'Nunito',\n    margin: theme.spacing(2),\n  },\n  paragraph: {\n    marginTop: theme.spacing(2),\n    textAlign: 'center',\n    fontFamily: 'Nunito',\n  },\n  submitButton: {\n    color: 'white',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.hover,\n    },\n  },\n}))\n\nfunction UserForm({ formProps }) {\n  const classes = useStyles();\n  const { register, errors, userData, setUserData } = formProps;\n\n  const onChangeInput = (e) => {\n    setUserData({...userData, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      <Divider />\n      <Typography className={classes.paragraph}>\n        Get started with JADE the one and only hospitality social media network. \n      </Typography>\n      <TextField\n        label=\"Name\"\n        {...register(\"name\", { required: true })}\n        margin=\"normal\"\n        fullWidth\n        variant=\"outlined\"\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.name && <span className={classes.error}>This field is required</span>}\n      <Grid container spacing={2}>\n        <Grid item md>\n          <TextField\n            label=\"Email\"\n            {...register(\"email\", { required: true })}\n            margin=\"normal\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.email && <span className={classes.error}>This field is required</span>}\n        </Grid>\n        <Grid item md>\n          <TextField\n            label=\"Phone Number (optional)\"\n            {...register(\"phone\")}\n            margin=\"normal\"\n            fullWidth\n            type=\"tel\"\n            variant=\"outlined\"\n            onChange={(e) => onChangeInput(e)}\n          />\n        </Grid>\n      </Grid>\n      <TextField\n        label=\"Password\"\n        {...register(\"password\", { required: true })}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.password && <span className={classes.error}>This field is required</span>}\n      <TextField\n        label=\"Confirm Password\"\n        {...register(\"confirm\", { required: true })}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.password && <span className={classes.error}>This field is required</span>}\n    </div>\n  );\n}\n\nfunction BusinessForm({ formProps }) {\n  const classes = useStyles();\n  const { register, errors, userData, setUserData } = formProps;\n\n  // Need to set the account type as well as isAdmin on the user object\n  const onChangeInput = (e) => {\n    setUserData({...userData, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      <Divider />\n      <Typography className={classes.paragraph}>\n        Elevate your team and your brand to new heights with <span className={classes.thirds}>ThirdsMedia</span>. \n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item md>\n          <TextField\n            label=\"Name\"\n            {...register(\"name\", { required: true })}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.name && <span className={classes.error}>This field is required</span>}\n        </Grid>\n        <Grid item md>\n          <TextField\n            label=\"Company\"\n            {...register(\"company\", { required: true })}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.company && <span className={classes.error}>This field is required</span>}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item md>\n          <TextField\n            label=\"Email\"\n            {...register(\"email\", { required: true })}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.email && <span className={classes.error}>This field is required</span>}\n        </Grid>\n        <Grid item md>\n          <TextField\n            label=\"Phone Number\"\n            {...register(\"phone\", { required: true })}\n            margin=\"normal\"\n            type=\"tel\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n        </Grid>\n      </Grid>\n      {errors.phone && <span className={classes.error}>This field is required</span>}\n      <TextField\n        label=\"Password\"\n        {...register(\"password\", { required: true })}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      <TextField\n        label=\"Confirm Password\"\n        {...register(\"confirm\", { required: true })}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.password && <span className={classes.error}>This field is required</span>}\n    </div>\n  );\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const { type } = useParams();\n  const history = useHistory();\n  const db = useFirebase();\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const [userData, setUserData] = useState({});\n  const [error, setError] = useState(null);\n  const formProps = { register, errors, userData, setUserData };\n\n  useEffect(() => {\n    if (db.user) {\n      history.push(\"/\");\n    }\n  });\n\n  const handleUserCreation = (email, password, isAdmin) => {\n    if (!db.isPasswordIdentical(userData.password, userData.confirm)) {\n      setError(\"Passwords do not match\");\n      return\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((response) => {\n        const submitProps = { ...userData, type }\n        db.addUserToFirestore(response.user.uid, submitProps, isAdmin);\n        db.setCurrentUser(response.user);\n      })\n      .then(() => {\n        firebase.auth().currentUser.sendEmailVerification().then(() => {\n          history.push(\"/\");\n        })\n      })\n      .catch((e) => setError(e.message));\n  }\n\n  const onSubmitForm = () => {\n    if (type === \"Business\") {\n      handleUserCreation(userData.email, userData.password, true);\n    } else {\n      handleUserCreation(userData.email, userData.password, false);\n    }\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography className={classes.text} component=\"h1\" variant=\"h4\">\n            Join the <span className={classes.jade}>JADE</span> family\n          </Typography>\n          {\n            error\n              ? <Typography className={classes.error}>{error}</Typography>\n              : false\n          }\n          <form noValidate onSubmit={handleSubmit(onSubmitForm)}>\n            {\n              type === 'Business' ?\n                <BusinessForm formProps={formProps} />\n              : type === 'Mixologist' || type === 'Customer' ? \n                  <UserForm formProps={formProps} />\n                : false\n            }\n            <FormControlLabel\n              control={<Checkbox color=\"secondary\" id=\"terms\" />}\n              label=\"I agree to the Terms & Conditions\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n            >\n              Submit\n            </Button>\n          </form>\n          <Link href=\"/signin\">Already have an account? Sign In</Link>\n          <Copyright />\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Wizard.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/Products.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/ForgotPassword.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Cocktail.js",["154","155","156"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/exampleDatabase.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Copyright.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/QRCode.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BasicInfo.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Instructions.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/AppDrawer.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Contact.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/About.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/Profile.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/CocktailProvider.js",["157"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/spirits.js",[],["158","159"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/FirebaseProvider.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Review.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/Start.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/useWindowPosition.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Admin/Panel.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/NotFound.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/ThirdsMediaLogo.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/CardList.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/MainBar.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/StartPageBar.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/Search.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/UserMenu.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/Settings.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/PictureSelector.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Message.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":15,"column":3,"nodeType":"166","messageId":"167","endLine":15,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":14,"column":3,"nodeType":"166","messageId":"167","endLine":14,"endColumn":19},{"ruleId":"164","severity":1,"message":"168","line":11,"column":3,"nodeType":"166","messageId":"167","endLine":11,"endColumn":9},{"ruleId":"164","severity":1,"message":"169","line":25,"column":8,"nodeType":"166","messageId":"167","endLine":25,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":100,"column":6,"nodeType":"172","endLine":100,"endColumn":8,"suggestions":"173"},{"ruleId":"164","severity":1,"message":"174","line":9,"column":16,"nodeType":"166","messageId":"167","endLine":9,"endColumn":22},{"ruleId":"160","replacedBy":"175"},{"ruleId":"162","replacedBy":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'AddAPhotoOutlinedIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'uuidv4' is defined but never used.",["177"],["178"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},"Update the dependencies array to be: [params.id]",{"range":"182","text":"183"},[2393,2395],"[params.id]"]