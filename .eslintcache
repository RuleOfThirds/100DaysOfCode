[{"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/index.js":"1","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/App.js":"2","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignIn.js":"3","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignUp.js":"4","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Wizard.js":"5","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/Products.js":"6","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/ForgotPassword.js":"7","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Cocktail.js":"8","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/exampleDatabase.js":"9","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/MainBar.js":"10","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Copyright.js":"11","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js":"12","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/CardList.js":"13","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/QRCode.js":"14","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BasicInfo.js":"15","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js":"16","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Instructions.js":"17","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/AppDrawer.js":"18","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Contact.js":"19","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/About.js":"20","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/Profile.js":"21","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Success.js":"22","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/CocktailProvider.js":"23","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/spirits.js":"24","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/FirebaseProvider.js":"25","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Review.js":"26","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/Start.js":"27","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/useWindowPosition.js":"28","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Admin/Panel.js":"29","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/EditProfile.js":"30","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/NotFound.js":"31"},{"size":341,"mtime":1620180952493,"results":"32","hashOfConfig":"33"},{"size":2900,"mtime":1620193448404,"results":"34","hashOfConfig":"33"},{"size":4079,"mtime":1620194671086,"results":"35","hashOfConfig":"33"},{"size":8818,"mtime":1620186547993,"results":"36","hashOfConfig":"33"},{"size":3819,"mtime":1620180952489,"results":"37","hashOfConfig":"33"},{"size":2278,"mtime":1620180952489,"results":"38","hashOfConfig":"33"},{"size":2415,"mtime":1620180952489,"results":"39","hashOfConfig":"33"},{"size":4625,"mtime":1616531000948,"results":"40","hashOfConfig":"33"},{"size":9116,"mtime":1616531001032,"results":"41","hashOfConfig":"33"},{"size":5678,"mtime":1620191969328,"results":"42","hashOfConfig":"33"},{"size":644,"mtime":1620180952489,"results":"43","hashOfConfig":"33"},{"size":2352,"mtime":1620180952489,"results":"44","hashOfConfig":"33"},{"size":2488,"mtime":1616531000952,"results":"45","hashOfConfig":"33"},{"size":709,"mtime":1620180952489,"results":"46","hashOfConfig":"33"},{"size":3396,"mtime":1620180952489,"results":"47","hashOfConfig":"33"},{"size":7107,"mtime":1620180952489,"results":"48","hashOfConfig":"33"},{"size":3354,"mtime":1620180952489,"results":"49","hashOfConfig":"33"},{"size":3279,"mtime":1620189801467,"results":"50","hashOfConfig":"33"},{"size":4632,"mtime":1620180952489,"results":"51","hashOfConfig":"33"},{"size":1555,"mtime":1620180952489,"results":"52","hashOfConfig":"33"},{"size":5267,"mtime":1620192079007,"results":"53","hashOfConfig":"33"},{"size":927,"mtime":1620180952489,"results":"54","hashOfConfig":"33"},{"size":1309,"mtime":1620180952489,"results":"55","hashOfConfig":"33"},{"size":180,"mtime":1616531001032,"results":"56","hashOfConfig":"33"},{"size":6900,"mtime":1620189644951,"results":"57","hashOfConfig":"33"},{"size":3834,"mtime":1620180952489,"results":"58","hashOfConfig":"33"},{"size":3909,"mtime":1620180952489,"results":"59","hashOfConfig":"33"},{"size":538,"mtime":1620180952489,"results":"60","hashOfConfig":"33"},{"size":619,"mtime":1620189875681,"results":"61","hashOfConfig":"33"},{"size":3517,"mtime":1620192968018,"results":"62","hashOfConfig":"33"},{"size":102,"mtime":1620193274173,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"pkiulu",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/index.js",[],["133","134"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/App.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignIn.js",["135"],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/SignUp.js",["136"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport { useForm } from 'react-hook-form';\nimport Copyright from '../Components/Copyright';\nimport {\n  Typography,\n  Grid,\n  TextField,\n  Button,\n  Link,\n  CircularProgress,\n  Paper,\n  Divider,\n  FormControlLabel,\n  Checkbox,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(3),\n  },\n  root: {\n    height: '100vh',\n  },\n  jade: {\n    color: theme.palette.primary.main,\n    fontWeight: 'bold',\n  },\n  thirds: {\n    color: theme.palette.secondary.main,\n  },\n  text: {\n    fontFamily: 'Nunito',\n  },\n  image: {\n    backgroundImage: `url(${process.env.PUBLIC_URL + '/assets/pour.jpeg'})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  error: {\n    color: theme.palette.secondary.main,\n    fontFamily: 'Nunito',\n    margin: theme.spacing(2),\n  },\n  paragraph: {\n    marginTop: theme.spacing(2),\n    textAlign: 'center',\n    fontFamily: 'Nunito',\n  },\n  submitButton: {\n    color: 'white',\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.main,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.hover,\n    },\n  },\n}))\n\nfunction UserForm({ formProps }) {\n  const classes = useStyles();\n  const { register, errors, userData, setUserData } = formProps;\n\n  const onChangeInput = (e) => {\n    setUserData({...userData, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      <Divider />\n      <Typography className={classes.paragraph}>\n        Get started with JADE the one and only hospitality social media network. \n      </Typography>\n      <TextField\n        label=\"Name\"\n        {...register(\"name\", { required: true })}\n        value={userData.name}\n        margin=\"normal\"\n        fullWidth\n        variant=\"outlined\"\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.name && <span className={classes.error}>This field is required</span>}\n      <Grid container spacing={2}>\n        <Grid item md>\n          <TextField\n            label=\"Email\"\n            {...register(\"email\", { required: true })}\n            value={userData.email}\n            margin=\"normal\"\n            fullWidth\n            variant=\"outlined\"\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.email && <span className={classes.error}>This field is required</span>}\n        </Grid>\n        <Grid item md>\n          <TextField\n            label=\"Phone Number (optional)\"\n            {...register(\"phone\")}\n            value={userData.phone}\n            margin=\"normal\"\n            fullWidth\n            type=\"tel\"\n            variant=\"outlined\"\n            onChange={(e) => onChangeInput(e)}\n          />\n        </Grid>\n      </Grid>\n      <TextField\n        label=\"Password\"\n        {...register(\"password\", { required: true })}\n        value={userData.password}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.password && <span className={classes.error}>This field is required</span>}\n      <TextField\n        label=\"Confirm Password\"\n        {...register(\"confirm\", { required: true })}\n        value={userData.confirm}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.password && <span className={classes.error}>This field is required</span>}\n    </div>\n  );\n}\n\nfunction BusinessForm({ formProps }) {\n  const classes = useStyles();\n  const { register, errors, userData, setUserData } = formProps;\n\n  // Need to set the account type as well as isAdmin on the user object\n  const onChangeInput = (e) => {\n    setUserData({...userData, [e.target.name]: e.target.value});\n  }\n\n  return (\n    <div>\n      <Divider />\n      <Typography className={classes.paragraph}>\n        Elevate your team and your brand to new heights with <span className={classes.thirds}>ThirdsMedia</span>. \n      </Typography>\n      <Grid container spacing={2}>\n        <Grid item md>\n          <TextField\n            label=\"Name\"\n            {...register(\"name\", { required: true })}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.name && <span className={classes.error}>This field is required</span>}\n        </Grid>\n        <Grid item md>\n          <TextField\n            label=\"Company\"\n            {...register(\"company\", { required: true })}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.company && <span className={classes.error}>This field is required</span>}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item md>\n          <TextField\n            label=\"Email\"\n            {...register(\"email\", { required: true })}\n            margin=\"normal\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n          {errors.email && <span className={classes.error}>This field is required</span>}\n        </Grid>\n        <Grid item md>\n          <TextField\n            label=\"Phone Number\"\n            {...register(\"phone\", { required: true })}\n            margin=\"normal\"\n            type=\"tel\"\n            variant=\"outlined\"\n            fullWidth\n            onChange={(e) => onChangeInput(e)}\n          />\n        </Grid>\n      </Grid>\n      {errors.phone && <span className={classes.error}>This field is required</span>}\n      <TextField\n        label=\"Password\"\n        {...register(\"password\", { required: true })}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      <TextField\n        label=\"Confirm Password\"\n        {...register(\"confirm\", { required: true })}\n        margin=\"normal\"\n        type=\"password\"\n        variant=\"outlined\"\n        fullWidth\n        onChange={(e) => onChangeInput(e)}\n      />\n      {errors.password && <span className={classes.error}>This field is required</span>}\n    </div>\n  );\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const firebase = useFirebase();\n  const { type } = useParams();\n  const { register, handleSubmit, formState: { errors } } = useForm();\n  const [userData, setUserData] = useState({});\n  const formProps = { register, errors, userData, setUserData };\n\n  useEffect(() => {\n    setUserData({...userData, accountType: type});\n  }, []);\n  \n  if (firebase.loading) {\n    return (\n      <div className={classes.loading}>\n        <CircularProgress color=\"secondary\" />\n      </div>\n    )\n  }\n\n  const onSubmitForm = () => {\n    if (firebase.error) {\n      return <span className={classes.error}>{firebase.error}</span>\n    }\n    firebase.signup(userData);\n  }\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={false} sm={4} md={6} className={classes.image} />\n      <Grid item xs={12} sm={8} md={6} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Typography className={classes.text} component=\"h1\" variant=\"h4\">\n            Join the <span className={classes.jade}>JADE</span> family\n          </Typography>\n          { firebase.error ? <span className={classes.error}>{firebase.error}</span> : false }\n          <form noValidate onSubmit={handleSubmit(onSubmitForm)}>\n            {\n              type === 'business' ?\n                <BusinessForm formProps={formProps} />\n              : type === 'mixologist' ? \n                  <UserForm formProps={formProps} />\n                : <UserForm formProps={formProps} />\n            }\n            <FormControlLabel\n              control={<Checkbox color=\"secondary\" id=\"terms\" />}\n              label=\"I agree to the Terms & Conditions\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submitButton}\n            >\n              Submit\n            </Button>\n          </form>\n          <Link href=\"/signin\">Already have an account? Sign In</Link>\n          <Copyright />\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Wizard.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/Products.js",["137","138"],"import React, { useState } from 'react';\nimport MainBar from '../Components/MainBar';\nimport CardList from './CardList';\nimport spirits from '../static/spirits';\nimport {\n  TextField,\n  Grid,\n  FormControl,\n  ListSubheader,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'sticky',\n    top: 0,\n    backgroundColor: theme.palette.primary.background,\n    zIndex: 1,\n    marginBottom: 15,\n    textAlign: 'center',\n  },\n  searchBox: {\n    margin: 20,\n    borderRadius: 50,\n    width: 700,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function Products({ data }) {\n  const classes = useStyles();\n  const [filter, setFilter] = useState('name');\n\n  const handleChange = (event) => {\n    setFilter(event.target.value) \n  }\n\n  return (\n    <div>\n      <div className={classes.appBar}>\n        <MainBar noLogo />\n        <Grid container alignItems='center' justify='center'>\n          <Grid item>\n            <TextField \n              id=\"search\"\n              variant=\"outlined\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />              \n                  </InputAdornment>\n                ),\n                className: classes.searchBox\n              }}\n            />\n          </Grid>\n          <Grid item>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"search-filter\">Filter by</InputLabel>\n              <Select defaultValue=\"\" id=\"search-filter\">\n                <MenuItem value={'name'}>Cocktail Name</MenuItem>\n                <MenuItem value={'creator'}>Cocktail Creator</MenuItem>\n                <ListSubheader>Base Spirit'</ListSubheader>\n                {\n                  spirits.map((spirit, id) => {\n                    return <MenuItem value={spirit}>{spirit}</MenuItem>\n                  })\n                }\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n      </div>\n      <CardList data={data} />\n    </div>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/ForgotPassword.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Cocktail.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/exampleDatabase.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/MainBar.js",["139"],"import React, { useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport AppDrawer from '../Navigation/AppDrawer';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport {\n  Grid,\n  Typography,\n  AppBar,\n  Toolbar,\n  Avatar,\n  IconButton,\n  Button,\n  Menu,\n  Link,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  Divider,\n} from '@material-ui/core';\nimport SortIcon from '@material-ui/icons/Sort';\nimport PersonIcon from '@material-ui/icons/Person';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    flexGrow: 1,\n    background: 'transparent',\n    boxShadow: 'none',\n  },\n  button: {\n    fontFamily: 'Nunito',\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      backgroundColor: 'transparent',\n    },\n  },\n  loginButton: {\n    color: 'white',\n    textTransform: 'none',\n    backgroundColor: theme.palette.primary.main,    \n    fontFamily: 'Nunito',\n    '&:hover': {\n      backgroundColor: theme.palette.secondary.main,\n    },\n  },\n  menu: {\n    textTransform: 'none',\n    fontFamily: 'Nunito',\n  },\n  menuGrid: {\n    padding: 15,\n    textAlign: 'left',\n  },\n}));\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: '1px solid #d3d4d5',\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    transformOrigin={{\n      vertical: 'top',\n      horizontal: 'center',\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    '&:focus': {\n      backgroundColor: theme.palette.primary.main,\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function MainBar() {\n  const classes = useStyles();\n  const firebase = useFirebase();\n  const history = useHistory();\n  const location = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const onOpenDrawer = () => setIsOpen(!isOpen)\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onSignOutHandler = () => {\n    firebase.signout()\n      .catch((e) => console.log(e.message))\n      .finally(() => history.push(\"/signin\"))\n  }\n\n  return (\n    <div>\n      <AppBar \n        position=\"sticky\" \n        elevation={0}\n        color='transparent'\n      >\n        <Toolbar>\n          <IconButton href=\"/\" edge=\"start\"> \n            <Avatar src={'../assets/ThirdsMediaSmall.png'} />\n          </IconButton>\n          <IconButton onClick={onOpenDrawer}>\n            { firebase.user ? <SortIcon /> : false }\n          </IconButton>\n          <div style={{flexGrow: 1}}></div>\n          { \n            firebase.user ? \n              <div>\n                <AppDrawer isOpen={isOpen} handleDrawer={onOpenDrawer} />\n                {\n                  location.pathname !== \"/profile\" ? \n                    <IconButton onClick={handleMenu}>\n                      <Avatar /> \n                    </IconButton>\n                  : false\n                }\n                <StyledMenu\n                  id=\"customized-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <Grid container className={classes.menuGrid}>\n                    <Grid item>\n                      <IconButton>\n                        <Avatar />\n                      </IconButton>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"h6\" className={classes.menu}>\n                        {firebase.user.name}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Link href=\"/profile\" color=\"inherit\">\n                    <StyledMenuItem>\n                      <ListItemIcon>\n                        <PersonIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Profile\" />\n\n                    </StyledMenuItem>\n                  </Link>\n                  <Link href=\"/editprofile\" color=\"inherit\">\n                    <StyledMenuItem>\n                      <ListItemIcon>\n                        <SettingsIcon fontSize=\"small\" />\n                      </ListItemIcon>\n                      <ListItemText primary=\"Settings\" />\n                    </StyledMenuItem>\n                  </Link>\n                  <Divider />\n                  <div style={{margin: 10, textAlign: 'center'}}>\n                    <Button \n                      className={classes.menu} \n                      color=\"secondary\" \n                      variant=\"contained\"\n                      onClick={onSignOutHandler}\n                    >\n                      Log out\n                    </Button>\n                  </div>\n                </StyledMenu>\n              </div>\n            : <Toolbar>\n                <Button className={classes.button} href=\"/about\">About</Button>\n                <Button className={classes.button} href=\"/contact\">Contact Us</Button>\n                <Button className={classes.button}>Training</Button>\n                <Button className={classes.loginButton} href=\"/signin\" variant=\"contained\">Login</Button>\n              </Toolbar>\n          }\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Copyright.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/InfoDrawer.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Products/CardList.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/QRCode.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/BasicInfo.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Ingredients.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Instructions.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Navigation/AppDrawer.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Contact.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/About.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/Profile.js",["140"],"import React, { useState }  from 'react';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport MainBar from '../Components/MainBar';\nimport CardList from '../Products/CardList';\nimport QRCode from '../Components/QRCode';\nimport exampleDatabase from '../static/exampleDatabase';\nimport {\n  AppBar,\n  Avatar,\n  Container,\n  IconButton,\n  Box,\n  Link,\n  Typography,\n  Breadcrumbs,\n  Tabs,\n  Tab,\n  Button,\n} from '@material-ui/core';\nimport LinkIcon from '@material-ui/icons/Link';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    padding: 20,\n    backgroundColor: theme.palette.primary.background\n  },\n  info: {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: 'Nunito',\n    borderRadius: 15,\n  },\n  nav: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  navBar: {\n    backgroundColor: theme.palette.primary.background,\n    color: theme.palette.primary.main,\n    borderRadius: 5,\n  },\n  bio: {\n    fontFamily: 'Roboto',\n  },\n  profilePic: {\n    height: theme.spacing(26),\n    width: theme.spacing(26),\n    cursor: \"pointer\",\n  },\n  breadcrumbs: {\n    fontFamily: 'Nunito',\n    margin: 20\n  },\n  link: {\n    display: 'flex',\n    color: theme.palette.secondary.main\n  },\n  button: {\n    marginLeft: theme.spacing(8),\n    textTransform: 'none',\n    fontFamily: 'Nunito',\n  },\n}));\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  const classes = useStyles();\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box className={classes.nav} p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n/*\n * Firebase Auth API Reference \n * https://firebase.google.com/docs/reference/js/firebase.User\n */\n\nexport default function Profile() {\n  const classes = useStyles();\n  const auth = useFirebase();\n  const [value, setValue] = useState(0);\n  const [image, setImage] = useState(auth.user.picture)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  const handleImageUpload = (event) => {\n    const imageName = event.target.files[0].name\n\n    if (event.target.files.length > 0) {\n      const imageFile = URL.createObjectURL(event.target.files[0]);\n      console.log(auth.user.picture)\n      setImage(imageFile);\n\n      // upload to firebase and set the user's new avatar image\n      auth.uploadImageToStorage(imageFile, imageName)\n    }\n  }\n\n  return (\n    <div>\n      <div style={{backgroundColor: '#202020'}}>\n        <MainBar noLogo />\n      </div>\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <div id=\"avatar-section\">\n          <input \n            accept=\"image/*\" \n            hidden \n            id=\"photo-upload\" \n            type=\"file\" \n            onChange={(e) => handleImageUpload(e)} \n          />\n          <label htmlFor=\"photo-upload\">\n            <Avatar \n              className={classes.profilePic} \n              src={image}\n            />\n          </label>\n        </div>\n        <Container className={classes.info}>\n          <Typography component=\"h1\" variant=\"h3\" style={{fontFamily: 'Nunito'}}>\n            {auth.user.name} <Button variant=\"outlined\" color=\"primary\" href=\"/edit-profile\" className={classes.button}>Edit Profile</Button>\n          </Typography>\n          <span style={{color: '#d0d0d0'}}>{auth.user.accountType}</span>\n          <Breadcrumbs className={classes.breadcrumbs}>\n            <Link rel=\"noopener\" href={auth.user.social.twitter} className={classes.link}>\n              <TwitterIcon />\n            </Link>\n            <Link rel=\"noopener\" href={auth.user.social.instagram} className={classes.link}>\n              <InstagramIcon />\n            </Link>\n            <Link rel=\"noopener\" href={auth.user.social.website} className={classes.link}>\n              <LinkIcon />\n            </Link>\n          </Breadcrumbs>\n          <Typography className={classes.bio}>\n            {auth.user.bio}\n          </Typography>\n        </Container>\n        <QRCode />       \n      </Container>\n      <AppBar position=\"sticky\" className={classes.navBar}>\n        <Tabs \n          value={value}\n          indicatorColor=\"primary\"\n          onChange={handleChange} \n          variant=\"fullWidth\" \n          aria-label=\"simple tabs example\"\n        >\n          <Tab disableRipple label=\"My Creations\" {...a11yProps(1)} />\n          <Tab disableRipple label=\"Favorites\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <CardList data={exampleDatabase} />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <CardList data={exampleDatabase} />\n      </TabPanel>\n    </div>\n  );\n}\n\n\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/Success.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/CocktailProvider.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/static/spirits.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Providers/FirebaseProvider.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/CreationWizard/Review.js",["141","142","143"],"import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Box,\n  Container,\n  IconButton,\n  Button,\n  TextField,\n  AppBar,\n  Toolbar,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport { Link as Scroll } from 'react-scroll';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport AddAPhotoOutlinedIcon from '@material-ui/icons/AddAPhotoOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n    backgroundColor: theme.palette.primary.background,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  },\n  info: {\n    minHeight: '100vh',\n  },\n  infoBox: {\n    border: 'solid 1px #202020',\n    borderRadius: 40,\n    minHeight: '40vh',\n    padding: 20,\n    margin: 20,\n  },\n  scrollButton: {\n    fontSize: '4em',\n  },\n  appBar: {\n    display: 'flex',\n    backgroundColor: theme.palette.primary.background,\n  },\n  title: {\n    fontFamily: 'Nunito',\n    textAlign: 'center',\n    margin: 20,\n  },\n  divider: {\n    margin: 10\n  },\n  button: {\n    borderRadius: 37,\n    width: 450,\n  },\n  buttonDiv: {\n    flex: 1,\n    textAlign: 'center',\n    margin: 25,\n  },\n}));\n\nexport default function Review() {\n  const classes = useStyles();\n  const location = useLocation();\n  const [isPictureSelected, setIsPictureSelected] = useState(false);\n  const [imagePath, setImagePath] = useState('');\n\n  const handlePictureSelect = () => setIsPictureSelected(true)\n\n  return (\n    <div>\n      <div className={classes.header} id='drink-image'>\n        <div> \n          <input \n            type=\"file\" \n            accept=\"image/*\" \n            onChange={handlePictureSelect}\n            value={ e => setImagePath(e.target.value) }\n            hidden \n          />\n          <label htmlFor=\"contained-button-file\">\n            <IconButton>\n              <AddAPhotoOutlinedIcon className={classes.scrollButton} />\n            </IconButton>\n          </label>\n        </div>\n      </div>\n      <div id=\"drink-info\" className={classes.info}>\n        <AppBar position='sticky' className={classes.appBar}>\n          <Toolbar>\n            <Scroll to='drink-image' smooth='true'>\n              <IconButton>\n                <ExpandLessIcon />\n              </IconButton>\n            </Scroll>\n          </Toolbar>\n        </AppBar>\n        <Container style={{textAlign: 'center'}}>\n          <Typography component=\"h1\" variant=\"h2\" className={classes.title}>\n            {location.data.name}\n          </Typography>\n          <Typography color=\"textSecondary\">\n            {location.data.creator}, {location.data.location}, {location.data.date}\n          </Typography>\n          <Divider variant=\"middle\" className={classes.divider} />\n          <Typography color=\"textSecondary\">\n            {location.data.description}\n          </Typography>\n        </Container>\n        <Box className={classes.infoBox} boxShadow={5}>\n          {\n            location.data.ingredients.map((ingredient) => {\n              return <Typography>{ingredient.amount} {ingredient.unit} {ingredient.name}</Typography>\n            })\n          }\n          {/*\n            location.data.miscellaneous.map((item) => {\n              return <Typography>{item}</Typography>\n            })\n            */\n          }\n          <Divider variant=\"middle\" className={classes.divider} />\n          <Typography>{location.data.instructions}</Typography>\n        </Box>\n        <div className={classes.buttonDiv}>\n          <Button\n            className={classes.button}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Publish\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/Start.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Auth/useWindowPosition.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Admin/Panel.js",["144"],"import React from 'react';\nimport { useFirebase } from '../Providers/FirebaseProvider';\nimport {\n  Container,\n  Typography,\n} from '@material-ui/core';\n//import { makeStyles } from '@material-ui/core/styles';\n\n//const useStyles = makeStyles(theme => ({\n//}));\n\nexport default function Panel() {\n//  const classes = useStyles();\n  const firebase = useFirebase();\n\n  return (\n    <Container>\n      <Typography>\n        Employees\n      </Typography>\n      {\n        firebase.user.employees.map((employee) => {\n          console.log(\"Employee: \", firebase.getEmployees(employee))\n        })\n      }\n    </Container>\n  );\n}\n","/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Profile/EditProfile.js",[],"/home/dj/Development/ThirdsMedia/100DaysOfCode/src/Components/NotFound.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":247,"column":6,"nodeType":"155","endLine":247,"endColumn":8,"suggestions":"156"},{"ruleId":"149","severity":1,"message":"157","line":40,"column":10,"nodeType":"151","messageId":"152","endLine":40,"endColumn":16},{"ruleId":"149","severity":1,"message":"158","line":42,"column":9,"nodeType":"151","messageId":"152","endLine":42,"endColumn":21},{"ruleId":"149","severity":1,"message":"159","line":98,"column":9,"nodeType":"151","messageId":"152","endLine":98,"endColumn":13},{"ruleId":"149","severity":1,"message":"160","line":11,"column":3,"nodeType":"151","messageId":"152","endLine":11,"endColumn":13},{"ruleId":"149","severity":1,"message":"161","line":8,"column":3,"nodeType":"151","messageId":"152","endLine":8,"endColumn":12},{"ruleId":"149","severity":1,"message":"162","line":69,"column":10,"nodeType":"151","messageId":"152","endLine":69,"endColumn":27},{"ruleId":"149","severity":1,"message":"163","line":70,"column":10,"nodeType":"151","messageId":"152","endLine":70,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":22,"column":48,"nodeType":"166","messageId":"167","endLine":22,"endColumn":50},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Copyright' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'type' and 'userData'. Either include them or remove the dependency array. You can also do a functional update 'setUserData(u => ...)' if you only need 'userData' in the 'setUserData' call.","ArrayExpression",["170"],"'filter' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'open' is assigned a value but never used.","'IconButton' is defined but never used.","'TextField' is defined but never used.","'isPictureSelected' is assigned a value but never used.","'imagePath' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},"Update the dependencies array to be: [type, userData]",{"range":"173","text":"174"},[7078,7080],"[type, userData]"]